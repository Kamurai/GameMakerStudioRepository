<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Game_Button</spriteName>
  <solid>-1</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Display</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Index = 0;
Limit = 7; //Numbers of games available
image_speed = 0;

/*
0 = Chess
1 = Playing Cards
2 = Quit / Standard
3 = Catan
4 = Monster Office Workplace
5 = Nine Card
6 = Penny Arcade
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Adjust = true;
AdjustText = false;

ModeWidth = 120;
ModeHeight = 56;
StatusWidth = 136;
StubHeight = 56;
ColorHeight = 56;
PhaseHeight = 56;

x = view_xview[0] + view_wview[0] - StatusWidth - ModeWidth; //Align to left of the Status object
y = view_yview[0] + view_hview[0] - StubHeight - ColorHeight - PhaseHeight - ModeHeight; //Align to bottom of view, above the Phase object

DynXRatio = (x - view_xview[0]) / view_wview[0];
x = view_xview[0] + DynXRatio * view_wview[0];

DynYRatio = (y - view_yview[0]) / view_hview[0];;
y = view_yview[0] + DynYRatio * view_hview[0];

DynWidthRatio = ModeWidth / view_wview[0];
DynWidth = DynWidthRatio * view_wview[0]; //===ModeWidth

DynHeightRatio = ModeHeight / view_hview[0];
DynHeight = DynHeightRatio * view_hview[0]; //===ModeHeight
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = obj_ChatView.x;
//y = obj_ChatView.y + obj_ChatView.sprite_height + obj_ChatInput.sprite_height + 8;//16;

x = view_xview[0] + DynXRatio * view_wview[0];
y = view_yview[0] + DynYRatio * view_hview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Index -= 1;
if(Index == (-1))
{
    Index = (Limit-1);  
}
image_index = Index;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( obj_Phase.Index &lt; 0 )
{
    obj_Phase.Index = 0;
    obj_Phase.image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( obj_Color.Index &lt; 0 )
{
    obj_Color.Index = 0;
    obj_Color.image_index = 0;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( Index == 0 ) //Chess
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 2;
    obj_Box.Limit = 7;
}
else if( Index == 1) //Playing Cards
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    if( obj_Phase.Index == 0)
    {
        obj_Box.Limit = 54;
    }
    else if( obj_Phase.Index == 1)
    {
        obj_Box.Limit = 2;
    }
}
else if( Index == 2) //Quit
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    obj_Box.Limit = 3;
}
else if( Index == 3) //Catan
{
    obj_Phase.Limit = 2; //2
    obj_Color.Limit = 7;
    if( obj_Phase.Index == 0) //Setup
    {
        obj_Box.Limit = 69;
    }
    else if( obj_Phase.Index == 1) //Play
    {
        obj_Box.Limit = 9;
    }
}
else if( Index == 4) //Monster Office Workplace
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    obj_Box.Limit = 3;

}
else if( Index == 5) //Nine Card
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    obj_Box.Limit = 3;

}
else if( Index == 6) //Penny Arcade
{
    obj_Phase.Limit = 2; //2
    obj_Color.Limit = 7;
    if( obj_Phase.Index == 0) //Setup
    {
        obj_Box.Limit = 69;
    }
    else if( obj_Phase.Index == 1) //Play
    {
        obj_Box.Limit = 9;
    }

}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_Box.Pressed == 1)
{
    with(obj_Option)
    {
        instance_destroy();
    }
    
    for(i=0;i&lt;obj_Box.Limit;i+=1)
    {
        instance_create(obj_Box.x,obj_Box.y,obj_Option);
        obj_Box.OptionCount += 1;
    }
    obj_Box.OptionCount = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Index += 1;
if(Index == Limit)
{
    Index = 0;   
}

image_index = Index;

image_index = 3;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( obj_Phase.Index &gt;= obj_Phase.Limit )
{
    obj_Phase.Index = obj_Phase.Limit-1;
    obj_Phase.image_index = obj_Phase.Limit-1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( obj_Color.Index &gt;= obj_Color.Limit )
{
    obj_Color.Index = obj_Color.Limit-1;
    obj_Color.image_index = obj_Color.Limit-1;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( Index == 0 ) //Chess
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 2;
    obj_Box.Limit = 7;
}
else if( Index == 1) //Playing Cards
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    
    if( obj_Phase.Index == 0) //Setup
    {
        obj_Box.Limit = 54;
    }
    else if( obj_Phase.Index == 1) //Play
    {
        obj_Box.Limit = 2;
    }
}
else if( Index == 2) //Quit
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    obj_Box.Limit = 3;
}
else if( Index == 3) //Catan
{
    obj_Phase.Limit = 2; //2
    obj_Color.Limit = 7;
    if( obj_Phase.Index == 0) //Setup
    {
        obj_Box.Limit = 69;
    }
    else if( obj_Phase.Index == 1) //Play
    {
        obj_Box.Limit = 9;
    }
}
else if( Index == 4) //Monster Office Workplace
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    obj_Box.Limit = 3;

}
else if( Index == 5) //Nine Card
{
    obj_Phase.Limit = 2;
    obj_Color.Limit = 1;
    obj_Box.Limit = 3;

}
else if( Index == 6) //Penny Arcade
{
    obj_Phase.Limit = 2; //2
    obj_Color.Limit = 7;
    if( obj_Phase.Index == 0) //Setup
    {
        obj_Box.Limit = 69;
    }
    else if( obj_Phase.Index == 1) //Play
    {
        obj_Box.Limit = 9;
    }

}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_Box.Pressed == 1)
{
    with(obj_Option)
    {
        instance_destroy();
    }
    
    for(i=0;i&lt;obj_Box.Limit;i+=1)
    {
        instance_create(obj_Box.x,obj_Box.y,obj_Option);
        obj_Box.OptionCount += 1;
    }
    obj_Box.OptionCount = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_stretched(spr_Game_Button, Index, x, y, DynWidth, DynHeight);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>60,60</point>
  </PhysicsShapePoints>
</object>
