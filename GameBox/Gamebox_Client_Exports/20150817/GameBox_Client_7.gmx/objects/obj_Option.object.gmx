<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Option</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Display</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Index = obj_Box.OptionCount;

offset = 48
scale = offset - 8;

Startup = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(Startup == 0)
{
    if(obj_Mode.Index == 0) //if Chess
    {
        sprite_index = spr_OptChess;
        image_index = Index;
        if(Index == 0)
        {
            x = x + (offset * 1);
            y = y + (offset * 0);
            MasterIndex = 0; //Chess Board
        }
        else if(Index == 1)
        {
            x = x + (offset * 2);
            y = y + (offset * 0);
            MasterIndex = 1; //Chess King
        }
        else if(Index == 2)
        {
            x = x + (offset * 3);
            y = y + (offset * 0);
            MasterIndex = 2; //Chess Queen
        }
        else if(Index == 3)
        {
            x = x + (offset * 0);
            y = y + (offset * 1);
            MasterIndex = 3; //Chess Pawn
        }
        else if(Index == 4)
        {
            x = x + (offset * 1);
            y = y + (offset * 1);
            MasterIndex = 4; //Chess Rook
        }
        else if(Index == 5)
        {
            x = x + (offset * 2);
            y = y + (offset * 1);
            MasterIndex = 5; //Chess Bishop
        }
        else if(Index == 6)
        {
            x = x + (offset * 3);
            y = y + (offset * 1);
            MasterIndex = 6; //Chess Knight
        }
        else
        {
            instance_destroy();
        }
    }
    else if(obj_Mode.Index == 1) //if Playing Cards
    {
        sprite_index = spr_OptPlayingCards;
        image_index = Index;
        if(Index == 0)
        {
            x = x + (offset * 1);
            y = y + (offset * 0);
            MasterIndex = 7; //Playing Card Deck
        }
        else if(Index == 1)
        {
            x = x + (offset * 2);
            y = y + (offset * 0);
            MasterIndex = 8; //Joker
        }
        else if(obj_Phase.Index == 0) //Setup
        {
            if(Index == 2)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
                MasterIndex = 9; //2 of Diamonds
            }
            else if(Index == 3)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
                MasterIndex = 10; //3 of Diamonds
            }
            else if(Index == 4)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
                MasterIndex = 11; //4 of Diamonds
            }
            else if(Index == 5)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
                MasterIndex = 12; //5 of Diamonds
            }
            else if(Index == 6)
            {
                x = x + (offset * 4);
                y = y + (offset * 1);
                MasterIndex = 13; //6 of Diamonds
            }
            else if(Index == 7)
            {
                x = x + (offset * 5);
                y = y + (offset * 1);
                MasterIndex = 14; //7 of Diamonds
            }
            else if(Index == 8)
            {
                x = x + (offset * 6);
                y = y + (offset * 1);
                MasterIndex = 15; //8 of Diamonds
            }
            else if(Index == 9)
            {
                x = x + (offset * 7);
                y = y + (offset * 1);
                MasterIndex = 16; //9 of Diamonds
            }
            else if(Index == 10)
            {
                x = x + (offset * 8);
                y = y + (offset * 1);
                MasterIndex = 17; //10 of Diamonds
            }
            else if(Index == 11)
            {
                x = x + (offset * 9);
                y = y + (offset * 1);
                MasterIndex = 18; //Jack of Diamonds
            }
            else if(Index == 12)
            {
                x = x + (offset * 10);
                y = y + (offset * 1);
                MasterIndex = 19; //Queen of Diamonds
            }
            else if(Index == 13)
            {
                x = x + (offset * 11);
                y = y + (offset * 1);
                MasterIndex = 20; //if King of Diamonds
            }
            else if(Index == 14)
            {
                x = x + (offset * 12);
                y = y + (offset * 1);
                MasterIndex = 21; //Ace of Diamonds
            }
            else if(Index == 15)
            {
                x = x + (offset * 0);
                y = y + (offset * 2);
                MasterIndex = 22; //2 of Clubs
            }
            else if(Index == 16)
            {
                x = x + (offset * 1);
                y = y + (offset * 2);
                MasterIndex = 23; //3 of Clubs
            }
            else if(Index == 17)
            {
                x = x + (offset * 2);
                y = y + (offset * 2);
                MasterIndex = 24; //4 of Clubs
            }
            else if(Index == 18)
            {
                x = x + (offset * 3);
                y = y + (offset * 2);
                MasterIndex = 25; //5 of Clubs
            }
            else if(Index == 19)
            {
                x = x + (offset * 4);
                y = y + (offset * 2);
                MasterIndex = 26; //6 of Clubs
            }
            else if(Index == 20)
            {
                x = x + (offset * 5);
                y = y + (offset * 2);
                MasterIndex = 27; //7 of Clubs
            }
            else if(Index == 21)
            {
                x = x + (offset * 6);
                y = y + (offset * 2);
                MasterIndex = 28; //8 of Clubs
            }
            else if(Index == 22)
            {
                x = x + (offset * 7);
                y = y + (offset * 2);
                MasterIndex = 29; //9 of Clubs
            }
            else if(Index == 23)
            {
                x = x + (offset * 8);
                y = y + (offset * 2);
                MasterIndex = 30; //10 of Clubs
            }
            else if(Index == 24)
            {
                x = x + (offset * 9);
                y = y + (offset * 2);
                MasterIndex = 31; //Jack of Clubs
            }
            else if(Index == 25)
            {
                x = x + (offset * 10);
                y = y + (offset * 2);
                MasterIndex = 32; //Queen of Clubs
            }
            else if(Index == 26)
            {
                x = x + (offset * 11);
                y = y + (offset * 2);
                MasterIndex = 33; //King of Clubs
            }
            else if(Index == 27)
            {
                x = x + (offset * 12);
                y = y + (offset * 2);
                MasterIndex = 34; //Ace of Clubs
            }
            else if(Index == 28)
            {
                x = x + (offset * 0);
                y = y + (offset * 3);
                MasterIndex = 35; //2 of Hearts
            }
            else if(Index == 29)
            {
                x = x + (offset * 1);
                y = y + (offset * 3);
                MasterIndex = 36; //3 of Hearts
            }
            else if(Index == 30)
            {
                x = x + (offset * 2);
                y = y + (offset * 3);
                MasterIndex = 37; //4 of Hearts
            }
            else if(Index == 31)
            {
                x = x + (offset * 3);
                y = y + (offset * 3);
                MasterIndex = 38; //5 of Hearts
            }
            else if(Index == 32)
            {
                x = x + (offset * 4);
                y = y + (offset * 3);
                MasterIndex = 39; //6 of Hearts
            }
            else if(Index == 33)
            {
                x = x + (offset * 5);
                y = y + (offset * 3);
                MasterIndex = 40; //7 of Hearts
            }
            else if(Index == 34)
            {
                x = x + (offset * 6);
                y = y + (offset * 3);
                MasterIndex = 41; //8 of Hearts
            }
            else if(Index == 35)
            {
                x = x + (offset * 7);
                y = y + (offset * 3);
                MasterIndex = 42; //9 of Hearts
            }
            else if(Index == 36)
            {
                x = x + (offset * 8);
                y = y + (offset * 3);
                MasterIndex = 43; //10 of Hearts
            }
            else if(Index == 37)
            {
                x = x + (offset * 9);
                y = y + (offset * 3);
                MasterIndex = 44; //Jack of Hearts
            }
            else if(Index == 38)
            {
                x = x + (offset * 10);
                y = y + (offset * 3);
                MasterIndex = 45; //Queen of Hearts
            }
            else if(Index == 39)
            {
                x = x + (offset * 11);
                y = y + (offset * 3);
                MasterIndex = 46; //King of Hearts
            }
            else if(Index == 40)
            {
                x = x + (offset * 12);
                y = y + (offset * 3);
                MasterIndex = 47; //Ace of Hearts
            }
            else if(Index == 41)
            {
                x = x + (offset * 0);
                y = y + (offset * 4);
                MasterIndex = 48; //2 of Spades
            }
            else if(Index == 42)
            {
                x = x + (offset * 1);
                y = y + (offset * 4);
                MasterIndex = 49; //3 of Spades
            }
            else if(Index == 43)
            {
                x = x + (offset * 2);
                y = y + (offset * 4);
                MasterIndex = 50; //4 of Spades
            }
            else if(Index == 44)
            {
                x = x + (offset * 3);
                y = y + (offset * 4);
                MasterIndex = 51; //5 of Spades
            }
            else if(Index == 45)
            {
                x = x + (offset * 4);
                y = y + (offset * 4);
                MasterIndex = 52; //6 of Spades
            }
            else if(Index == 46)
            {
                x = x + (offset * 5);
                y = y + (offset * 4);
                MasterIndex = 53; //7 of Spades
            }
            else if(Index == 47)
            {
                x = x + (offset * 6);
                y = y + (offset * 4);
                MasterIndex = 54; //8 of Spades
            }
            else if(Index == 48)
            {
                x = x + (offset * 7);
                y = y + (offset * 4);
                MasterIndex = 55; //9 of Spades
            }
            else if(Index == 49)
            {
                x = x + (offset * 8);
                y = y + (offset * 4);
                MasterIndex = 56; //10 of Spades
            }
            else if(Index == 50)
            {
                x = x + (offset * 9);
                y = y + (offset * 4);
                MasterIndex = 57; //Jack of Spades
            }
            else if(Index == 51)
            {
                x = x + (offset * 10);
                y = y + (offset * 4);
                MasterIndex = 58; //Queen of Spades
            }
            else if(Index == 52)
            {
                x = x + (offset * 11);
                y = y + (offset * 4);
                MasterIndex = 59; //King of Spades
            }
            else if(Index == 53)
            {
                x = x + (offset * 12);
                y = y + (offset * 4);
                MasterIndex = 60; //Ace of Spades
            }
            else
            {
                instance_destroy();
            }

        }
        else
        {
            instance_destroy();
        }
    }
    else if(obj_Mode.Index == 2) //if Quit
    {
        sprite_index = spr_OptQuit;
        image_index = Index;
        if(Index == 0)
        {
            x = x + (offset * 1);
            y = y + (offset * 0);
            MasterIndex = 81; //Standard Score Chart
            }
        else if(Index == 1)
        {
            x = x + (offset * 2);
            y = y + (offset * 0);
            MasterIndex = 65; //Standard D6
        }
        else
        {
            instance_destroy();
        }
    }
    else if(obj_Mode.Index == 3) //if Catan
    {
        sprite_index = spr_OptCatan;
        image_index = Index;
        if(obj_Phase.Index == 0) //if Setup
        {
            //board
            if(Index == 0)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 103; //Catan Board
            }
            //event cards
            else if(Index == 1)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 116; //Catan Wealthiest Card
            }    
            else if(Index == 2)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 117; //Catan Harbormaster Card
            }    
            else if(Index == 3)
            {
                x = x + (offset * 4);
                y = y + (offset * 0);
                MasterIndex = 118; //Catan Longest Road Card
            }    
            else if(Index == 4)
            {
                x = x + (offset * 5);
                y = y + (offset * 0);
                MasterIndex = 119; //Catan Largest Army Card
            }
        //barbarian chart
            else if(Index == 5)
            {
                x = x + (offset * 6);
                y = y + (offset * 0);
                MasterIndex = 120; //Catan Barbarian Chart
            }
        //dice
            else if(Index == 6)
            {
                x = x + (offset * 7);
                y = y + (offset * 0);
                MasterIndex = 82; //Catan Event D6
            }  
            else if(Index == 7)
            {
                x = x + (offset * 8);
                y = y + (offset * 0);
                MasterIndex = 7; //Catan Red D6
            }    
            else if(Index == 84)
            {
                x = x + (offset * 9);
                y = y + (offset * 0);
                MasterIndex = 8; //Catan Yellow D6
            }
        //stacks
            else if(Index == 9)
            {
                x = x + (offset * 10);
                y = y + (offset * 0);
                MasterIndex = 180; //Catan Tile Stack
            }                   
            else if(Index == 10)
            {
                x = x + (offset * 11);
                y = y + (offset * 0);
                MasterIndex = 184; //Catan Fish Tile Stack
            }                   
            else if(Index == 11)
            {
                x = x + (offset * 12);
                y = y + (offset * 0);
                MasterIndex = 181; //Catan Number Chit Stack
            }                   
            else if(Index == 12)
            {
                x = x + (offset * 13);
                y = y + (offset * 0);
                MasterIndex = 182; //Catan Fish Chit Stack
            }                   
            else if(Index == 13)
            {
                x = x + (offset * 14);
                y = y + (offset * 0);
                MasterIndex = 183; //Catan Harbor Chit Stack
            }
        //decks
             else if(Index == 14)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
                MasterIndex = 166; //Catan Victory Deck
            }
            else if(Index == 15)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
                MasterIndex = 167; //Catan Development Deck
            }    
            else if(Index == 16)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
                MasterIndex = 168; //Catan Building Progress Deck
            }   
            else if(Index == 17)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
                MasterIndex = 169; //Catan Politics Progress Deck
            }   
            else if(Index == 18)
            {
                x = x + (offset * 4);
                y = y + (offset * 1);
                MasterIndex = 170; //Catan Trade Progress Deck
            }    
            else if(Index == 19)
            {
                x = x + (offset * 5);
                y = y + (offset * 1);
                MasterIndex = 171; //Catan Brick Resource Deck
            }    
            else if(Index == 20)
            {
                x = x + (offset * 6);
                y = y + (offset * 1);
                MasterIndex = 172; //Catan Ore Resource Deck
            }    
            else if(Index == 21)
            {
                x = x + (offset * 7);
                y = y + (offset * 1);
                MasterIndex = 173; //Catan Sheep Resource Deck
            }    
            else if(Index == 22)
            {
                x = x + (offset * 8);
                y = y + (offset * 1);
                MasterIndex = 174; //Catan Wheat Resource Deck
            }  
            else if(Index == 23)
            {
                x = x + (offset * 9);
                y = y + (offset * 1);
                MasterIndex = 175; //Catan Wood Resource Deck
            }   
            else if(Index == 24)
            {
                x = x + (offset * 10);
                y = y + (offset * 1);
                MasterIndex = 176; //Catan Cloth Commodity Deck
            }   
            else if(Index == 25)
            {
                x = x + (offset * 11);
                y = y + (offset * 1);
                MasterIndex = 177; //Catan Coins Commodity Deck
            }    
            else if(Index == 26)
            {
                x = x + (offset * 12);
                y = y + (offset * 1);
                MasterIndex = 178; //Catan Paper Commodity Deck
            }    
            else if(Index == 27)
            {
                x = x + (offset * 13);
                y = y + (offset * 1);
                MasterIndex = 179; //Catan Fish Deck
            }   
            //chits
            else if(Index == 28)
            {
                x = x + (offset * 0);
                y = y + (offset * 2);
                MasterIndex = 121; //Catan River Chit
            }   
            else if(Index == 29)
            {
                x = x + (offset * 1);
                y = y + (offset * 2);
                MasterIndex = 122; //Catan 3:1 Harbor Chit
            }    
            else if(Index == 30)
            {
                x = x + (offset * 2);
                y = y + (offset * 2);
                MasterIndex = 123; //Catan 2:1 Brick Harbor Chit
            }    
            else if(Index == 31)
            {
                x = x + (offset * 3);
                y = y + (offset * 2);
                MasterIndex = 124; //Catan 2:1 Ore Harbor Chit
            }   
            else if(Index == 32)
            {
                x = x + (offset * 4);
                y = y + (offset * 2);
                MasterIndex = 125; //Catan 2:1 Sheep Harbor Chit
            }    
            else if(Index == 33)
            {
                x = x + (offset * 5);
                y = y + (offset * 2);
                MasterIndex = 126; //Catan 2:1 Wheat Harbor Chit
            }    
            else if(Index == 34)
            {
                x = x + (offset * 6);
                y = y + (offset * 2);
                MasterIndex = 127; //Catan 2:1 Wood Harbor Chit
            }   
            //fish chits
            else if(Index == 35)
            {
                x = x + (offset * 0);
                y = y + (offset * 3);
                MasterIndex = 114; //Catan Fish Chit 2
            }
            else if(Index == 36)
            {
                x = x + (offset * 1);
                y = y + (offset * 3);
                MasterIndex = 196; //Catan Fish Chit 3
            }
            else if(Index == 37)
            {
                x = x + (offset * 2);
                y = y + (offset * 3);
                MasterIndex = 197; //Catan Fish Chit 4
            }
            else if(Index == 38)
            {
                x = x + (offset * 3);
                y = y + (offset * 3);
                MasterIndex = 198; //Catan Fish Chit 5
            }
            else if(Index == 39)
            {
                x = x + (offset * 4);
                y = y + (offset * 3);
                MasterIndex = 199; //Catan Fish Chit 6
            }
            else if(Index == 40)
            {
                x = x + (offset * 5);
                y = y + (offset * 3);
                MasterIndex = 200; //Catan Fish Chit 7
            }
            else if(Index == 41)
            {
                x = x + (offset * 6);
                y = y + (offset * 3);
				MasterIndex = 201; //Catan Fish Chit 8
            }
            else if(Index == 42)
            {
                x = x + (offset * 7);
				y = y + (offset * 3);
				MasterIndex = 202; //Catan Fish Chit 9
            }
            else if(Index == 43)
            {
                x = x + (offset * 8);
                y = y + (offset * 3);
				MasterIndex = 203; //Catan Fish Chit 10
            }
            else if(Index == 44)
            {
                x = x + (offset * 9);
                y = y + (offset * 3);
				MasterIndex = 204; //Catan Fish Chit 11
            }
            else if(Index == 45)
            {
                x = x + (offset * 10);
                y = y + (offset * 3);
				MasterIndex = 205; //Catan Fish Chit 12
            }
            else if(Index == 46)
            {
                x = x + (offset * 11);
                y = y + (offset * 3);
				MasterIndex = 206; //Catan Fish Chit 4-10
            }
            else if(Index == 47)
            {
                x = x + (offset * 12);
                y = y + (offset * 3);
				MasterIndex = 207; //Catan Fish Chit 2-3-11-12
            }            
            //number chits
            else if(Index == 48)
            {
                x = x + (offset * 0);
                y = y + (offset * 4);
				MasterIndex = 113; //Catan Number Chit 2
            }
            else if(Index == 49)
            {
                x = x + (offset * 1);
                y = y + (offset * 4);
				MasterIndex = 186; //Catan Number Chit 3
            }
            else if(Index == 50)
            {
                x = x + (offset * 2);
                y = y + (offset * 4);
				MasterIndex = 187; //Catan Number Chit 4
            }
            else if(Index == 51)
            {
                x = x + (offset * 3);
                y = y + (offset * 4);
				MasterIndex = 188; //Catan Number Chit 5
            }
            else if(Index == 52)
            {
                x = x + (offset * 4);
                y = y + (offset * 4);
				MasterIndex = 189; //Catan Number Chit 6
            }
            else if(Index == 53)
            {
                x = x + (offset * 5);
                y = y + (offset * 4);
				MasterIndex = 190; //Catan Number Chit 7
            }
            else if(Index == 54)
            {
                x = x + (offset * 6);
                y = y + (offset * 4);
				MasterIndex = 191; //Catan Number Chit 8
            }
            else if(Index == 55)
            {
                x = x + (offset * 7);
                y = y + (offset * 4);
				MasterIndex = 192; //Catan Number Chit 9
            }
            else if(Index == 56)
            {
                x = x + (offset * 8);
                y = y + (offset * 4);
				MasterIndex = 193; //Catan Number Chit 10
            }
            else if(Index == 57)
            {
                x = x + (offset * 9);
                y = y + (offset * 4);
				MasterIndex = 194; //Catan Number Chit 11
            }
            else if(Index == 58)
            {
                x = x + (offset * 10);
                y = y + (offset * 4);
				MasterIndex = 195; //Catan Number Chit 12
            }
            //Score Chart
            else if(Index == 59)
            {
                x = x + (offset * 0);
                y = y + (offset * 5);
				MasterIndex = 185; //Catan Score Chart
            }
            //tokens
            else if(Index == 60)
            {
                x = x + (offset * 1);
                y = y + (offset * 5);
				MasterIndex = 109; //Catan Thief
            }    
            else if(Index == 61)
            {
                x = x + (offset * 2);
                y = y + (offset * 5);
				MasterIndex = 110; //Catan Pirate
            }    
            else if(Index == 62)
            {
                x = x + (offset * 3);
                y = y + (offset * 5);
				MasterIndex = 111; //Catan Metropolis
            }    
            else if(Index == 63)
            {
                x = x + (offset * 4);
                y = y + (offset * 5);
				MasterIndex = 112; //Catan Merchant
            }    
            //pieces
            else if(Index == 64)
            {
                x = x + (offset * 0);
                y = y + (offset * 6);
				MasterIndex = 104; //Catan Road
            }    
            else if(Index == 65)
            {
                x = x + (offset * 1);
                y = y + (offset * 6);
				MasterIndex = 105; //Catan Settlement
            }    
            else if(Index == 66)
            {
                x = x + (offset * 2);
                y = y + (offset * 6);
				MasterIndex = 106; //Catan City
            }    
            else if(Index == 67)
            {
                x = x + (offset * 3);
                y = y + (offset * 6);
				MasterIndex = 107; //Catan Knight
            }    
            else if(Index == 68)
            {
                x = x + (offset * 4);
                y = y + (offset * 6);
				MasterIndex = 108; //Catan Ship
            }
        }
        else if(obj_Phase.Index == 1) //Play
        {
            //tokens
            if(Index == 0)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 109; //Catan Thief
            }    
            else if(Index == 1)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 110; //Catan Pirate
            }    
            else if(Index == 2)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 111; //Catan Metropolis
            }    
            else if(Index == 3)
            {
                x = x + (offset * 4);
                y = y + (offset * 0);
                MasterIndex = 112; //Catan Merchant
            }    
            //pieces
            else if(Index == 4)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
				MasterIndex = 104; //Catan Road
            }    
            else if(Index == 5)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
				MasterIndex = 105; //Catan Settlement
            }    
            else if(Index == 6)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
				MasterIndex = 106; //Catan City
            }    
            else if(Index == 7)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
				MasterIndex = 107; //Catan Knight
            }    
            else if(Index == 8)
            {
                x = x + (offset * 4);
                y = y + (offset * 1);
				MasterIndex = 108; //Catan Ship
            }
            else
            {
                instance_destroy();
            }
        }
        
    }
    else if(obj_Mode.Index == 4) //if Monster Office Workplace
    {
        sprite_index = spr_OptMOW;
        image_index = Index;
        if(obj_Phase.Index == 0) //Setup
        {
            if(Index == 0)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 208; //MOW Smallest Board
            }
            else if(Index == 1)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 209; //MOW Small Board
            }
            else if(Index == 2)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 210; //MOW Medium Board
            }
            else if(Index == 3)
            {
                x = x + (offset * 4);
                y = y + (offset * 0);
                MasterIndex = 211; //MOW Large Board
            }
            else if(Index == 4)
            {
                x = x + (offset * 5);
                y = y + (offset * 0);
                MasterIndex = 212; //MOW Largest Board
            }
            else if(Index == 5)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
                MasterIndex = 572; //MOW Project Deck
            }
            else if(Index == 6)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
                MasterIndex = 573; //MOW Resource Deck
            }
            else if(Index == 7)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
                MasterIndex = 81; //Standard Chart
                Index = 171; //Override image_index
            }
            else
            {
                instance_destroy();
            }
        }
        else if(obj_Phase.Index == 1) //Play
        {
            if(Index &lt;= 6)
            {
				Index = Index + 7;
            }
            
			if(Index == 7)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 574; //MOW Tile: Rectangle 2x3
            }
            else if(Index == 8)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 427; //MOW Tile: Cross BGOPR
            }
            else if(Index == 9)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 428; //MOW Tile: Cross BGOPY
            }
            else if(Index == 10)
            {
                x = x + (offset * 4);
                y = y + (offset * 0);
                MasterIndex = 429; //MOW Tile: Cross BGORY
            }
            else if(Index == 11)
            {
                x = x + (offset * 5);
                y = y + (offset * 0);
                MasterIndex = 430; //MOW Tile: Cross BGPRY
            }
            else if(Index == 12)
            {
                x = x + (offset * 6);
                y = y + (offset * 0);
                MasterIndex = 431; //MOW Tile: Cross BOPRY
            }
            else if(Index == 13)
            {
                x = x + (offset * 7);
                y = y + (offset * 0);
                MasterIndex = 432; //MOW Tile: Cross GORPY
            }
            else if(Index == 14)
            {
                x = x + (offset * 8);
                y = y + (offset * 0);
                MasterIndex = 355; //MOW Tile: Rectangle 1x5 BGOPR
            }
            else if(Index == 15)
            {
                x = x + (offset * 9);
                y = y + (offset * 0);
                MasterIndex = 356; //MOW Tile: Rectangle 1x5 BGOPY
            }
            else if(Index == 16)
            {
                x = x + (offset * 10);
                y = y + (offset * 0);
                MasterIndex = 357; //MOW Tile: Rectangle 1x5 BGORY
            }
            else if(Index == 17)
            {
                x = x + (offset * 11);
                y = y + (offset * 0);
                MasterIndex = 358; //MOW Tile: Rectangle 1x5 BGPRY
            }
            else if(Index == 18)
            {
                x = x + (offset * 12);
                y = y + (offset * 0);
                MasterIndex = 359; //MOW Tile: Rectangle 1x5 BOPRY
            }
            else if(Index == 19)
            {
                x = x + (offset * 13);
                y = y + (offset * 0);
                MasterIndex = 360; //MOW Tile: Rectangle 1x5 GORPY
            }
            else if(Index == 20)
            {
                x = x + (offset * 14);
                y = y + (offset * 0);
                MasterIndex = 299; //MOW Tile: Single Blue
            }
            else if(Index == 21)
            {
                x = x + (offset * 15);
                y = y + (offset * 0);
                MasterIndex = 300; //MOW Tile: Single Green
            }
            else if(Index == 22)
            {
                x = x + (offset * 16);
                y = y + (offset * 0);
                MasterIndex = 301; //MOW Tile: Single Orange
            }
            else if(Index == 23)
            {
                x = x + (offset * 17);
                y = y + (offset * 0);
                MasterIndex = 302; //MOW Tile: Single Purple
            }
            else if(Index == 24)
            {
                x = x + (offset * 18);
                y = y + (offset * 0);
                MasterIndex = 303; //MOW Tile: Single Red
            }
            else if(Index == 25)
            {
                x = x + (offset * 19);
                y = y + (offset * 0);
                MasterIndex = 304; //MOW Tile: Single Yellow
            }
            else if(Index == 26)
            {
                x = x + (offset * 20);
                y = y + (offset * 0);
                MasterIndex = 305; //MOW Tile: Rectangle 1x2 BG
            }
            else if(Index == 27)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
                MasterIndex = 306; //MOW Tile: Rectangle 1x2 BO
            }
            else if(Index == 28)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
                MasterIndex = 307; //MOW Tile: Rectangle 1x2 BP
            }
            else if(Index == 29)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
                MasterIndex = 308; //MOW Tile: Rectangle 1x2 BR
            }
            else if(Index == 30)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
                MasterIndex = 309; //MOW Tile: Rectangle 1x2 BY
            }
            else if(Index == 31)
            {
                x = x + (offset * 4);
                y = y + (offset * 1);
                MasterIndex = 310; //MOW Tile: Rectangle 1x2 GO
            }
            else if(Index == 32)
            {
                x = x + (offset * 5);
                y = y + (offset * 1);
                MasterIndex = 311; //MOW Tile: Rectangle 1x2 GP
            }
            else if(Index == 33)
            {
                x = x + (offset * 6);
                y = y + (offset * 1);
                MasterIndex = 312; //MOW Tile: Rectangle 1x2 GR
            }
            else if(Index == 34)
            {
                x = x + (offset * 7);
                y = y + (offset * 1);
                MasterIndex = 313; //MOW Tile: Rectangle 1x2 GY
            }
            else if(Index == 35)
            {
                x = x + (offset * 8);
                y = y + (offset * 1);
                MasterIndex = 314; //MOW Tile: Rectangle 1x2 OP
}
            else if(Index == 36)
            {
                x = x + (offset * 9);
                y = y + (offset * 1);
                MasterIndex = 315; //MOW Tile: Rectangle 1x2 OR
            }
            else if(Index == 37)
            {
                x = x + (offset * 10);
                y = y + (offset * 1);
                MasterIndex = 316; //MOW Tile: Rectangle 1x2 OY
            }
            else if(Index == 38)
            {
                x = x + (offset * 11);
                y = y + (offset * 1);
                MasterIndex = 317; //MOW Tile: Rectangle 1x2 PR
            }
            else if(Index == 39)
            {
                x = x + (offset * 12);
                y = y + (offset * 1);
                MasterIndex = 318; //MOW Tile: Rectangle 1x2 PY
            }
            else if(Index == 40)
            {
                x = x + (offset * 13);
                y = y + (offset * 1);
                MasterIndex = 319; //MOW Tile: Rectangle 1x2 RY
            }
            else if(Index == 41)
            {
                x = x + (offset * 14);
                y = y + (offset * 1);
                MasterIndex = 320; //MOW Tile: Rectangle 1x3 BGO
            }
            else if(Index == 42)
            {
                x = x + (offset * 15);
                y = y + (offset * 1);
                MasterIndex = 321; //MOW Tile: Rectangle 1x3 BGP
            }
            else if(Index == 43)
            {
                x = x + (offset * 16);
                y = y + (offset * 1);
                MasterIndex = 322; //MOW Tile: Rectangle 1x3 BGR
            }
            else if(Index == 44)
            {
                x = x + (offset * 17);
                y = y + (offset * 1);
                MasterIndex = 323; //MOW Tile: Rectangle 1x3 BGY
            }
            else if(Index == 45)
            {
                x = x + (offset * 18);
                y = y + (offset * 1);
                MasterIndex = 324; //MOW Tile: Rectangle 1x3 BOP
            }
            else if(Index == 46)
            {
                x = x + (offset * 19);
                y = y + (offset * 1);
                MasterIndex = 325; //MOW Tile: Rectangle 1x3 BOR
            }
            else if(Index == 47)
            {
                x = x + (offset * 20);
                y = y + (offset * 1);
                MasterIndex = 326; //MOW Tile: Rectangle 1x3 BOY
            }
            else if(Index == 48)
            {
                x = x + (offset * 0);
                y = y + (offset * 2);
                MasterIndex = 327; //MOW Tile: Rectangle 1x3 BPR
            }
            else if(Index == 49)
            {
                x = x + (offset * 1);
                y = y + (offset * 2);
                MasterIndex = 328; //MOW Tile: Rectangle 1x3 BPY
            }
            else if(Index == 50)
            {
                x = x + (offset * 2);
                y = y + (offset * 2);
                MasterIndex = 329; //MOW Tile: Rectangle 1x3 BRY
            }
            else if(Index == 51)
            {
                x = x + (offset * 3);
                y = y + (offset * 2);
                MasterIndex = 330; //MOW Tile: Rectangle 1x3 GOP
            }
            else if(Index == 52)
            {
                x = x + (offset * 4);
                y = y + (offset * 2);
                MasterIndex = 331; //MOW Tile: Rectangle 1x3 GOR
            }
            else if(Index == 53)
            {
                x = x + (offset * 5);
                y = y + (offset * 2);
                MasterIndex = 332; //MOW Tile: Rectangle 1x3 GOY
            }
            else if(Index == 54)
            {
                x = x + (offset * 6);
                y = y + (offset * 2);
                MasterIndex = 333; //MOW Tile: Rectangle 1x3 GPR
            }
            else if(Index == 55)
            {
                x = x + (offset * 7);
                y = y + (offset * 2);
                MasterIndex = 334; //MOW Tile: Rectangle 1x3 GPY
            }
            else if(Index == 56)
            {
                x = x + (offset * 8);
                y = y + (offset * 2);
                MasterIndex = 335; //MOW Tile: Rectangle 1x3 GRY
            }
            else if(Index == 57)
            {
                x = x + (offset * 9);
                y = y + (offset * 2);
                MasterIndex = 336; //MOW Tile: Rectangle 1x3 OPR
            }
            else if(Index == 58)
            {
                x = x + (offset * 10);
                y = y + (offset * 2);
                MasterIndex = 337; //MOW Tile: Rectangle 1x3 OPY
            }
            else if(Index == 59)
            {
                x = x + (offset * 11);
                y = y + (offset * 2);
                MasterIndex = 338; //MOW Tile: Rectangle 1x3 ORY
            }
            else if(Index == 60)
            {
                x = x + (offset * 12);
                y = y + (offset * 2);
                MasterIndex = 339; //MOW Tile: Rectangle 1x3 PRY
            }
            else if(Index == 61)
            {
                x = x + (offset * 13);
                y = y + (offset * 2);
                MasterIndex = 407; //MOW Tile: Corner BGO
            }
            else if(Index == 62)
            {
                x = x + (offset * 14);
                y = y + (offset * 2);
                MasterIndex = 408; //MOW Tile: Corner BGP
            }
            else if(Index == 63)
            {
                x = x + (offset * 15);
                y = y + (offset * 2);
                MasterIndex = 409; //MOW Tile: Corner BGR
            }
            else if(Index == 64)
            {
                x = x + (offset * 16);
                y = y + (offset * 2);
                MasterIndex = 410; //MOW Tile: Corner BGY
            }
            else if(Index == 65)
            {
                x = x + (offset * 17);
                y = y + (offset * 2);
                MasterIndex = 411; //MOW Tile: Corner BOP
            }
            else if(Index == 66)
            {
                x = x + (offset * 18);
                y = y + (offset * 2);
                MasterIndex = 412; //MOW Tile: Corner BOR
            }
            else if(Index == 67)
            {
                x = x + (offset * 19);
                y = y + (offset * 2);
                MasterIndex = 413; //MOW Tile: Corner BOY
            }
            else if(Index == 68)
            {
                x = x + (offset * 20);
                y = y + (offset * 2);
                MasterIndex = 414; //MOW Tile: Corner BPR
            }
            else if(Index == 69)
            {
                x = x + (offset * 0);
                y = y + (offset * 3);
                MasterIndex = 415; //MOW Tile: Corner BPY
            }
            else if(Index == 70)
            {
                x = x + (offset * 1);
                y = y + (offset * 3);
                MasterIndex = 416; //MOW Tile: Corner BRY
            }
            else if(Index == 71)
            {
                x = x + (offset * 2);
                y = y + (offset * 3);
                MasterIndex = 417; //MOW Tile: Corner GOP
            }
            else if(Index == 72)
            {
                x = x + (offset * 3);
                y = y + (offset * 3);
                MasterIndex = 418; //MOW Tile: Corner GOR
            }
            else if(Index == 73)
            {
                x = x + (offset * 4);
                y = y + (offset * 3);
                MasterIndex = 419; //MOW Tile: Corner GOY
            }
            else if(Index == 74)
            {
                x = x + (offset * 5);
                y = y + (offset * 3);
                MasterIndex = 420; //MOW Tile: Corner GPR
            }
            else if(Index == 75)
            {
                x = x + (offset * 6);
                y = y + (offset * 3);
                MasterIndex = 421; //MOW Tile: Corner GPY
            }
            else if(Index == 76)
            {
                x = x + (offset * 7);
                y = y + (offset * 3);
                MasterIndex = 422; //MOW Tile: Corner GRY
            }
            else if(Index == 77)
            {
                x = x + (offset * 8);
                y = y + (offset * 3);
                MasterIndex = 423; //MOW Tile: Corner OPR
            }
            else if(Index == 78)
            {
                x = x + (offset * 9);
                y = y + (offset * 3);
                MasterIndex = 424; //MOW Tile: Corner OPY
            }
            else if(Index == 79)
            {
                x = x + (offset * 10);
                y = y + (offset * 3);
                MasterIndex = 425; //MOW Tile: Corner ORY
            }
            else if(Index == 80)
            {
                x = x + (offset * 11);
                y = y + (offset * 3);
                MasterIndex = 426; //MOW Tile: Corner PRY
            }
            else if(Index == 81)
            {
                x = x + (offset * 12);
                y = y + (offset * 3);
                MasterIndex = 340; //MOW Tile: Rectangle 1x4 BGOP
            }
            else if(Index == 82)
            {
                x = x + (offset * 13);
                y = y + (offset * 3);
                MasterIndex = 341; //MOW Tile: Rectangle 1x4 BGOR
            }
            else if(Index == 83)
            {
                x = x + (offset * 14);
                y = y + (offset * 3);
                MasterIndex = 342; //MOW Tile: Rectangle 1x4 BGOY
            }
            else if(Index == 84)
            {
                x = x + (offset * 15);
                y = y + (offset * 3);
                MasterIndex = 343; //MOW Tile: Rectangle 1x4 BGPR
            }
            else if(Index == 85)
            {
                x = x + (offset * 16);
                y = y + (offset * 3);
                MasterIndex = 344; //MOW Tile: Rectangle 1x4 BGPY
            }
            else if(Index == 86)
            {
                x = x + (offset * 17);
                y = y + (offset * 3);
                MasterIndex = 345; //MOW Tile: Rectangle 1x4 BGRY
            }
            else if(Index == 87)
            {
                x = x + (offset * 18);
                y = y + (offset * 3);
                MasterIndex = 346; //MOW Tile: Rectangle 1x4 BOPR
            }
            else if(Index == 88)
            {
                x = x + (offset * 19);
                y = y + (offset * 3);
                MasterIndex = 347; //MOW Tile: Rectangle 1x4 BOPY
            }
            else if(Index == 89)
            {
                x = x + (offset * 20);
                y = y + (offset * 3);
                MasterIndex = 348; //MOW Tile: Rectangle 1x4 BORY
            }
            else if(Index == 90)
            {
                x = x + (offset * 0);
                y = y + (offset * 4);
                MasterIndex = 349; //MOW Tile: Rectangle 1x4 BPRY
            }
            else if(Index == 91)
            {
                x = x + (offset * 1);
                y = y + (offset * 4);
                MasterIndex = 350; //MOW Tile: Rectangle 1x4 GOPR
            }
            else if(Index == 92)
            {
                x = x + (offset * 2);
                y = y + (offset * 4);
                MasterIndex = 351; //MOW Tile: Rectangle 1x4 GOPY
            }
            else if(Index == 93)
            {
                x = x + (offset * 3);
                y = y + (offset * 4);
                MasterIndex = 352; //MOW Tile: Rectangle 1x4 GORY
            }
            else if(Index == 94)
            {
                x = x + (offset * 4);
                y = y + (offset * 4);
                MasterIndex = 353; //MOW Tile: Rectangle 1x4 GPRY
            }
            else if(Index == 95)
            {
                x = x + (offset * 5);
                y = y + (offset * 4);
                MasterIndex = 354; //MOW Tile: Rectangle 1x4 OPRY
            }
            else if(Index == 96)
            {
                x = x + (offset * 6);
                y = y + (offset * 4);
                MasterIndex = 361; //MOW Tile: Square BGOP
            }
            else if(Index == 97)
            {
                x = x + (offset * 7);
                y = y + (offset * 4);
                MasterIndex = 362; //MOW Tile: Square BGOR
            }
            else if(Index == 98)
            {
                x = x + (offset * 8);
                y = y + (offset * 4);
                MasterIndex = 363; //MOW Tile: Square BGOY
            }
            else if(Index == 99)
            {
                x = x + (offset * 9);
                y = y + (offset * 4);
                MasterIndex = 364; //MOW Tile: Square BGPR
            }
            else if(Index == 100)
            {
                x = x + (offset * 10);
                y = y + (offset * 4);
                MasterIndex = 365; //MOW Tile: Square BGPY
            }
            else if(Index == 101)
            {
                x = x + (offset * 11);
                y = y + (offset * 4);
                MasterIndex = 366; //MOW Tile: Square BGRY
            }
            else if(Index == 102)
            {
                x = x + (offset * 12);
                y = y + (offset * 4);
                MasterIndex = 367; //MOW Tile: Square BOPR
            }
            else if(Index == 103)
            {
                x = x + (offset * 13);
                y = y + (offset * 4);
                MasterIndex = 368; //MOW Tile: Square BOPY
            }
            else if(Index == 104)
            {
                x = x + (offset * 14);
                y = y + (offset * 4);
                MasterIndex = 369; //MOW Tile: Square BORY
            }
            else if(Index == 105)
            {
                x = x + (offset * 15);
                y = y + (offset * 4);
                MasterIndex = 370; //MOW Tile: Square BPRY
            }
            else if(Index == 106)
            {
                x = x + (offset * 16);
                y = y + (offset * 4);
                MasterIndex = 371; //MOW Tile: Square GOPR
            }
            else if(Index == 107)
            {
                x = x + (offset * 17);
                y = y + (offset * 4);
                MasterIndex = 372; //MOW Tile: Square GOPY
            }
            else if(Index == 108)
            {
                x = x + (offset * 18);
                y = y + (offset * 4);
                MasterIndex = 373; //MOW Tile: Square GORY
            }
            else if(Index == 109)
            {
                x = x + (offset * 19);
                y = y + (offset * 4);
                MasterIndex = 374; //MOW Tile: Square GPRY
            }
            else if(Index == 110)
            {
                x = x + (offset * 20);
                y = y + (offset * 4);
                MasterIndex = 375; //MOW Tile: Square OPRY
            }
            else if(Index == 111)
            {
                x = x + (offset * 0);
                y = y + (offset * 5);
                MasterIndex = 448; //MOW Tile: Right Leg BGOP
            }
            else if(Index == 112)
            {
                x = x + (offset * 1);
                y = y + (offset * 5);
                MasterIndex = 449; //MOW Tile: Right Leg BGOR
            }
            else if(Index == 113)
            {
                x = x + (offset * 2);
                y = y + (offset * 5);
                MasterIndex = 450; //MOW Tile: Right Leg BGOY
            }
            else if(Index == 114)
            {
                x = x + (offset * 3);
                y = y + (offset * 5);
                MasterIndex = 451; //MOW Tile: Right Leg BGPR
            }
            else if(Index == 115)
            {
                x = x + (offset * 4);
                y = y + (offset * 5);
                MasterIndex = 452; //MOW Tile: Right Leg BGPY
            }
            else if(Index == 116)
            {
                x = x + (offset * 5);
                y = y + (offset * 5);
                MasterIndex = 453; //MOW Tile: Right Leg BGRY
            }
            else if(Index == 117)
            {
                x = x + (offset * 6);
                y = y + (offset * 5);
                MasterIndex = 454; //MOW Tile: Right Leg BOPR
            }
            else if(Index == 118)
            {
                x = x + (offset * 7);
                y = y + (offset * 5);
                MasterIndex = 455; //MOW Tile: Right Leg BOPY
            }
            else if(Index == 119)
            {
                x = x + (offset * 8);
                y = y + (offset * 5);
                MasterIndex = 456; //MOW Tile: Right Leg BORY
            }
            else if(Index == 120)
            {
                x = x + (offset * 9);
                y = y + (offset * 5);
                MasterIndex = 457; //MOW Tile: Right Leg BPRY
            }
            else if(Index == 121)
            {
                x = x + (offset * 10);
                y = y + (offset * 5);
                MasterIndex = 458; //MOW Tile: Right Leg GOPR
            }
            else if(Index == 122)
            {
                x = x + (offset * 11);
                y = y + (offset * 5);
                MasterIndex = 459; //MOW Tile: Right Leg GOPY
            }
            else if(Index == 123)
            {
                x = x + (offset * 12);
                y = y + (offset * 5);
                MasterIndex = 460; //MOW Tile: Right Leg GORY
            }
            else if(Index == 124)
            {
                x = x + (offset * 13);
                y = y + (offset * 5);
                MasterIndex = 461; //MOW Tile: Right Leg GPRY
            }
            else if(Index == 125)
            {
                x = x + (offset * 14);
                y = y + (offset * 5);
                MasterIndex = 462; //MOW Tile: Right Leg OPRY
            }
            else if(Index == 126)
            {
                x = x + (offset * 15);
                y = y + (offset * 5);
                MasterIndex = 433; //MOW Tile: Left Leg BGOP
            }
            else if(Index == 127)
            {
                x = x + (offset * 16);
                y = y + (offset * 5);
                MasterIndex = 434; //MOW Tile: Left Leg BGOR
            }
            else if(Index == 128)
            {
                x = x + (offset * 17);
                y = y + (offset * 5);
                MasterIndex = 435; //MOW Tile: Left Leg BGOY
            }
            else if(Index == 129)
            {
                x = x + (offset * 18);
                y = y + (offset * 5);
                MasterIndex = 436; //MOW Tile: Left Leg BGPR
            }
            else if(Index == 130)
            {
                x = x + (offset * 19);
                y = y + (offset * 5);
                MasterIndex = 437; //MOW Tile: Left Leg BGPY
            }
            else if(Index == 131)
            {
                x = x + (offset * 20);
                y = y + (offset * 5);
                MasterIndex = 438; //MOW Tile: Left Leg BGRY
            }
            else if(Index == 132)
            {
                x = x + (offset * 0);
                y = y + (offset * 6);
                MasterIndex = 439; //MOW Tile: Left Leg BOPR
            }
            else if(Index == 133)
            {
                x = x + (offset * 1);
                y = y + (offset * 6);
                MasterIndex = 440; //MOW Tile: Left Leg BOPY
            }
            else if(Index == 134)
            {
                x = x + (offset * 2);
                y = y + (offset * 6);
                MasterIndex = 441; //MOW Tile: Left Leg BORY
            }
            else if(Index == 135)
            {
                x = x + (offset * 3);
                y = y + (offset * 6);
                MasterIndex = 442; //MOW Tile: Left Leg BPRY
            }
            else if(Index == 136)
            {
                x = x + (offset * 4);
                y = y + (offset * 6);
                MasterIndex = 443; //MOW Tile: Left Leg GOPR
            }
            else if(Index == 137)
            {
                x = x + (offset * 5);
                y = y + (offset * 6);
                MasterIndex = 444; //MOW Tile: Left Leg GOPY
            }
            else if(Index == 138)
            {
                x = x + (offset * 6);
                y = y + (offset * 6);
                MasterIndex = 445; //MOW Tile: Left Leg GORY
            }
            else if(Index == 139)
            {
                x = x + (offset * 7);
                y = y + (offset * 6);
                MasterIndex = 446; //MOW Tile: Left Leg GPRY
            }
            else if(Index == 140)
            {
                x = x + (offset * 8);
                y = y + (offset * 6);
                MasterIndex = 447; //MOW Tile: Left Leg OPRY
            }
            else if(Index == 141)
            {
                x = x + (offset * 9);
                y = y + (offset * 6);
                MasterIndex = 463; //MOW Tile: Zag BGOP
            }
            else if(Index == 142)
            {
                x = x + (offset * 10);
                y = y + (offset * 6);
                MasterIndex = 464; //MOW Tile: Zag BGOR
            }
            else if(Index == 143)
            {
                x = x + (offset * 11);
                y = y + (offset * 6);
                MasterIndex = 465; //MOW Tile: Zag BGOY
            }
            else if(Index == 144)
            {
                x = x + (offset * 12);
                y = y + (offset * 6);
                MasterIndex = 466; //MOW Tile: Zag BGPR
            }
            else if(Index == 145)
            {
                x = x + (offset * 13);
                y = y + (offset * 6);
                MasterIndex = 467; //MOW Tile: Zag BGPY
            }
            else if(Index == 146)
            {
                x = x + (offset * 14);
                y = y + (offset * 6);
                MasterIndex = 468; //MOW Tile: Zag BGRY
            }
            else if(Index == 147)
            {
                x = x + (offset * 15);
                y = y + (offset * 6);
                MasterIndex = 469; //MOW Tile: Zag BOPR
            }
            else if(Index == 148)
            {
                x = x + (offset * 16);
                y = y + (offset * 6);
                MasterIndex = 470; //MOW Tile: Zag BOPY
            }
            else if(Index == 149)
            {
                x = x + (offset * 17);
                y = y + (offset * 6);
                MasterIndex = 471; //MOW Tile: Zag BORY
            }
            else if(Index == 150)
            {
                x = x + (offset * 18);
                y = y + (offset * 6);
                MasterIndex = 472; //MOW Tile: Zag BPRY
            }
            else if(Index == 151)
            {
                x = x + (offset * 19);
                y = y + (offset * 6);
                MasterIndex = 473; //MOW Tile: Zag GOPR
            }
            else if(Index == 152)
            {
                x = x + (offset * 20);
                y = y + (offset * 6);
                MasterIndex = 474; //MOW Tile: Zag GOPY
            }
            else if(Index == 153)
            {
                x = x + (offset * 0);
                y = y + (offset * 7);
                MasterIndex = 475; //MOW Tile: Zag GORY
            }
            else if(Index == 154)
            {
                x = x + (offset * 1);
                y = y + (offset * 7);
                MasterIndex = 476; //MOW Tile: Zag GPRY
            }
            else if(Index == 155)
            {
                x = x + (offset * 2);
                y = y + (offset * 7);
                MasterIndex = 477; //MOW Tile: Zag OPRY
            }
            else if(Index == 156)
            {
                x = x + (offset * 3);
                y = y + (offset * 7);
                MasterIndex = 478; //MOW Tile: Zig BGOP
            }
            else if(Index == 157)
            {
                x = x + (offset * 4);
                y = y + (offset * 7);
                MasterIndex = 479; //MOW Tile: Zig BGOR
            }
            else if(Index == 158)
            {
                x = x + (offset * 5);
                y = y + (offset * 7);
                MasterIndex = 480; //MOW Tile: Zig  BGOY
            }
            else if(Index == 159)
            {
                x = x + (offset * 6);
                y = y + (offset * 7);
                MasterIndex = 481; //MOW Tile: Zig BGPR
            }
            else if(Index == 160)
            {
                x = x + (offset * 7);
                y = y + (offset * 7);
                MasterIndex = 482; //MOW Tile: Zig BGPY
            }
            else if(Index == 161)
            {
                x = x + (offset * 8);
                y = y + (offset * 7);
                MasterIndex = 483; //MOW Tile: Zig BGRY
            }
            else if(Index == 162)
            {
                x = x + (offset * 9);
                y = y + (offset * 7);
                MasterIndex = 484; //MOW Tile: Zig BOPR
            }
            else if(Index == 163)
            {
                x = x + (offset * 10);
                y = y + (offset * 7);
                MasterIndex = 485; //MOW Tile: Zig BOPY
            }
            else if(Index == 164)
            {
                x = x + (offset * 11);
                y = y + (offset * 7);
                MasterIndex = 486; //MOW Tile: Zig BORY
            }
            else if(Index == 165)
            {
                x = x + (offset * 12);
                y = y + (offset * 7);
                MasterIndex = 487; //MOW Tile: Zig BPRY
            }
            else if(Index == 166)
            {
                x = x + (offset * 13);
                y = y + (offset * 7);
                MasterIndex = 488; //MOW Tile: Zig GOPR
            }
            else if(Index == 167)
            {
                x = x + (offset * 14);
                y = y + (offset * 7);
                MasterIndex = 489; //MOW Tile: Zig GOPY
            }
            else if(Index == 168)
            {
                x = x + (offset * 15);
                y = y + (offset * 7);
                MasterIndex = 490; //MOW Tile: Zig GORY
            }
            else if(Index == 169)
            {
                x = x + (offset * 16);
                y = y + (offset * 7);
                MasterIndex = 491; //MOW Tile: Zig GPRY
            }
            else if(Index == 170)
            {
                x = x + (offset * 17);
                y = y + (offset * 7);
                MasterIndex = 492; //MOW Tile: Zig OPRY
            }
            else
            {
                instance_destroy();
            }
        }
    }
    else if(obj_Mode.Index == 5) //if Nine Card
    {
        sprite_index = spr_OptNineCard;
        image_index = Index;
        if(obj_Phase.Index == 0) //Setup
        {
            if(Index == 0)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 573; //Nine Card Battle Grid
            }
            else if(Index == 1)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 694; //Nine Card Empty Deck
            }
            
			if(Index &gt;= 2)
            {
                Index = Index + 3;
            }            
            
			if(Index == 5)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 81; //Standard Chart
            }
            else if(Index == 6)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
                MasterIndex = 574; // 0/1 Card
            }
            else if(Index == 7)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
                MasterIndex = 575; // 0/2 Card
            }
            else if(Index == 8)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
                MasterIndex = 576; // 0/3 Card
            }
            else if(Index == 9)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
                MasterIndex = 577; // 0/4 Card
            }
            else if(Index == 10)
            {
                x = x + (offset * 4);
                y = y + (offset * 1);
                MasterIndex = 578; // 0/5 Card
            }
            else if(Index == 11)
            {
                x = x + (offset * 5);
                y = y + (offset * 1);
                MasterIndex = 579; // 0/6 Card
            }
            else if(Index == 12)
            {
                x = x + (offset * 6);
                y = y + (offset * 1);
                MasterIndex = 580; // 0/7 Card
            }
            else if(Index == 13)
            {
                x = x + (offset * 7);
                y = y + (offset * 1);
                MasterIndex = 581; // 0/8 Card
            }
            else if(Index == 14)
            {
                x = x + (offset * 8);
                y = y + (offset * 1);
                MasterIndex = 582; // 0/9 Card
            }
            else if(Index == 15)
            {
                x = x + (offset * 9);
                y = y + (offset * 1);
                MasterIndex = 583; // 0/10 Card
            }
            else if(Index == 16)
            {
                x = x + (offset * 10);
                y = y + (offset * 1);
                MasterIndex = 584; // 1/0 Card
            }
            else if(Index == 17)
            {
                x = x + (offset * 11);
                y = y + (offset * 1);
                MasterIndex = 585; // 1/1 Card
            }
            else if(Index == 18)
            {
                x = x + (offset * 12);
                y = y + (offset * 1);
                MasterIndex = 586; // 1/2 Card
            }
            else if(Index == 19)
            {
                x = x + (offset * 13);
                y = y + (offset * 1);
                MasterIndex = 587; // 1/3 Card
            }
            else if(Index == 20)
            {
                x = x + (offset * 14);
                y = y + (offset * 1);
                MasterIndex = 588; // 1/4 Card
            }
            else if(Index == 21)
            {
                x = x + (offset * 15);
                y = y + (offset * 1);
                MasterIndex = 589; // 1/5 Card
            }
            else if(Index == 22)
            {
                x = x + (offset * 16);
                y = y + (offset * 1);
                MasterIndex = 590; // 1/6 Card
            }
            else if(Index == 23)
            {
                x = x + (offset * 17);
                y = y + (offset * 1);
                MasterIndex = 591; // 1/7 Card
            }
            else if(Index == 24)
            {
                x = x + (offset * 18);
                y = y + (offset * 1);
                MasterIndex = 592; // 1/8 Card
            }
            else if(Index == 25)
            {
                x = x + (offset * 19);
                y = y + (offset * 1);
                MasterIndex = 593; // 1/9 Card
            }
            else if(Index == 26)
            {
                x = x + (offset * 20);
                y = y + (offset * 1);
                MasterIndex = 594; // 1/10 Card
            }
            else if(Index == 27)
            {
                x = x + (offset * 0);
                y = y + (offset * 2);
                MasterIndex = 595; // 2/0 Card
            }
            else if(Index == 28)
            {
                x = x + (offset * 1);
                y = y + (offset * 2);
                MasterIndex = 596; // 2/1 Card
            }
            else if(Index == 29)
            {
                x = x + (offset * 2);
                y = y + (offset * 2);
                MasterIndex = 597; // 2/2 Card
            }
            else if(Index == 30)
            {
                x = x + (offset * 3);
                y = y + (offset * 2);
                MasterIndex = 598; // 2/3 Card
            }
            else if(Index == 31)
            {
                x = x + (offset * 4);
                y = y + (offset * 2);
                MasterIndex = 599; // 2/4 Card
            }
            else if(Index == 32)
            {
                x = x + (offset * 5);
                y = y + (offset * 2);
                MasterIndex = 600; // 2/5 Card
            }
            else if(Index == 33)
            {
                x = x + (offset * 6);
                y = y + (offset * 2);
                MasterIndex = 601; // 2/6 Card
            }
            else if(Index == 34)
            {
                x = x + (offset * 7);
                y = y + (offset * 2);
                MasterIndex = 602; // 2/7 Card
            }
            else if(Index == 35)
            {
                x = x + (offset * 8);
                y = y + (offset * 2);
                MasterIndex = 603; // 2/8 Card
            }
            else if(Index == 36)
            {
                x = x + (offset * 9);
                y = y + (offset * 2);
                MasterIndex = 604; // 2/9 Card
            }
            else if(Index == 37)
            {
                x = x + (offset * 10);
                y = y + (offset * 2);
                MasterIndex = 605; // 2/10 Card
            }
            else if(Index == 38)
            {
                x = x + (offset * 11);
                y = y + (offset * 2);
                MasterIndex = 606; // 3/0 Card
            }
            else if(Index == 39)
            {
                x = x + (offset * 12);
                y = y + (offset * 2);
                MasterIndex = 607; // 3/1 Card
            }
            else if(Index == 40)
            {
                x = x + (offset * 13);
                y = y + (offset * 2);
                MasterIndex = 608; // 3/2 Card
            }
            else if(Index == 41)
            {
                x = x + (offset * 14);
                y = y + (offset * 2);
                MasterIndex = 609; // 3/3 Card
            }
            else if(Index == 42)
            {
                x = x + (offset * 15);
                y = y + (offset * 2);
                MasterIndex = 610; // 3/4 Card
            }
            else if(Index == 43)
            {
                x = x + (offset * 16);
                y = y + (offset * 2);
                MasterIndex = 611; // 3/5 Card
            }
            else if(Index == 44)
            {
                x = x + (offset * 17);
                y = y + (offset * 2);
                MasterIndex = 612; // 3/6 Card
            }
            else if(Index == 45)
            {
                x = x + (offset * 18);
                y = y + (offset * 2);
                MasterIndex = 613; // 3/7 Card
            }
            else if(Index == 46)
            {
                x = x + (offset * 19);
                y = y + (offset * 2);
                MasterIndex = 614; // 3/8 Card
            }
            else if(Index == 47)
            {
                x = x + (offset * 20);
                y = y + (offset * 2);
                MasterIndex = 615; // 3/9 Card
            }
            else if(Index == 48)
            {
                x = x + (offset * 0);
                y = y + (offset * 3);
                MasterIndex = 616; // 3/10 Card
            }
            else if(Index == 49)
            {
                x = x + (offset * 1);
                y = y + (offset * 3);
                MasterIndex = 617; // 4/0 Card
            }
            else if(Index == 50)
            {
                x = x + (offset * 2);
                y = y + (offset * 3);
                MasterIndex = 618; // 4/1 Card
            }
            else if(Index == 51)
            {
                x = x + (offset * 3);
                y = y + (offset * 3);
                MasterIndex = 619; // 4/2 Card
            }
            else if(Index == 52)
            {
                x = x + (offset * 4);
                y = y + (offset * 3);
                MasterIndex = 620; // 4/3 Card
            }
            else if(Index == 53)
            {
                x = x + (offset * 5);
                y = y + (offset * 3);
                MasterIndex = 621; // 4/4 Card
            }
            else if(Index == 54)
            {
                x = x + (offset * 6);
                y = y + (offset * 3);
                MasterIndex = 622; // 4/5 Card
            }
            else if(Index == 55)
            {
                x = x + (offset * 7);
                y = y + (offset * 3);
                MasterIndex = 623; // 4/6 Card
            }
            else if(Index == 56)
            {
                x = x + (offset * 8);
                y = y + (offset * 3);
                MasterIndex = 624; // 4/7 Card
            }
            else if(Index == 57)
            {
                x = x + (offset * 9);
                y = y + (offset * 3);
                MasterIndex = 625; // 4/8 Card
            }
            else if(Index == 58)
            {
                x = x + (offset * 10);
                y = y + (offset * 3);
                MasterIndex = 626; // 4/9 Card
            }
            else if(Index == 59)
            {
                x = x + (offset * 11);
                y = y + (offset * 3);
                MasterIndex = 627; // 4/10 Card
            }
            else if(Index == 60)
            {
                x = x + (offset * 12);
                y = y + (offset * 3);
                MasterIndex = 628; // 5/0 Card
            }
            else if(Index == 61)
            {
                x = x + (offset * 13);
                y = y + (offset * 3);
                MasterIndex = 629; // 5/1 Card
            }
            else if(Index == 62)
            {
                x = x + (offset * 14);
                y = y + (offset * 3);
                MasterIndex = 630; // 5/2 Card
            }
            else if(Index == 63)
            {
                x = x + (offset * 15);
                y = y + (offset * 3);
                MasterIndex = 631; // 5/3 Card
            }
            else if(Index == 64)
            {
                x = x + (offset * 16);
                y = y + (offset * 3);
                MasterIndex = 632; // 5/4 Card
            }
            else if(Index == 65)
            {
                x = x + (offset * 17);
                y = y + (offset * 3);
                MasterIndex = 633; // 5/5 Card
            }
            else if(Index == 66)
            {
                x = x + (offset * 18);
                y = y + (offset * 3);
                MasterIndex = 634; // 5/6 Card
            }
            else if(Index == 67)
            {
                x = x + (offset * 19);
                y = y + (offset * 3);
                MasterIndex = 635; // 5/7 Card
            }
            else if(Index == 68)
            {
                x = x + (offset * 20);
                y = y + (offset * 3);
                MasterIndex = 636; // 5/8 Card
            }
            else if(Index == 69)
            {
                x = x + (offset * 0);
                y = y + (offset * 4);
                MasterIndex = 637; // 5/9 Card
            }
            else if(Index == 70)
            {
                x = x + (offset * 1);
                y = y + (offset * 4);
                MasterIndex = 638; // 5/10 Card
            }
            else if(Index == 71)
            {
                x = x + (offset * 2);
                y = y + (offset * 4);
                MasterIndex = 639; // 6/0 Card
            }
            else if(Index == 72)
            {
                x = x + (offset * 3);
                y = y + (offset * 4);
                MasterIndex = 640; // 6/1 Card
            }
            else if(Index == 73)
            {
                x = x + (offset * 4);
                y = y + (offset * 4);
                MasterIndex = 641; // 6/2 Card
            }
            else if(Index == 74)
            {
                x = x + (offset * 5);
                y = y + (offset * 4);
                MasterIndex = 642; // 6/3 Card
            }
            else if(Index == 75)
            {
                x = x + (offset * 6);
                y = y + (offset * 4);
                MasterIndex = 643; // 6/4 Card
            }
            else if(Index == 76)
            {
                x = x + (offset * 7);
                y = y + (offset * 4);
                MasterIndex = 644; // 6/5 Card
            }
            else if(Index == 77)
            {
                x = x + (offset * 8);
                y = y + (offset * 4);
                MasterIndex = 645; // 6/6 Card
            }
            else if(Index == 78)
            {
                x = x + (offset * 9);
                y = y + (offset * 4);
                MasterIndex = 646; // 6/7 Card
            }
            else if(Index == 79)
            {
                x = x + (offset * 10);
                y = y + (offset * 4);
                MasterIndex = 647; // 6/8 Card
            }
            else if(Index == 80)
            {
                x = x + (offset * 11);
                y = y + (offset * 4);
                MasterIndex = 648; // 6/9 Card
            }
            else if(Index == 81)
            {
                x = x + (offset * 12);
                y = y + (offset * 4);
                MasterIndex = 649; // 6/10 Card
            }
            else if(Index == 82)
            {
                x = x + (offset * 13);
                y = y + (offset * 4);
                MasterIndex = 650; // 7/0 Card
            }
            else if(Index == 83)
            {
                x = x + (offset * 14);
                y = y + (offset * 4);
                MasterIndex = 651; // 7/1 Card
            }
            else if(Index == 84)
            {
                x = x + (offset * 15);
                y = y + (offset * 4);
                MasterIndex = 652; // 7/2 Card
            }
            else if(Index == 85)
            {
                x = x + (offset * 16);
                y = y + (offset * 4);
                MasterIndex = 653; // 7/3 Card
            }
            else if(Index == 86)
            {
                x = x + (offset * 17);
                y = y + (offset * 4);
                MasterIndex = 654; // 7/4 Card
            }
            else if(Index == 87)
            {
                x = x + (offset * 18);
                y = y + (offset * 4);
                MasterIndex = 655; // 7/5 Card
            }
            else if(Index == 88)
            {
                x = x + (offset * 19);
                y = y + (offset * 4);
                MasterIndex = 656; // 7/6 Card
            }
            else if(Index == 89)
            {
                x = x + (offset * 20);
                y = y + (offset * 4);
                MasterIndex = 657; // 7/7 Card
            }
            else if(Index == 90)
            {
                x = x + (offset * 0);
                y = y + (offset * 5);
                MasterIndex = 658; // 7/8 Card
            }
            else if(Index == 91)
            {
                x = x + (offset * 1);
                y = y + (offset * 5);
                MasterIndex = 659; // 7/9 Card
            }
            else if(Index == 92)
            {
                x = x + (offset * 2);
                y = y + (offset * 5);
                MasterIndex = 660; // 7/10 Card
            }
            else if(Index == 93)
            {
                x = x + (offset * 3);
                y = y + (offset * 5);
                MasterIndex = 661; // 8/0 Card
            }
            else if(Index == 94)
            {
                x = x + (offset * 4);
                y = y + (offset * 5);
                MasterIndex = 662; // 8/1 Card
            }
            else if(Index == 95)
            {
                x = x + (offset * 5);
                y = y + (offset * 5);
                MasterIndex = 663; // 8/2 Card
            }
            else if(Index == 96)
            {
                x = x + (offset * 6);
                y = y + (offset * 5);
                MasterIndex = 664; // 8/3 Card
            }
            else if(Index == 97)
            {
                x = x + (offset * 7);
                y = y + (offset * 5);
                MasterIndex = 665; // 8/4 Card
            }
            else if(Index == 98)
            {
                x = x + (offset * 8);
                y = y + (offset * 5);
                MasterIndex = 666; // 8/5 Card
            }
            else if(Index == 99)
            {
                x = x + (offset * 9);
                y = y + (offset * 5);
                MasterIndex = 667; // 8/6 Card
            }
            else if(Index == 100)
            {
                x = x + (offset * 10);
                y = y + (offset * 5);
                MasterIndex = 668; // 8/7 Card
            }
            else if(Index == 101)
            {
                x = x + (offset * 11);
                y = y + (offset * 5);
                MasterIndex = 669; // 8/8 Card
            }
            else if(Index == 102)
            {
                x = x + (offset * 12);
                y = y + (offset * 5);
                MasterIndex = 670; // 8/9 Card
            }
            else if(Index == 103)
            {
                x = x + (offset * 13);
                y = y + (offset * 5);
                MasterIndex = 671; // 8/10 Card
            }
            else if(Index == 104)
            {
                x = x + (offset * 14);
                y = y + (offset * 5);
                MasterIndex = 672; // 9/0 Card
            }
            else if(Index == 105)
            {
                x = x + (offset * 15);
                y = y + (offset * 5);
                MasterIndex = 673; // 9/1 Card
            }
            else if(Index == 106)
            {
                x = x + (offset * 16);
                y = y + (offset * 5);
                MasterIndex = 674; // 9/2 Card
            }
            else if(Index == 107)
            {
                x = x + (offset * 17);
                y = y + (offset * 5);
                MasterIndex = 675; // 9/3 Card
            }
            else if(Index == 108)
            {
                x = x + (offset * 18);
                y = y + (offset * 5);
                MasterIndex = 676; // 9/4 Card
            }
            else if(Index == 109)
            {
                x = x + (offset * 19);
                y = y + (offset * 5);
                MasterIndex = 677; // 9/5 Card
            }
            else if(Index == 110)
            {
                x = x + (offset * 20);
                y = y + (offset * 5);
                MasterIndex = 678; // 9/6 Card
            }
            else if(Index == 111)
            {
                x = x + (offset * 0);
                y = y + (offset * 6);
                MasterIndex = 679; // 9/7 Card
            }
            else if(Index == 112)
            {
                x = x + (offset * 1);
                y = y + (offset * 6);
                MasterIndex = 680; // 9/8 Card
            }
            else if(Index == 113)
            {
                x = x + (offset * 2);
                y = y + (offset * 6);
                MasterIndex = 681; // 9/9 Card
            }
            else if(Index == 114)
            {
                x = x + (offset * 3);
                y = y + (offset * 6);
                MasterIndex = 682; // 9/10 Card
            }
            else if(Index == 115)
            {
                x = x + (offset * 4);
                y = y + (offset * 6);
                MasterIndex = 683; // 10/0 Card
            }
            else if(Index == 116)
            {
                x = x + (offset * 5);
                y = y + (offset * 6);
                MasterIndex = 684; // 10/1 Card
            }
            else if(Index == 117)
            {
                x = x + (offset * 6);
                y = y + (offset * 6);
                MasterIndex = 685; // 10/2 Card
            }
            else if(Index == 118)
            {
                x = x + (offset * 7);
                y = y + (offset * 6);
                MasterIndex = 686; // 10/3 Card
            }
            else if(Index == 119)
            {
                x = x + (offset * 8);
                y = y + (offset * 6);
                MasterIndex = 687; // 10/4 Card
            }
            else if(Index == 120)
            {
                x = x + (offset * 9);
                y = y + (offset * 6);
                MasterIndex = 688; // 10/5 Card
            }
            else if(Index == 121)
            {
                x = x + (offset * 10);
                y = y + (offset * 6);
                MasterIndex = 689; // 10/6 Card
            }
            else if(Index == 122)
            {
                x = x + (offset * 11);
                y = y + (offset * 6);
                MasterIndex = 690; // 10/7 Card
            }
            else if(Index == 123)
            {
                x = x + (offset * 12);
                y = y + (offset * 6);
                MasterIndex = 691; // 10/8 Card
            }
            else if(Index == 124)
            {
                x = x + (offset * 13);
                y = y + (offset * 6);
                MasterIndex = 692; // 10/9 Card
            }
            else if(Index == 125)
            {
                x = x + (offset * 14);
                y = y + (offset * 6);
                MasterIndex = 693; // 10/10 Card
            }
            else
            {
                instance_destroy();
            }
        }
        else if(obj_Phase.Index == 1) //Play
        {
            // N/A
        }
        
    }
    else if(obj_Mode.Index == 6) //if Penny Arcade
    {
        sprite_index = spr_OptPA;
        image_index = Index;
        if(obj_Phase.Index == 0) //Setup
        {
            if(Index == 0)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 695; //PA Board                
            }
            else if(Index == 1)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 991; //Delete Deck                
            }
            else if(Index == 2)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 918; //All Selection Deck                
            }
            else if(Index == 3)
            {
                x = x + (offset * 4);
                y = y + (offset * 0);
                MasterIndex = 919; //Gold Selection Deck                
            }
            else if(Index == 4)
            {
                x = x + (offset * 5);
                y = y + (offset * 0);
                MasterIndex = 920; //Green Selection Deck                
            }
            else if(Index == 5)
            {
                x = x + (offset * 6);
                y = y + (offset * 0);
                MasterIndex = 921; //Red Selection Deck                
            }
            else if(Index == 6)
            {
                x = x + (offset * 7);
                y = y + (offset * 0);
                MasterIndex = 990; //Character Selection Deck                
            }
            else if(Index == 7)
            {
                x = x + (offset * 8);
                y = y + (offset * 0);
                MasterIndex = 922; //Gold Boss Selection Deck                
            }
            else if(Index == 8)
            {
                x = x + (offset * 9);
                y = y + (offset * 0);
                MasterIndex = 923; //Green Boss Selection Deck
            }
            else if(Index == 9)
            {
                x = x + (offset * 10);
                y = y + (offset * 0);
                MasterIndex = 924; //Red Boss Selection Deck
            }
            else if(Index == 10)
            {
                x = x + (offset * 0);
                y = y + (offset * 1);
                MasterIndex = 749; //Knight Gabriel Boss Deck
            }
            else if(Index == 11)
            {
                x = x + (offset * 1);
                y = y + (offset * 1);
                MasterIndex = 750; //Carboard Tube Samurai Boss Deck
            }
            else if(Index == 12)
            {
                x = x + (offset * 2);
                y = y + (offset * 1);
                MasterIndex = 751; //Tycho's Grandma Boss Deck
            }
            else if(Index == 13)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
                MasterIndex = 752; //Santa Boss Deck
            }
            else if(Index == 14)
            {
                x = x + (offset * 3);
                y = y + (offset * 1);
                MasterIndex = 753; //Satan Boss Deck
            }
            else if(Index == 15)
            {
                x = x + (offset * 4);
                y = y + (offset * 1);
                MasterIndex = 754; //Cthulhu Boss Deck
            }
            else if(Index == 16)
            {
                x = x + (offset * 5);
                y = y + (offset * 1);
                MasterIndex = 755; //Dark Tycho Boss Deck
            }
            else if(Index == 17)
            {
                x = x + (offset * 6);
                y = y + (offset * 1);
                MasterIndex = 756; //Fruit Fucker Prime Boss Deck
            }
            else if(Index == 18)
            {
                x = x + (offset * 0);
                y = y + (offset * 2);
                MasterIndex = 936; //Pax Pox Deck
            }
            else if(Index == 19)
            {
                x = x + (offset * 1);
                y = y + (offset * 2);
                MasterIndex = 959; //Quarter Deck
            }
            else if(Index == 20)
            {
                x = x + (offset * 2);
                y = y + (offset * 2);
                MasterIndex = 970; //Cardboard Tube Deck
            }
            else if(Index == 21)
            {
                x = x + (offset * 3);
                y = y + (offset * 2);
                MasterIndex = 953; //Merch Deck
            }
            else if(Index == 22)
            {
                x = x + (offset * 4);
                y = y + (offset * 2);
                MasterIndex = 975; //Flesh Reaper Deck
            }
            else if(Index == 23)
            {
                x = x + (offset * 0);
                y = y + (offset * 3);
                MasterIndex = 937; //Diabolus Deck
            }
            else if(Index == 24)
            {
                x = x + (offset * 1);
                y = y + (offset * 3);
                MasterIndex = 938; //Gabe's Gross Mouth Deck
            }
            else if(Index == 25)
            {
                x = x + (offset * 2);
                y = y + (offset * 3);
                MasterIndex = 939; //Game Face Deck
            }
            else if(Index == 26)
            {
                x = x + (offset * 3);
                y = y + (offset * 3);
                MasterIndex = 940; //Gun Horse Deck
            }
            else if(Index == 27)
            {
                x = x + (offset * 4);
                y = y + (offset * 3);
                MasterIndex = 941; //Mage Fish Deck
            }
            else if(Index == 28)
            {
                x = x + (offset * 5);
                y = y + (offset * 3);
                MasterIndex = 942; //Sad Zombie Deck
            }
            else if(Index == 29)
            {
                x = x + (offset * 0);
                y = y + (offset * 4);
                MasterIndex = 943; //Annika Deck
            }
            else if(Index == 30)
            {
                x = x + (offset * 1);
                y = y + (offset * 4);
                MasterIndex = 944; //Baby Ninja Deck
            }
            else if(Index == 31)
            {
                x = x + (offset * 2);
                y = y + (offset * 4);
                MasterIndex = 945; //Bat Milk Deck
            }
            else if(Index == 32)
            {
                x = x + (offset * 3);
                y = y + (offset * 4);
                MasterIndex = 946; //Bono Trask Timesqueezer Deck
            }
            else if(Index == 33)
            {
                x = x + (offset * 4);
                y = y + (offset * 4);
                MasterIndex = 947; //Bromance Deck
            }
            else if(Index == 34)
            {
                x = x + (offset * 5);
                y = y + (offset * 4);
                MasterIndex = 948; //Faerie Candymancer Deck
            }
            else if(Index == 35)
            {
                x = x + (offset * 6);
                y = y + (offset * 4);
                MasterIndex = 949; //Giraffe Problems Deck
            }
            else if(Index == 36)
            {
                x = x + (offset * 7);
                y = y + (offset * 4);
                MasterIndex = 950; //Kittens Deck
            }
            else if(Index == 37)
            {
                x = x + (offset * 8);
                y = y + (offset * 4);
                MasterIndex = 951; //Magical Unicorn Deck
            }
            else if(Index == 38)
            {
                x = x + (offset * 9);
                y = y + (offset * 4);
                MasterIndex = 952; //Magiquest Merchant Deck
            }
            else if(Index == 39)
            {
                x = x + (offset * 10);
                y = y + (offset * 4);
                MasterIndex = 953; //Natural Twenty Deck
            }
            else if(Index == 40)
            {
                x = x + (offset * 11);
                y = y + (offset * 4);
                MasterIndex = 954; //Photoshop Hero Deck
            }
            else if(Index == 41)
            {
                x = x + (offset * 0);
                y = y + (offset * 5);
                MasterIndex = 955; //Pickle Recognition Engine Deck
            }
            else if(Index == 42)
            {
                x = x + (offset * 1);
                y = y + (offset * 5);
                MasterIndex = 956; //Preschooler Lisa Deck
            }
            else if(Index == 43)
            {
                x = x + (offset * 2);
                y = y + (offset * 5);
                MasterIndex = 957; //Psychic Cat, Stone Yeti and Hawkman with a Lasergun Deck
            }
            else if(Index == 44)
            {
                x = x + (offset * 3);
                y = y + (offset * 5);
                MasterIndex = 958; //Robot Cowboy Angel
            }
            else if(Index == 45)
            {
                x = x + (offset * 4);
                y = y + (offset * 5);
                MasterIndex = 959; //The Salmon, something, and Hindsight
            }
            else if(Index == 46)
            {
                x = x + (offset * 5);
                y = y + (offset * 5);
                MasterIndex = 960; //Sinistine Deck
            }
            else if(Index == 47)
            {
                x = x + (offset * 6);
                y = y + (offset * 5);
                MasterIndex = 961; //Sorcelator Deck
            }
            else if(Index == 48)
            {
                x = x + (offset * 7);
                y = y + (offset * 5);
                MasterIndex = 962; //Super Hot Ostrich Deck
            }
            else if(Index == 49)
            {
                x = x + (offset * 8);
                y = y + (offset * 5);
                MasterIndex = 963; //Touchwieners Deck
            }
            else if(Index == 50)
            {
                x = x + (offset * 9);
                y = y + (offset * 5);
                MasterIndex = 964; //Werewolf In a Tophat Deck
            }
            else if(Index == 51)
            {
                x = x + (offset * 10);
                y = y + (offset * 5);
                MasterIndex = 965; //World's Biggest Grape Deck
            }
            else if(Index == 52)
            {
                x = x + (offset * 0);
                y = y + (offset * 6);
                MasterIndex = 966; //Broodax In Disguise Deck
            }
            else if(Index == 53)
            {
                x = x + (offset * 1);
                y = y + (offset * 6);
                MasterIndex = 967; //Canid Deck
            }
            else if(Index == 54)
            {
                x = x + (offset * 2);
                y = y + (offset * 6);
                MasterIndex = 968; //Chaos World Smasher Deck
            }
            else if(Index == 55)
            {
                x = x + (offset * 3);
                y = y + (offset * 6);
                MasterIndex = 969; //Deep Crow Deck
            }
            else if(Index == 56)
            {
                x = x + (offset * 4);
                y = y + (offset * 6);
                MasterIndex = 970; //Div Deck
            }
            else if(Index == 57)
            {
                x = x + (offset * 5);
                y = y + (offset * 6);
                MasterIndex = 971; //Evil Gumbo Deck
            }
            else if(Index == 58)
            {
                x = x + (offset * 6);
                y = y + (offset * 6);
                MasterIndex = 972; //Free Play User Deck
            }
            else if(Index == 59)
            {
                x = x + (offset * 7);
                y = y + (offset * 6);
                MasterIndex = 973; //Giant Cupcake Deck
            }
            else if(Index == 60)
            {
                x = x + (offset * 8);
                y = y + (offset * 6);
                MasterIndex = 974; //Giant Snake Deck
            }
            else if(Index == 61)
            {
                x = x + (offset * 9);
                y = y + (offset * 6);
                MasterIndex = 975; //Globfather Deck
            }
            else if(Index == 62)
            {
                x = x + (offset * 10);
                y = y + (offset * 6);
                MasterIndex = 976; //Golf Cyborg Deck
            }
            else if(Index == 63)
            {
                x = x + (offset * 11);
                y = y + (offset * 6);
                MasterIndex = 977; //Headcrabs Deck
            }
            else if(Index == 64)
            {
                x = x + (offset * 0);
                y = y + (offset * 7);
                MasterIndex = 978; //Highly Trained Badger Deck
            }
            else if(Index == 65)
            {
                x = x + (offset * 1);
                y = y + (offset * 7);
                MasterIndex = 979; //Laser Squid Deck
            }
            else if(Index == 66)
            {
                x = x + (offset * 2);
                y = y + (offset * 7);
                MasterIndex = 980; //Man-Sized Spider Deck
            }
            else if(Index == 67)
            {
                x = x + (offset * 3);
                y = y + (offset * 7);
                MasterIndex = 981; //Nipple Crabs Deck
            }
            else if(Index == 68)
            {
                x = x + (offset * 4);
                y = y + (offset * 7);
                MasterIndex = 982; //Professor Necro-Dead Deck
            }
            else if(Index == 69)
            {
                x = x + (offset * 5);
                y = y + (offset * 7);
                MasterIndex = 983; //Scrotuum Deck
            }
            else if(Index == 70)
            {
                x = x + (offset * 6);
                y = y + (offset * 7);
                MasterIndex = 984; //Spectral Worm Deck
            }
            else if(Index == 71)
            {
                x = x + (offset * 7);
                y = y + (offset * 7);
                MasterIndex = 985; //Tiny Bat Deck
            }
            else if(Index == 72)
            {
                x = x + (offset * 8);
                y = y + (offset * 7);
                MasterIndex = 986; //Were Swan Deck
            }
            else if(Index == 73)
            {
                x = x + (offset * 9);
                y = y + (offset * 7);
                MasterIndex = 987; //Winter King Deck
            }
            else if(Index == 74)
            {
                x = x + (offset * 10);
                y = y + (offset * 7);
                MasterIndex = 988; //Witchalok Deck
            }
            else
            {
                instance_destroy();
            }
        }
        else if(obj_Phase.Index == 1) //Play
        {
            if(Index == 0)
            {
                x = x + (offset * 1);
                y = y + (offset * 0);
                MasterIndex = 695; //Globfather Token
                Index = 75;
            }
            else if(Index == 1)
            {
                x = x + (offset * 2);
                y = y + (offset * 0);
                MasterIndex = 81; //Standard Chart
                Index = 76;
            }
            else if(Index == 2)
            {
                x = x + (offset * 3);
                y = y + (offset * 0);
                MasterIndex = 79; //Standard D20
                Index = 77;
			}
            else
            {
                instance_destroy();
            }
        }
    }
    else
    {
        instance_destroy();
    }
	
    Startup = 1;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//offsetX = x - view_xview[0];
//offsetY = y - view_yview[0];
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Adjust = true;
AdjustText = false;

OptionWidth = 32;
OptionHeight = 32;
VersionHeight = 48;

//x,y coordinates are previously determined
//x = view_xview[0] + 0; //Align to left of view
//y = view_yview[0] + 0 + VersionHeight; //Align to top of view below the version display

DynXRatio = (x - view_xview[0]) / obj_Controller.OriginalViewWidth;//view_wview[0];
x = view_xview[0] + DynXRatio * obj_Controller.OriginalViewWidth;//view_wview[0];

DynYRatio = (y - view_yview[0]) / obj_Controller.OriginalViewHeight;//view_hview[0];
y = view_yview[0] + DynYRatio * obj_Controller.OriginalViewHeight;//view_hview[0];

DynWidthRatio = OptionWidth / obj_Controller.OriginalViewWidth;//view_wview[0];
DynWidth = DynWidthRatio * view_wview[0]; //===OptionWidth

DynHeightRatio = OptionHeight / obj_Controller.OriginalViewHeight;//view_hview[0];
DynHeight = DynHeightRatio * view_hview[0]; //===OptionHeight


//DynWidth = ceil(DynWidthRatio * view_wview[0]);
//DynHeight = ceil(DynHeightRatio * view_hview[0]);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>MasterIndex = (-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//x = view_xview[0] + offsetX;
//y = view_yview[0] + offsetY;

x = view_xview[0] + DynXRatio * view_wview[0];
y = view_yview[0] + DynYRatio * view_hview[0];
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_Player.Holding == 0)
{
    //create appropriate object
    scr_CreateObjectByIndex(x,y,MasterIndex);
    
    if(obj_Phase.Index != 0)
    {
        obj_Box.OptionCount = 0;
        obj_Box.Pressed = 0;
        with(obj_Option)
        {
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
