<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprammoPkup</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>effective=false; //effective determines whether the pickup can be picked up. It starts as false so when an enemy drops it, there won't be any problems
alarm[0]=3; //this alarm is for setting effective to true

if (instance_exists(objenemy)) //if the enemy exists (to prevent errors)
{
    var owner;
    owner=instance_nearest(x,y,objenemy); //the 'supposed' owner of this pickup (the one who dropped it)
    if (point_distance(x,y,owner.x,owner.y) &lt; 5) //if the distance between the pickup and the owner is less than 5 (used to find if it was dropped or not)
    {
        if (owner.dropAmmo==1) //if the owner did actually drop it
        {
            type=owner.gun; //set the type of this pickup to the gun that the owner was using
            with (owner) //with the owner
            {
                instance_destroy(); //destroy the owner
            }
        }
    }
    else //if the distance between the pickup and the owner is greater than or equal to 5 (used to find if it was dropped or not)
    {
        type=choose(0,1,2,3,4); //randomly choose the type of ammo in the pickup
    }
}
else //if objenemy doesn't exist
{
    type=choose(0,1,2,3,4); //randomly choose the type of ammo in the pickup
}

//the following is a 1 dimension array which holds the values of the ammo pickup (the numbers represent the type of ammo)
value[0]=100;
value[1]=60;
value[2]=40;
value[3]=20;
value[4]=25;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>effective=true; //allows the pickup to be picked up</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objenemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (effective==true) //if it can be picked up
{
    instance_destroy(); //the A.I has infinite spare ammo, so I don't need to do any equations, but at least I'll destroy the pickup to make it realistic
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objplayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (effective==true) //if it can be picked up
{
    var sprAmmo,sprAmmo,maxSprAmmo;
    sprAmmo=objplayer.gunArray[type,3]; //spare ammo
    maxSprAmmo=objplayer.gunArray[type,4]; //max spare ammo
    objplayer.gunArray[type,3]=min(sprAmmo+value[type],maxSprAmmo); //sets the spare ammo to either the spare ammo with the ammo pickup, or max (depending on which is smaller)
    instance_destroy(); //destroy the pickup
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
