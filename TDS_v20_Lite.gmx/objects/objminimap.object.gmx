<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>rad=65; //the radius of the circle drawn for the base of the minimap
minRad=0; //the mini outline expanding circle's radius (starting) (this is only to give it that radar feel, you can take it out)
len=950; //the distance you want to see in the minimap
scale=len/rad; //the scale of the map (don't worry about why it's here)
alarm[0]=20; //the alarm which is used to increase the size of the mini expanding circle (if you don't want the expanding circle outline, take this out)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if you don't want the expanding circle outline, take this out
if (minRad &lt; rad) //if the radius of expanding circle is smaller than the radius of the minimap base
{
    minRad+=1; //add 1 onto the radius of the expanding circle
}
else //if the radius of expanding circle is greater than or equal the radius of the minimap base
{
    minRad=0; //set the radius of the expanding circle to 0
}
alarm[0]=2; //set this alarm again
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=view_xview[0]+100;
y=view_yview[0]+520;
//to move into view if your view follows a player or something

//Minimap base:
draw_set_alpha(0.65); //set alpha to make the minimap partially transparent
draw_set_color(c_green);
draw_circle(x,y,rad,false); //draw the minimap base
//Expanding mini circle outline:
draw_set_alpha(0.8); //set alpha to make the line partially transparent
draw_circle(x,y,minRad,true); //draw the expanding mini circle
draw_set_alpha(1); //reset alpha to 1
//Outline of minimap base:
draw_circle(x,y,rad,true); //draw a basic outline of the base

with (objenemy) //draw the enemies (this loops through them)
{
    draw_set_color(c_red);
    if (point_distance(objplayer.x,objplayer.y,x,y) &lt; other.len) //if the distance between the player and the enemy is less than the radar's range (len)
    {
        draw_circle(other.x+(cos(degtorad(point_direction(objplayer.x,objplayer.y,x,y)))*(point_distance(objplayer.x,objplayer.y,x,y)/other.scale)),other.y-(sin(degtorad(point_direction(objplayer.x,objplayer.y,x,y)))*(point_distance(objplayer.x,objplayer.y,x,y)/other.scale)),2,false); //draw the enemy icon (basic circle)
    }
}
with (objplayer) //draw the player
{
    draw_set_color(c_yellow);
    draw_circle(other.x,other.y,2,false); //draw the player icon (basic circle)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
