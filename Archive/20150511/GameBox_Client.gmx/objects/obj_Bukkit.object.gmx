<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>55</depth>
  <persistent>0</persistent>
  <parentName>obj_Container</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(position_meeting(mouse_x,mouse_y,obj_BukkitSubMenu) == false &amp;&amp; obj_Player.Holding == 0)
{
    if(Pressed == 0)
    {
        Pressed = 1;
        for(i=0;i&lt;Limit;i+=1)
        {
            obj_Controller.Pass = id;
            instance_create(x,y,obj_BukkitSubMenu);
            SubMenuIndex += 1;
        }
        SubMenuIndex = 0;
    }
    else if(Pressed == 1)
    {
        Pressed = 0;
        with(obj_BukkitSubMenu)
        {
            if(ParentIndex == other.id)
            {
                instance_destroy();
            }
        }
        OptionCount = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//switch hold
if((position_meeting(mouse_x, mouse_y, obj_SubMenu) == false) &amp;&amp; (position_meeting(mouse_x, mouse_y, obj_Option) == false))
{
    if(obj_Player.Holding == 0 || ((obj_Player.Holding == 1 &amp;&amp; Hold == obj_Player.Index)))
    {
        if(Hold == (-1) || Hold == obj_Player.Index)
        {
            if(Selected == false)
            {
                //if object is not under another game object
                if(scr_DetermineIfGameObjectUnder() == false)
                {
                
                    Selected = true;
                    obj_Player.Holding = 1;
                    temp_x = mouse_x - x;
                    temp_y = mouse_y - y;
                    //depth -= 1;
                    depth = obj_Controller.PickupHeight;
                    scr_SendUpdateObjectDepth();
                }
            }
            else if(Selected == true)
            {
                Selected = false;
                obj_Player.Holding = 0;
                temp_x = 0;
                temp_y = 0;
                //depth += 1;
                scr_DetermineGameObjectHeight();

                if(position_meeting(x,y,obj_Table) == false)
                {
                    instance_destroy();
                }
                else if(place_meeting(x,y,obj_Dice) == true)
                {
                    
                    with(obj_Dice)
                    {
                        if(place_meeting(x,y,other.id) == true)
                        {
                            ds_list_add(other.ListIndex, MasterIndex);
                            ds_list_add(other.ValueListIndex, Limit);
                            instance_destroy();
                        }
                    }
                }
                
            }
            
            if(Hold == (-1))
             {
                Hold = obj_Player.Index;
             }
             else if(Hold == obj_Player.Index)
             {
                Hold = (-1);
             }
             scr_SendUpdateObjectHold();
        }
    }
    
    
    with(obj_BukkitSubMenu)
    {
        if(other.id == ParentIndex)
        {
            with(obj_Bukkit)
            {
                if(id == other.ParentIndex)
                {
                    Pressed = 0;
                }
            }
        
            instance_destroy();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
