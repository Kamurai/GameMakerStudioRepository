<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Example init (not part of the bug)
doBug = true;
example = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// ===== Begin Bug Demo ========

// The ds_list_find_index() data corruption bug depends on the data types of the values used/searched

if (example == 0) var v0 = 4, v1 = 5, v2 = "a", valSearch = "b"; // example 0 values
else var v0 = "a", v1 = "b", v2 = 4, valSearch = 0; // example 1 values

show_message("Running example " + string(example) + " [" + string_repeat("BUGGED", doBug) + string_repeat("OK", !doBug) + "].##Adding the following values to a ds_list: " + string(v0) + ", " + string(v1) + ", " + string(v2));

//

list = ds_list_create();

ds_list_add(list, v0); // index 0
ds_list_add(list, v1); // index 1
ds_list_add(list, v2); // index 2

// Bug Here

if (doBug) {
    show_message("Executing ds_list_find_index() with search value: " + string(valSearch));

    ds_list_find_index(list, valSearch); // ##### Corrupts!!! #####
}
else show_message("NOT executing ds_list_find_index()");

// For example0: At this point, if we use ds_list_find_value() on index 0 or 1, we'll get an empty string back, which is incorrect, but index 2 returns fine.
// For example1: At this point, if we use ds_list_find_value() on index 2 this time, we'll get an empty string back, which is incorrect, but indexes 0-1 return fine.

show_message("List value at index 0 should be " + string(v0) + ", and is: " + string(ds_list_find_value(list, 0)));
show_message("List value at index 1 should be " + string(v1) + ", and is: " + string(ds_list_find_value(list, 1)));
show_message("List value at index 2 should be " + string(v2) + ", and is: " + string(ds_list_find_value(list, 2)));

// ====== End Bug Demo =========


// Example finish (not part of the bug)

ds_list_destroy(list);

if (show_question("Note that after running ds_list_find_index(), empty strings are returned where they shouldn't be (depending on the data types used/searched). Click Yes to restart example " + string(example) + " with ds_list_find_index() " + string_repeat("OMITTED", doBug) + string_repeat("EXECUTED", !doBug) + ". Click No to " + string_repeat("close the app", example) + string_repeat("switch to example " + string(!example), !example) + ".")) doBug = !doBug;
else if (example) {
    game_end();
    exit;
}
else example = !example;

room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
