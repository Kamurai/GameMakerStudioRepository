<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_laser_5</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x=obj_creator_2.x//change to your ship
y=obj_creator_2.y//or whatever you want to do

direction=point_direction(x,y,mouse_x,mouse_y);//the distance
image_angle=direction+random(.5)-.25;
/*adds a little randomness in the direction
a random(1) means that it can be a number from 0 to 1, and by doing a minus -.5
it makes the 0 a -.5, and the 1 a .5, thus setting a ramdomness from -.5 to .5
It kind of brakes up the laser over a large distance of space. One may like it or or not*/
wobble=1;//the amount it may shake or wobble
angle=point_direction(x,y,mouse_x,mouse_y);//the angle
can_change=1;//just makes it make up its mind to tell it to start on 1 and not 0, because i said so
image_alpha=1;//the transparency that the lasers start with
can_create=true;//lets one create more lasers for the beam
//timer=.3;//another way to destroy the laser
add=0;
dist_to_it=0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>two ways to do it...</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if dist_to_it&lt;=25{//startup distance shouldn't be smaller than the speed
    dist_to_it+=5;//startup speed
    }
else{
    dist_to_it=25;//front speed, could be 25
    add=15;//back speed &amp; speed of x, and y, This is better to keep lower, so objects pickup on the collision. could be 15
    }
if distance_to_object(obj_thing_2)&lt;=5{//this is just to make total sure that nothing gets past the object
    image_alpha=0;//can also indicate the nearest enemy to get ___ damage.
    }
x=x+lengthdir_x(add,image_angle)y=y+lengthdir_y(add,image_angle);//The lengthdir calculator is a great example to have.

image_alpha-=.022;//range
if image_alpha&lt;=0{//||timer&lt;=0{//destroys the object if the timer decreased fast enough, or else the image_alpha will destroy it
    instance_destroy();
    }

    </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if point_distance(xstart,ystart,obj_thing_2.x,obj_thing_2.y)&lt;=dist_to_it+100{
    dist_to_it=-100;
    }
else{
    dist_to_it+=7;//start up speed
    }
if point_distance(xstart,ystart,obj_thing_2.x,obj_thing_2.y)&lt;=add+100{
    add=0;
    x=obj_thing.x;
    y=obj_thing.y;
    }
else{
    add=50;//how fast it moves
    if dist_to_it&gt;=50{//distance of laser
        x=x+lengthdir_x(add,image_angle)y=y+lengthdir_y(add,image_angle);//The lengthdir calculator is a great example to have.
        dist_to_it-=7;
        }
    }


image_alpha-=.052;//generaly from .03  to .015
if image_alpha=0{//||timer&lt;=0{//destroys the object if the timer decreased fast enough, or else the image_alpha will destroy it
    instance_destroy();
    }*/

    </string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//each step it does one or the other
if can_change=0{
    wobble+=.3;//this increases the width of the beam
    can_change=1;//sets it to do can_change 1 in the next step
    //timer-=.01
    exit
    }
if can_change=1{
    wobble-=.3;//this shrinks the width of the beam, thus making it wobble or shake
    can_change=0;
    //timer-=.01
    exit
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_blend_mode(bm_add);//this just adds some brightness to overlapping lasers

draw_sprite_ext(spr_laser_5,image_index,xprevious,yprevious,dist_to_it,wobble,angle,c_white,image_alpha);//draws the previous laser

draw_sprite_ext(spr_laser_5,image_index,x,y,dist_to_it,wobble,angle,c_white,image_alpha);//draws the actual laser

draw_set_blend_mode(bm_normal);//this is so all the other objects don't get brightend colors if something goes over them</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
