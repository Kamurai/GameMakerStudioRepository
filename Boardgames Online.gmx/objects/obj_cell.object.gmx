<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cell</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_single=0;
lastMoveStartX=0;
lastMoveStartY=0;
lastMoveEndX=0;
lastMoveEndY=0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(global.playersTurn &amp;&amp; global.playersState=1) {
if(myPiece!=noone) { //A piece is on this cell
    if(myPiece.image_single=0) { //It's your piece
    if(global.currentPiece!=myPiece) {
        with(obj_moveTo) instance_destroy();
        obj_cell.image_single=0;
        obj_cell.visible=false;
        image_single=1;
        visible=true;
        global.isPieceClicked=true;
        global.currentPiece=myPiece;
        global.currentCell=id;
        execute_string(moveFields);
    }
    else {
        with(obj_moveTo) instance_destroy();
        image_single=0;
        visible=false;
        global.isPieceClicked=false;
        global.currentPiece=noone;
        global.currentCell=noone;
    }
    }
    else if(position_meeting(x,y,obj_moveTo)) { //you're killing the opponents piece
        with(global.currentCell) { isEmpty=true; myPiece=noone; }
        global.lastMoveStartX=global.currentPiece.x;
        global.lastMoveStartY=global.currentPiece.y;
        global.lastMoveEndX=x;
        global.lastMoveEndY=y;
        global.currentPiece.x=x;
        global.currentPiece.y=y;
        
        clearbuffer();
        writebyte(movement);
        writestring(object_get_name(global.currentPiece.object_index));
        writeushort(global.currentPiece.ID);
        writeshort(x-global.currentPiece.xprevious);
        writeshort(y-global.currentPiece.yprevious);
        sendmessage(global.socket); //send move to server
        
        global.playersTurn=0;
        
        if(object_get_name(myPiece.object_index)="obj_king") { //you won
            scr_chat_write("System: --- " + global.playersName + " won the game! ---",c_maroon);
            clearbuffer();
            writebyte(chat);
            writestring("System: --- " + global.playersName + " won the game! ---");
            writeint(c_maroon);
            sendmessage(global.socket);
            obj_button_playagain.visible=1;
        }
        else { //you haven't won yet, give turn to opponent
            clearbuffer();
            writebyte(setturn);
            sendmessage(global.socket); //opponents turn
        }
        
        with(obj_moveTo) instance_destroy();
        global.currentCell.image_single=0;
        global.currentCell.visible=false;
        global.isPieceClicked=false;
        global.currentPiece=noone;
        global.currentCell=noone;
        with(myPiece) { x=30; y=380; while(collision_point(x,y,all,0,1)) x+=20; }
        with(obj_cell) event_user(0);
    }
}
else {
    if(position_meeting(x,y,obj_moveTo)) {
        with(global.currentCell) { isEmpty=true; myPiece=noone; }
        global.lastMoveStartX=global.currentPiece.x;
        global.lastMoveStartY=global.currentPiece.y;
        global.lastMoveEndX=x;
        global.lastMoveEndY=y;
        global.currentPiece.x=x;
        global.currentPiece.y=y;
        
        clearbuffer();
        writebyte(movement);
        writestring(object_get_name(global.currentPiece.object_index));
        writeushort(global.currentPiece.ID);
        writeshort(x-global.currentPiece.xprevious);
        writeshort(y-global.currentPiece.yprevious);
        sendmessage(global.socket); //send move to server
        
        global.playersTurn=0;
        clearbuffer();
        writebyte(setturn);
        sendmessage(global.socket); //opponents turn
        
        with(obj_moveTo) instance_destroy();
        global.currentCell.image_single=0;
        global.currentCell.visible=false;
        global.isPieceClicked=false;
        global.currentPiece=noone;
        global.currentCell=noone;
        with(obj_cell) event_user(0);
    }
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//define cell piece
if(collision_point(x,y,all,0,1)) myPiece=collision_point(x,y,all,0,1).id; else myPiece=noone;
if(myPiece!=noone) {
    isEmpty=false;
    myPieceName=object_get_name(myPiece.object_index);
    if(myPieceName="obj_pawn") {
        moveFields="var empty;
                    empty=true;
                    if(collision_point(x,y-40,obj_cell,0,1) &amp;&amp; y-40&gt;=40) { if(collision_point(x,y-40,obj_cell,0,1).isEmpty=true) instance_create(x,y-40,obj_moveTo); else empty=false; }
                    if(y=280 &amp;&amp; empty) if(collision_point(x,y-80,obj_cell,0,1) &amp;&amp; y-80&gt;=40) { if(collision_point(x,y-80,obj_cell,0,1).isEmpty=true) instance_create(x,y-80,obj_moveTo); }
                    if(collision_point(x-40,y-40,obj_cell,0,1) &amp;&amp; x-40&gt;=40 &amp;&amp; y-40&gt;=40) { if(collision_point(x-40,y-40,obj_cell,0,1).isEmpty=false) instance_create(x-40,y-40,obj_moveTo); }
                    if(collision_point(x+40,y-40,obj_cell,0,1) &amp;&amp; x+40&lt;=320 &amp;&amp; y-40&gt;=40) { if(collision_point(x+40,y-40,obj_cell,0,1).isEmpty=false) instance_create(x+40,y-40,obj_moveTo); }";
    }
    else if(myPieceName="obj_knight") {
        moveFields="if(collision_point(x+40,y-80,obj_cell,0,1) &amp;&amp; y-80&gt;=40 &amp;&amp; x+40&lt;=320) { instance_create(x+40,y-80,obj_moveTo); }
                    if(collision_point(x-40,y-80,obj_cell,0,1) &amp;&amp; y-80&gt;=40 &amp;&amp; x-40&gt;=40) { instance_create(x-40,y-80,obj_moveTo); }
                    if(collision_point(x+80,y-40,obj_cell,0,1) &amp;&amp; y-40&gt;=40 &amp;&amp; x+80&lt;=320) { instance_create(x+80,y-40,obj_moveTo); }
                    if(collision_point(x+80,y+40,obj_cell,0,1) &amp;&amp; y+40&lt;=320 &amp;&amp; x+80&lt;=320) { instance_create(x+80,y+40,obj_moveTo); }
                    if(collision_point(x-80,y-40,obj_cell,0,1) &amp;&amp; y-40&gt;=40 &amp;&amp; x-80&gt;=40) { instance_create(x-80,y-40,obj_moveTo); }
                    if(collision_point(x-80,y+40,obj_cell,0,1) &amp;&amp; y+40&lt;=320 &amp;&amp; x-80&gt;=40) { instance_create(x-80,y+40,obj_moveTo); }
                    if(collision_point(x+40,y+80,obj_cell,0,1) &amp;&amp; y+80&lt;=320 &amp;&amp; x+40&lt;=320) { instance_create(x+40,y+80,obj_moveTo); }
                    if(collision_point(x-40,y+80,obj_cell,0,1) &amp;&amp; y+80&lt;=320 &amp;&amp; x-40&gt;=40) { instance_create(x-40,y+80,obj_moveTo); }";
    }
    else if(myPieceName="obj_rook") {
        moveFields="if(y-40&gt;=40) {
                        for(i=1;i&lt;=y/40;i+=1) {
                            if(collision_point(x,y-40*i,obj_cell,0,1) &amp;&amp; y-40*i&gt;=40) { instance_create(x,y-40*i,obj_moveTo); if(collision_point(x,y-40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y+40&lt;=320) {
                        for(i=1;i&lt;=(320-y)/40;i+=1) {
                            if(collision_point(x,y+40*i,obj_cell,0,1) &amp;&amp; y+40*i&lt;=320) { instance_create(x,y+40*i,obj_moveTo); if(collision_point(x,y+40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(x+40&lt;=320) {
                        for(i=1;i&lt;=(320-x)/40;i+=1) {
                            if(collision_point(x+40*i,y,obj_cell,0,1) &amp;&amp; x+40*i&lt;=320) { instance_create(x+40*i,y,obj_moveTo); if(collision_point(x+40*i,y,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(x-40&gt;=40) {
                        for(i=1;i&lt;=x/40;i+=1) {
                            if(collision_point(x-40*i,y,obj_cell,0,1) &amp;&amp; x-40*i&gt;=40) { instance_create(x-40*i,y,obj_moveTo); if(collision_point(x-40*i,y,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }";
    }
    else if(myPieceName="obj_bishop") {
        moveFields="if(y-40&gt;=40 &amp;&amp; x-40&gt;=40) {
                        for(i=1;i&lt;x/40;i+=1) {
                            if(collision_point(x-40*i,y-40*i,obj_cell,0,1) &amp;&amp; x-40*i&gt;=40 &amp;&amp; y-40*i&gt;=40) { instance_create(x-40*i,y-40*i,obj_moveTo); if(collision_point(x-40*i,y-40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y-40&gt;=40 &amp;&amp; x+40&lt;=320) {
                        for(i=1;i&lt;(320-x)/40+1;i+=1) {
                            if(collision_point(x+40*i,y-40*i,obj_cell,0,1) &amp;&amp; x+40*i&lt;=320 &amp;&amp; y-40*i&gt;=40) { instance_create(x+40*i,y-40*i,obj_moveTo); if(collision_point(x+40*i,y-40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y+40&lt;=320 &amp;&amp; x-40&gt;=40) {
                        for(i=1;i&lt;x/40;i+=1) {
                            if(collision_point(x-40*i,y+40*i,obj_cell,0,1) &amp;&amp; x-40*i&gt;=40 &amp;&amp; y+40*i&lt;=320) { instance_create(x-40*i,y+40*i,obj_moveTo); if(collision_point(x-40*i,y+40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y+40&lt;=320 &amp;&amp; x+40&lt;=320) {
                        for(i=1;i&lt;(320-x)/40+1;i+=1) {
                            if(collision_point(x+40*i,y+40*i,obj_cell,0,1) &amp;&amp; x+40*i&lt;=320 &amp;&amp; y+40*i&lt;=320) { instance_create(x+40*i,y+40*i,obj_moveTo); if(collision_point(x+40*i,y+40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }";
    }
    else if(myPieceName="obj_queen") {
        moveFields="if(y-40&gt;=40 &amp;&amp; x-40&gt;=40) {
                        for(i=1;i&lt;x/40;i+=1) {
                            if(collision_point(x-40*i,y-40*i,obj_cell,0,1) &amp;&amp; x-40*i&gt;=40 &amp;&amp; y-40*i&gt;=40) { instance_create(x-40*i,y-40*i,obj_moveTo); if(collision_point(x-40*i,y-40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y-40&gt;=40 &amp;&amp; x+40&lt;=320) {
                        for(i=1;i&lt;(320-x)/40+1;i+=1) {
                            if(collision_point(x+40*i,y-40*i,obj_cell,0,1) &amp;&amp; x+40*i&lt;=320 &amp;&amp; y-40*i&gt;=40) { instance_create(x+40*i,y-40*i,obj_moveTo); if(collision_point(x+40*i,y-40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y+40&lt;=320 &amp;&amp; x-40&gt;=40) {
                        for(i=1;i&lt;x/40;i+=1) {
                            if(collision_point(x-40*i,y+40*i,obj_cell,0,1) &amp;&amp; x-40*i&gt;=40 &amp;&amp; y+40*i&lt;=320) { instance_create(x-40*i,y+40*i,obj_moveTo); if(collision_point(x-40*i,y+40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y+40&lt;=320 &amp;&amp; x+40&lt;=320) {
                        for(i=1;i&lt;(320-x)/40+1;i+=1) {
                            if(collision_point(x+40*i,y+40*i,obj_cell,0,1) &amp;&amp; x+40*i&lt;=320 &amp;&amp; y+40*i&lt;=320) { instance_create(x+40*i,y+40*i,obj_moveTo); if(collision_point(x+40*i,y+40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y-40&gt;=40) {
                        for(i=1;i&lt;=y/40;i+=1) {
                            if(collision_point(x,y-40*i,obj_cell,0,1) &amp;&amp; y-40*i&gt;=40) { instance_create(x,y-40*i,obj_moveTo); if(collision_point(x,y-40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(y+40&lt;=320) {
                        for(i=1;i&lt;=(320-y)/40;i+=1) {
                            if(collision_point(x,y+40*i,obj_cell,0,1) &amp;&amp; y+40*i&lt;=320) { instance_create(x,y+40*i,obj_moveTo); if(collision_point(x,y+40*i,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(x+40&lt;=320) {
                        for(i=1;i&lt;=(320-x)/40;i+=1) {
                            if(collision_point(x+40*i,y,obj_cell,0,1) &amp;&amp; x+40*i&lt;=320) { instance_create(x+40*i,y,obj_moveTo); if(collision_point(x+40*i,y,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }
                    if(x-40&gt;=40) {
                        for(i=1;i&lt;=x/40;i+=1) {
                            if(collision_point(x-40*i,y,obj_cell,0,1) &amp;&amp; x-40*i&gt;=40) { instance_create(x-40*i,y,obj_moveTo); if(collision_point(x-40*i,y,obj_cell,0,1).isEmpty=false) break; }
                        }
                    }";
    }
    else if(myPieceName="obj_king") {
        moveFields="if(y-40&gt;=40) { instance_create(x,y-40,obj_moveTo); if(x+40&lt;=320) instance_create(x+40,y-40,obj_moveTo); if(x-40&gt;=40) instance_create(x-40,y-40,obj_moveTo); }
                    if(y+40&lt;=320) { instance_create(x,y+40,obj_moveTo); if(x+40&lt;=320) instance_create(x+40,y+40,obj_moveTo); if(x-40&gt;=40) instance_create(x-40,y+40,obj_moveTo); }
                    if(x-40&gt;=40) instance_create(x-40,y,obj_moveTo);
                    if(x+40&lt;=320) instance_create(x+40,y,obj_moveTo);";
    }
}
else { myPieceName=""; isEmpty=true; }
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
