<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Ammunition</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Interface_Object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Target = 0;
Destination_x = 0;
Destination_y = 0;
Speed = 0;

//check each building
with( Building )
{
    //if this building created this ammunition
        //if x and y coordinates are the same
    if( x == other.x &amp;&amp; y == other.y )
    {
        //copy target to Ammunition
        other.Target = Target;
    }
    
}

Destination_x = Target.x;
Destination_y = Target.y;

//determine distance between this object and the Target
    //this must be traverse in one second
    //as speed is number or pixels traveled per step, distance == speed
    
//if Target exists
if( Target != 0 )
{
    Speed = (sqrt( sqr(x - Target.x /* + (sprite_width/2) - (Target.sprite_width/2)*/) + sqr(y - Target.y) )/2 );/// room_speed);
    move_towards_point(Target.x, Target.y, Speed);
}
else
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
if( Target != 0 )
{
    Destination_x = Target.x;
    Destination_y = Target.y;
}
*/
move_towards_point(Destination_x, Destination_y, Speed);

//if ammunition collides with intended Target
if( collision_with(Target) )
{
    instance_destroy();
}

//if ammunition reaches destination after Target is dead
if( (x == Destination_x &amp;&amp; y == Destination_y) )
{
    instance_destroy();
}

//if ammunition is within 1 pixel of Destination
if( point_distance(x, y, Destination_x, Destination_y) &lt; 1 )
{
    instance_destroy();
}

//if ammunition comes to a "stop"
if( speed == 0 )
{
    instance_destroy();

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
