<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Selection = 5; //Number of objects that will be generated for the picture search
Limit = 19; //Number of possible objects that could be generated for the picture search
Count = 0;  //Tracks the number of pictures created (picture indices are assigned from this)
FoundCount = 0; //Number of pictures found

Base = 32; //Height and Width base of sprites

//Set a Selection number of pictures to search
for(tracker = 0; tracker &lt; Selection; tracker++)
{
    Picture[tracker] = floor(random(Limit)); //assign a random integer from 0 to Limit
    for(y = 0; y &lt; tracker; y++) //check from first assigned number to current number
    {
        if(Picture[tracker] == Picture[y]) //if current number equals a previous
        {
            tracker--; //set tracker loop to reassign current number
            break; //escape y loop
        }
    }
}

for(tracker = 0; tracker &lt; Selection; tracker++)
{
    Found[tracker] = false;
}

//Create the pictures based on indetracker
for(tracker = 0; tracker &lt; Selection; tracker++)
{
    if(Picture[tracker] == 0) //Black
    {
        instance_create(Base*11,Base*11,obj_Square); 
    }
    else if(Picture[tracker] == 1) //Brown
    {
        instance_create(Base*13,Base*17,obj_Square);    
    }
    else if(Picture[tracker] == 2) //Burnt
    {
        instance_create(Base*28,Base*4,obj_Square);
    }
    else if(Picture[tracker] == 3) //DkBlue
    {
        instance_create(Base*25,Base*14,obj_Square);
    }
    else if(Picture[tracker] == 4) //DkGrey
    {
        instance_create(Base*29,Base*17,obj_Square);
    }
    else if(Picture[tracker] == 5) //Green
    {
        instance_create(Base*6,Base*9,obj_Square);
    }
    else if(Picture[tracker] == 6) //Grey
    {
        instance_create(Base*21,Base*11,obj_Square);
    }
    else if(Picture[tracker] == 7) //Lavender
    {
        instance_create(Base*17,Base*15,obj_Square);
    }
    else if(Picture[tracker] == 8) //Lime
    {
        instance_create(Base*14,Base*8,obj_Square);
    }
    else if(Picture[tracker] == 9) //Orange
    {
        instance_create(Base*29,Base*9,obj_Square);
    }
    else if(Picture[tracker] == 10) //Pink
    {
        instance_create(Base*19,Base*4,obj_Square);
    }
    else if(Picture[tracker] == 11) //Red
    {
        instance_create(Base*4,Base*2,obj_Square);
    }
    else if(Picture[tracker] == 12) //Seafoam
    {
        instance_create(Base*8,Base*15,obj_Square);
    }
    else if(Picture[tracker] == 13) //Sky
    {
        instance_create(Base*24,Base*8,obj_Square);
    }
    else if(Picture[tracker] == 14) //Tan
    {
        instance_create(Base*3,Base*14,obj_Square);
    }
    else if(Picture[tracker] == 15) //Tangerine
    {
        instance_create(Base*29,Base*9,obj_Square);
    }
    else if(Picture[tracker] == 16) //Turquoise
    {
        instance_create(Base*24,Base*4,obj_Square);
    }
    else if(Picture[tracker] == 17) //Violet
    {
        instance_create(Base*17,Base*12,obj_Square);
    }
    else if(Picture[tracker] == 18) //Yellow
    {
        instance_create(Base*13,Base*2,obj_Square);
    }
    
    Count++;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(FoundCount == Selection)
{
    WinFlag = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
