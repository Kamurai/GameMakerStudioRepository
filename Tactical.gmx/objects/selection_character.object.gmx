<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//check position

//initialize class
class = 0;

    //player 1
        //first row
//if this is player 1's marker 1
if( x == 6 &amp;&amp; y == 6 &amp;&amp; global.class[1,1] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,1];
}   
//if this is player 1's marker 2
else if( x == 42 &amp;&amp; y == 6 &amp;&amp; global.class[1,2] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,2];
}
//if this is player 1's marker 3
else if( x == 78 &amp;&amp; y == 6 &amp;&amp; global.class[1,3] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,3];
}
//if this is player 1's marker 4
else if( x == 114 &amp;&amp; y == 6 &amp;&amp; global.class[1,4] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,4];
}
//if this is player 1's marker 5
else if( x == 150 &amp;&amp; y == 6 &amp;&amp; global.class[1,5] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,5];
}
//if this is player 1's marker 6
else if( x == 186 &amp;&amp; y == 6 &amp;&amp; global.class[1,6] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,6];
}
//if this is player 1's marker 7
else if( x == 222 &amp;&amp; y == 6 &amp;&amp; global.class[1,7] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,7];
}
//if this is player 1's marker 8
else if( x == 258 &amp;&amp; y == 6 &amp;&amp; global.class[1,8] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,8];
}
//if this is player 1's marker 9
else if( x == 294 &amp;&amp; y == 6 &amp;&amp; global.class[1,9] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,9];
}
//if this is player 1's marker 10
else if( x == 330 &amp;&amp; y == 6 &amp;&amp; global.class[1,10] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,10];
}
//if this is player 1's marker 11
else if( x == 366 &amp;&amp; y == 6 &amp;&amp; global.class[1,11] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,11];
}
//if this is player 1's marker 12
else if( x == 402 &amp;&amp; y == 6 &amp;&amp; global.class[1,12] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,12];
}
//second row
//if this is player 1's marker 13
else if( x == 6 &amp;&amp; y == 42 &amp;&amp; global.class[1,13] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,13];
}   
//if this is player 1's marker 14
else if( x == 42 &amp;&amp; y == 42 &amp;&amp; global.class[1,14] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,14];
}
//if this is player 1's marker 15
else if( x == 78 &amp;&amp; y == 42 &amp;&amp; global.class[1,15] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,15];
}
//if this is player 1's marker 16
else if( x == 114 &amp;&amp; y == 42 &amp;&amp; global.class[1,16] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,16];
}
//if this is player 1's marker 17
else if( x == 150 &amp;&amp; y == 42 &amp;&amp; global.class[1,17] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,17];
}
//if this is player 1's marker 18
else if( x == 186 &amp;&amp; y == 42 &amp;&amp; global.class[1,18] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,18];
}
//if this is player 1's marker 19
else if( x == 222 &amp;&amp; y == 42 &amp;&amp; global.class[1,19] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,19];
}
//if this is player 1's marker 20
else if( x == 258 &amp;&amp; y == 42 &amp;&amp; global.class[1,20] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,20];
}
//if this is player 1's marker 21
else if( x == 294 &amp;&amp; y == 42 &amp;&amp; global.class[1,21] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,21];
}
//if this is player 1's marker 22
else if( x == 330 &amp;&amp; y == 42 &amp;&amp; global.class[1,22] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,22];
}
//if this is player 1's marker 23
else if( x == 366 &amp;&amp; y == 42 &amp;&amp; global.class[1,23] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,23];
}
//if this is player 1's marker 24
else if( x == 402 &amp;&amp; y == 42 &amp;&amp; global.class[1,24] != 0 )
{
    //based on position, find appropriate class
    class = global.class[1,24];
}


//player 2

//first row
//if this is player 2's marker 1
else if( x == 6 &amp;&amp; y == 366 &amp;&amp; global.class[2,1] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,1];
}   
//if this is player 2's marker 2
else if( x == 42 &amp;&amp; y == 366 &amp;&amp; global.class[2,2] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,2];
}
//if this is player 2's marker 3
else if( x == 78 &amp;&amp; y == 366 &amp;&amp; global.class[2,3] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,3];
}
//if this is player 2's marker 4
else if( x == 114 &amp;&amp; y == 366 &amp;&amp; global.class[2,4] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,4];
}
//if this is player 2's marker 5
else if( x == 150 &amp;&amp; y == 366 &amp;&amp; global.class[2,5] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,5];
}
//if this is player 2's marker 6
else if( x == 186 &amp;&amp; y == 366 &amp;&amp; global.class[2,6] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,6];
}
//if this is player 2's marker 7
else if( x == 222 &amp;&amp; y == 366 &amp;&amp; global.class[2,7] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,7];
}
//if this is player 2's marker 8
else if( x == 258 &amp;&amp; y == 366 &amp;&amp; global.class[2,8] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,8];
}
//if this is player 2's marker 9
else if( x == 294 &amp;&amp; y == 366 &amp;&amp; global.class[2,9] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,9];
}
//if this is player 2's marker 10
else if( x == 330 &amp;&amp; y == 366 &amp;&amp; global.class[2,10] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,10];
}
//if this is player 2's marker 11
else if( x == 366 &amp;&amp; y == 366 &amp;&amp; global.class[2,11] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,11];
}
//if this is player 2's marker 12
else if( x == 402 &amp;&amp; y == 366 &amp;&amp; global.class[2,12] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,12];
}
//second row
//if this is player 2's marker 13
else if( x == 6 &amp;&amp; y == 402 &amp;&amp; global.class[2,13] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,13];
}   
//if this is player 2's marker 14
else if( x == 42 &amp;&amp; y == 402 &amp;&amp; global.class[2,14] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,14];
}
//if this is player 2's marker 15
else if( x == 78 &amp;&amp; y == 402 &amp;&amp; global.class[2,15] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,15];
}
//if this is player 2's marker 16
else if( x == 114 &amp;&amp; y == 402 &amp;&amp; global.class[2,16] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,16];
}
//if this is player 2's marker 17
else if( x == 150 &amp;&amp; y == 402 &amp;&amp; global.class[2,17] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,17];
}
//if this is player 2's marker 18
else if( x == 186 &amp;&amp; y == 402 &amp;&amp; global.class[2,18] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,18];
}
//if this is player 2's marker 19
else if( x == 222 &amp;&amp; y == 402 &amp;&amp; global.class[2,19] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,19];
}
//if this is player 2's marker 20
else if( x == 258 &amp;&amp; y == 402 &amp;&amp; global.class[2,20] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,20];
}
//if this is player 2's marker 21
else if( x == 294 &amp;&amp; y == 402 &amp;&amp; global.class[2,21] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,21];
}
//if this is player 2's marker 22
else if( x == 330 &amp;&amp; y == 402 &amp;&amp; global.class[2,22] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,22];
}
//if this is player 2's marker 23
else if( x == 366 &amp;&amp; y == 402 &amp;&amp; global.class[2,23] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,23];
}
//if this is player 2's marker 24
else if( x == 402 &amp;&amp; y == 402 &amp;&amp; global.class[2,24] != 0 )
{
    //based on position, find appropriate class
    class = global.class[2,24];
}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//dynamic statistics

//if character is created on the top half of the board
if( y &lt; 222 )
{
    player = 1;
}
//else if the character is created on the bottom half of the board
else if( y &gt; 222 )
{
    player = 2;
}


//ownership
    //increase number of characters deployed by this player
selection_controller.playertracker[player] = selection_controller.playertracker[player] + 1;

//variable for removal
destroy = 0;
new = 1;

//load statistics based on class


//statistics
hp = info.maxhp[class];
maxhp[1] = info.maxhp[class];
maxhp[2] = 0;

mp = info.maxmp[class];
maxmp[1] = info.maxmp[class];
maxmp[2] = 0;

tp = info.maxtp[class];
maxtp[1] = info.maxtp[class];
maxtp[2] = 0;

attack[1] = info.attack[class];
attack[2] = 0;

defense[1] = info.defense[class];
defense[2] = 0;

magicpower[1] = info.magicpower[class];
magicpower[2] = 0;

magicdefense[1] = info.magicdefense[class];
magicdefense[2] = 0;

movement[1] = info.movement[class];
movement[2] = 0;

range[1] = info.range[class];
range[2] = 0;</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//find and change sprite based on player and class

//if character belongs to player 1
if( player == 1)
{
    //sprite moving down
    if( class == 1)
    {
        sprite_index = squire1_down;
    }
    else if( class == 2 )
    {
        sprite_index = archer1_down;
    }
    else if( class == 3 )
    {
        sprite_index = ninja1_down;
    }
    else if( class == 5 )
    {
        sprite_index = black_mage1_down;
    }
    else if( class == 4 )
    {
        sprite_index = white_mage1_down;
    }

 
    //freeze character image
    image_speed = 0;
    
}
//else if character belongs to player 2
else if( player == 2 )
{
    //sprite moving up
    if( class == 1)
    {
        sprite_index = squire2_up;
    }
    else if( class == 2 )
    {
        sprite_index = archer2_up;
    }
    else if( class == 3 )
    {
        sprite_index = ninja2_up;
    }
    else if( class == 5 )
    {
        sprite_index = black_mage2_up;
    }
    else if( class == 4 )
    {
        sprite_index = white_mage2_up;
    }

    
    //freeze character image
    image_speed = 0;
}</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//static variables

//Flags
/*
activeflag = 0;

moveflag = 0;
moved = 0;

attackflag = 0;
techniqueflag = 0;
magicflag = 0;
itemflag = 0;

completeflag = 0;

deadflag = 0;
*/

//ensure static image
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if destroy has been requested
if( destroy == 1 )
{
    selection_controller.playertracker[player] = selection_controller.playertracker[player] - 1;    
    //destroy object
    instance_destroy();
}


//if a character is being removed and this character is being targeted AND is not a new character
if( selection_controller.destroy == 1 &amp;&amp; selection_cursor.x == x &amp;&amp; selection_cursor.y == y &amp;&amp; new == 0 )
{
    selection_controller.destroy = 0;
    selection_controller.playertracker[player] = selection_controller.playertracker[player] - 1;    
    instance_destroy();
}

//if all characters are being cleared
    //for all but the last character for this player
if( selection_controller.clear == 1  &amp;&amp; instance_number(selection_character) &gt; 1  &amp;&amp; selection_controller.player == player )
{
    selection_controller.playertracker[player] = selection_controller.playertracker[player] - 1;    
    instance_destroy();
}
else if( selection_controller.clear == 1 &amp;&amp; instance_number(selection_character) == 1 &amp;&amp; selection_controller.player == player )
{
    selection_controller.clear = 0;
    selection_controller.playertracker[player] = selection_controller.playertracker[player] - 1;    
    instance_destroy();
}

//if character is still "new" and is not contacting another character
if( new == 1 &amp;&amp; place_meeting(x, y, selection_character) == false )
{
    //remove "new" status
    new = 0;
}
else if( new == 0 &amp;&amp; place_meeting(x, y, selection_character) == true )
{
    //mark to destroy
    destroy = 1;    
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
