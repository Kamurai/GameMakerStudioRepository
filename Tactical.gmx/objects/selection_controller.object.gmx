<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Declare variables relavent to selecting and acting characters
//to include menu options

//determines actions are occuring on board
boardfocus = 1;
//determines actions are occuring on menu
menufocus = 0;

//tracks which player has control
playertracker[1] = 0;
playerlimit[1] = 14;
playertracker[2] = 0;
playerlimit[2] = 14;

//player 1 is first
player = 1;

//action variables
switchplayers = 0;

//character actions
destroy = 0;

//list actions
clear = 0;

//global tools

//used to count through arrays
counter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if current player is finished
if( selection_controller.playertracker[selection_controller.player] == selection_controller.playerlimit[selection_controller.player] )
{
    //signal for change of turn 
    selection_controller.switchplayers = 1;
}
else
{
    selection_controller.switchplayers = 0;
}

//if changing turns
if( selection_controller.switchplayers == 1 )
{
    //switch players
    if( selection_controller.player == 1 )
    {
        //swap to player 2
        selection_controller.player = 2;
        
        //destroy cursor
        selection_cursor.destroy = 1;
        
        //create cursor in player 2's field
        instance_create(mkr_p2.x, mkr_p2.y, selection_cursor);
    }
    else if( selection_controller.player == 2 )
    {
        //if next room exists
        if( room_next(room) != -1 )
        {
            //go to next room
            room_goto_next()
        }

    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="113">
      <action>
        <libid>1</libid>
        <id>331</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_restart_game</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
