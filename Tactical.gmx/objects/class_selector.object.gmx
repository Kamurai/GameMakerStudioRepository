<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>arrow_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroy = 0;</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if destroy has been requested
if( destroy == 1)
{
    //destroy object
    instance_destroy();
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//selection option from the menu

//if the menu has focus
if( selection_controller.menufocus == 1 )
{
    //if there is a squire object to the right
    if( place_meeting(x+18, y, selection_squire) )
    {
        //change focus to move
        //selection_controller.loadclass = 169; 
        
        //load class directly into appropriate class box
        global.class[selection_controller.player, selection_controller.counter] = 1;      
        
        //if playerlimit has not been reached
        if( selection_controller.playertracker[selection_controller.player] &lt; selection_controller.playerlimit[selection_controller.player] )
        {
            //create character at cursor's location
            instance_create(selection_cursor.x, selection_cursor.y, selection_character);
        }
    }
    //if there is a ninja object to the right
    else if( place_meeting(x+18, y, selection_ninja) )
    {
        //change focus to move
        //selection_controller.loadclass = 126;
        
        //load class directly into appropriate class box
        global.class[selection_controller.player, selection_controller.counter] = 3;      
        
        //if playerlimit has not been reached
        if( selection_controller.playertracker[selection_controller.player] &lt; selection_controller.playerlimit[selection_controller.player] )
        {
            //create character at cursor's location
            instance_create(selection_cursor.x, selection_cursor.y, selection_character);
        }
    }
    //if there is a archer object to the right
    else if( place_meeting(x+18, y, selection_archer) )
    {
        //change focus to move
        //selection_controller.loadclass = 007;
        
        //load class directly into appropriate class box
        global.class[selection_controller.player, selection_controller.counter] = 2;      
        
        //if playerlimit has not been reached
        if( selection_controller.playertracker[selection_controller.player] &lt; selection_controller.playerlimit[selection_controller.player] )
        {
            //create character at cursor's location
            instance_create(selection_cursor.x, selection_cursor.y, selection_character);
        }
    }
    //if there is a black_mage object to the right
    else if( place_meeting(x+18, y, selection_black_mage) )
    {
        //change focus to move
        //selection_controller.loadclass = 020;
        
        //load class directly into appropriate class box
        global.class[selection_controller.player, selection_controller.counter] = 5;      
        
        //if playerlimit has not been reached
        if( selection_controller.playertracker[selection_controller.player] &lt; selection_controller.playerlimit[selection_controller.player] )
        {
            //create character at cursor's location
            instance_create(selection_cursor.x, selection_cursor.y, selection_character);
        }
    }
    //if there is a white_mage object to the right
    else if( place_meeting(x+18, y, selection_white_mage) )
    {
        //change focus to move
        //selection_controller.loadclass = 193;
        
        //load class directly into appropriate class box
        global.class[selection_controller.player, selection_controller.counter] = 4;      
        
        //if playerlimit has not been reached
        if( selection_controller.playertracker[selection_controller.player] &lt; selection_controller.playerlimit[selection_controller.player] )
        {
            //create character at cursor's location
            instance_create(selection_cursor.x, selection_cursor.y, selection_character);
        }
    }
//list functions hereafter: remove, finish, clear
    //if there is an Complete object to the right
    else if( place_meeting(x+18, y, selection_remove) )
    {
        //signal to destroy selection_character
        selection_controller.destroy = 1;
        
        //load class directly into appropriate class box
        global.class[selection_controller.player, selection_controller.counter] = 0;
    }

    //if there is an Complete object to the right
    else if( place_meeting(x+18, y, selection_end) &amp;&amp; selection_controller.playertracker[selection_controller.player] &gt; 0)
    {
        //signal to switch players
        selection_controller.playertracker[selection_controller.player] = selection_controller.playerlimit[selection_controller.player];
        
    }
    //if there is an End Turn object to the right
    else if( place_meeting(x+18, y, selection_clear) )
    {
        //signal to clear current selections
        selection_controller.clear = 1;
    }
    
    //set focus to board
    //selection_controller.boardfocus = 1;
    //selection_cursor.selection = 0;
    
    //remove focus from menu
    selection_controller.menufocus = 0;

    
    //destroy selector
    //instance_destroy();

        
    
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if( selection_controller.menufocus == 0)
{
    //set focus to board
    selection_controller.boardfocus = 1;

    instance_destroy();
}

/*
if( selection_controller.boardfocus == 1)
{
    //set focus to board
    //selection_controller.boardfocus = 1;

    //instance_destroy();
}
*/</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="40">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if the menu has focus
if( selection_controller.menufocus == 1)
{
    //if there not a border in the way
    if( place_meeting(x, y+2, border) == false )
    {
        y = y+18
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="38">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if the menu has focus
if( selection_controller.menufocus == 1)
{
    //if there not a border in the way
    if( place_meeting(x, y-2, border) == false )
    {
        y = y-18
    }
}</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
