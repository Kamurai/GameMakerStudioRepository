<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>Interface_Object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//States
//all Game_Objects
State[0] = "Ready";
//Unit specific
State[1] = "Moving";
//Unit Type specific
State[2] = "Building";
State[3] = "Harvesting";
State[4] = "Attacking";
//Building specific
State[5] = "Upgrading";
//Building specific
State[6] = "Under Construction";
State[7] = "Generating Unit";
//all Game_Objects
State[8] = "Dying";
//Building specific
State[9] = "Pre-Built";




//Extra Short Range
Range[0] = 8;
//Short Range
Range[1] = 64;
//Medium Range
Range[2] = 128;
//Long Range
Range[3] = 256;
//Extra Long Range
Range[4] = 512;


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Menu Object Types

Menu_Type[0] = "Move"
Menu_Type[1] = "Build"
Menu_Type[2] = "Build_HQ_Building"
Menu_Type[3] = "Build_Fighter_Barracks"
Menu_Type[4] = "Build_Fighter_Enhancer"
Menu_Type[5] = "Build_Worker_Enhancer"
Menu_Type[6] = "Build_Generator"
Menu_Type[7] = "Build_Defensive_Tower"
Menu_Type[8] = "Create_Builder"
Menu_Type[9] = "Create_Harvester"
Menu_Type[10] = "Create_Fighter"
Menu_Type[11] = "Harvest"
Menu_Type[12] = "Attack"
Menu_Type[13] = "Upgrade"
Menu_Type[14] = "Upgrade_Builder"
Menu_Type[15] = "Upgrade_Harvester"
Menu_Type[16] = "Upgrade_Fighter"
Menu_Type[17] = "UpgradeTo_Long_Range_Tower"
Menu_Type[18] = "UpgradeTo_Short_Range_Tower"
Menu_Type[19] = "UpgradeTo_Short_Range_Blast_Tower"
Menu_Type[20] = "UpgradeTo_Inferno_Tower"
Menu_Type[21] = "UpgradeTo_Healing_Tower"
Menu_Type[22] = "Destroy"
Menu_Type[23] = "Cancel"
Menu_Type[24] = "Exit"
Menu_Type[25] = "Repair"

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>611</id>
        <kind>6</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Monster_Speed</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>.2</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[0, 1] = 4 is the attack for a builder object with id 0 and level equal to 1

//Builder id = 0
attack[0, 1]        = 4;
unithealth[0, 1]    = 30;
unitspeed[0, 1]     = 1;//.1;
buildtime[0,1]      = 40;
unitcap[0,1]        = 1;
woodcost[0,1]       = 3;
orecost[0,1]        = 1;
essencecost[0,1]    = 2;
energycost[0,1]     = 0;
value[0,1]          = 0;

attack[0, 2]        = 6;
unithealth[0, 2]    = 32;
unitspeed[0, 2]     = 1.44;//.2;
buildtime[0,2]      = 50;
unitcap[0,2]        = 2;
woodcost[0,2]       = 4;
orecost[0,2]        = 2;
essencecost[0,2]    = 3;
energycost[0,2]     = 0;
value[0,2]          = 0;

attack[0, 3]        = 10;
unithealth[0, 3]    = 34;
unitspeed[0, 3]     = 1.88;//.4;
buildtime[0,3]      = 60;
unitcap[0,3]        = 3;
woodcost[0,3]       = 8;
orecost[0,3]        = 6;
essencecost[0,3]    = 7;
energycost[0,3]     = 0;
value[0,3]          = 0;

attack[0, 4]        = 16;
unithealth[0, 4]    = 36;
unitspeed[0, 4]     = 2.32;//.7;
buildtime[0,4]      = 70;
unitcap[0,4]        = 4;
woodcost[0,4]       = 13;
orecost[0,4]        = 11;
essencecost[0,4]    = 12;
energycost[0,4]     = 0;
value[0,4]          = 0;

attack[0, 5]        = 24;
unithealth[0, 5]    = 38;
unitspeed[0, 5]     = 2.76;//1.1;
buildtime[0,5]      = 80;
unitcap[0,5]        = 5;
woodcost[0,5]       = 19;
orecost[0,5]        = 17;
essencecost[0,5]    = 18;
energycost[0,5]     = 0;
value[0,5]          = 0;

attack[0, 6]        = 40;
unithealth[0, 6]    = 40;
unitspeed[0, 6]     = 3.2;//1.6;
buildtime[0,6]      = 90;
unitcap[0,6]        = 6;
woodcost[0,6]       = 26;
orecost[0,6]        = 24;
essencecost[0,6]    = 25;
energycost[0,6]     = 4;
value[0,6]          = 0;

attack[0, 7]        = 58;
unithealth[0, 7]    = 42;
unitspeed[0, 7]     = 3.64;//2.2;
buildtime[0,7]      = 100;
unitcap[0,7]        = 7;
woodcost[0,7]       = 34;
orecost[0,7]        = 32;
essencecost[0,7]    = 33;
energycost[0,7]     = 8;
value[0,7]          = 0;

attack[0, 8]        = 78;
unithealth[0, 8]    = 44;
unitspeed[0, 8]     = 4.08;//2.9;
buildtime[0,8]      = 110;
unitcap[0,8]        = 8;
woodcost[0,8]       = 43;
orecost[0,8]        = 41;
essencecost[0,8]    = 42;
energycost[0,8]     = 16;
value[0,8]          = 0;

attack[0, 9]        = 100;
unithealth[0, 9]    = 46;
unitspeed[0, 9]     = 4.52;//3.7;
buildtime[0,9]      = 120;
unitcap[0,9]        = 9;
woodcost[0,9]       = 53;
orecost[0,9]        = 51;
essencecost[0,9]    = 52;
energycost[0,9]     = 32;
value[0,9]          = 0;

attack[0, 10]       = 124;
unithealth[0, 10]   = 48;
unitspeed[0, 10]    = 4.96;//4.6;
buildtime[0,10]     = 130;
unitcap[0,10]       = 10;
woodcost[0,10]      = 64;
orecost[0,10]       = 62;
essencecost[0,10]   = 63;
energycost[0,10]    = 64;
value[0,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[1, 1] = 4 is the attack for a harvester object with id 1 and level equal to 1

//Harvester id = 1
attack[1, 1]        = 4;
unithealth[1, 1]    = 30;
unitspeed[1, 1]     = 1;//.1;
buildtime[1,1]      = 60;
unitcap[1,1]        = 3;
woodcost[1,1]       = 2;
orecost[1,1]        = 4;
essencecost[1,1]    = 2;
energycost[1,1]     = 0;
value[1,1]          = 5;

attack[1, 2]        = 6;
unithealth[1, 2]    = 32;
unitspeed[1, 2]     = 2;//.2;
buildtime[1,2]      = 66;
unitcap[1,2]        = 6;
woodcost[1,2]       = 4;
orecost[1,2]        = 6;
essencecost[1,2]    = 5;
energycost[1,2]     = 0;
value[1,2]          = 10;

attack[1, 3]        = 10;
unithealth[1, 3]    = 34;
unitspeed[1, 3]     = 3;//.4;
buildtime[1,3]      = 72;
unitcap[1,3]        = 9;
woodcost[1,3]       = 7;
orecost[1,3]        = 9;
essencecost[1,3]    = 9;
energycost[1,3]     = 0;
value[1,3]          = 15;

attack[1, 4]        = 16;
unithealth[1, 4]    = 36;
unitspeed[1, 4]     = 4;//.7;
buildtime[1,4]      = 78;
unitcap[1,4]        = 12;
woodcost[1,4]       = 11;
orecost[1,4]        = 13;
essencecost[1,4]    = 14;
energycost[1,4]     = 0;
value[1,4]          = 20;

attack[1, 5]        = 24;
unithealth[1, 5]    = 38;
unitspeed[1, 5]     = 5;//1.1;
buildtime[1,5]      = 84;
unitcap[1,5]        = 15;
woodcost[1,5]       = 16;
orecost[1,5]        = 18;
essencecost[1,5]    = 20;
energycost[1,5]     = 0;
value[1,5]          = 25;

attack[1, 6]        = 40;
unithealth[1, 6]    = 40;
unitspeed[1, 6]     = 6;//1.6;
buildtime[1,6]      = 90;
unitcap[1,6]        = 18;
woodcost[1,6]       = 22;
orecost[1,6]        = 24;
essencecost[1,6]    = 27;
energycost[1,6]     = 8;
value[1,6]          = 30;

attack[1, 7]        = 58;
unithealth[1, 7]    = 42;
unitspeed[1, 7]     = 7;//2.2;
buildtime[1,7]      = 102;
unitcap[1,7]        = 21;
woodcost[1,7]       = 29;
orecost[1,7]        = 31;
essencecost[1,7]    = 35;
energycost[1,7]     = 16;
value[1,7]          = 35;

attack[1, 8]        = 78;
unithealth[1, 8]    = 44;
unitspeed[1, 8]     = 8;//2.9;
buildtime[1,8]      = 102;
unitcap[1,8]        = 24;
woodcost[1,8]       = 37;
orecost[1,8]        = 39;
essencecost[1,8]    = 44;
energycost[1,8]     = 32;
value[1,8]          = 40;

attack[1, 9]        = 100;
unithealth[1, 9]    = 46;
unitspeed[1, 9]     = 9;//3.7;
buildtime[1,9]      = 108;
unitcap[1,9]        = 27;
woodcost[1,9]       = 46;
orecost[1,9]        = 48;
essencecost[1,9]    = 54;
energycost[1,9]     = 64;
value[1,9]          = 45;

attack[1, 10]       = 124;
unithealth[1, 10]   = 48;
unitspeed[1, 10]    = 10;//4.6;
buildtime[1,10]     = 114;
unitcap[1,10]       = 30;
woodcost[1,10]      = 56;
orecost[1,10]       = 58;
essencecost[1,10]   = 66;
energycost[1,10]    = 128;
value[1,10]          = 50;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[2, 1] = 4 is the attack for a Fighter object with id 0 and level equal to 1

//Fighter id = 2
attack[2, 1]        = 1;
unithealth[2, 1]    = 60;
unitspeed[2, 1]     = 2;//.3;
buildtime[2,1]      = 40;
unitcap[2,1]        = 5;
woodcost[2,1]       = 2;
orecost[2,1]        = 3;
essencecost[2,1]    = 5;
energycost[2,1]     = 0;
value[2,1]          = 0;

attack[2, 2]        = 3;
unithealth[2, 2]    = 64;
unitspeed[2, 2]     = 3.44;//.4;
buildtime[2,2]      = 50;
unitcap[2,2]        = 10;
woodcost[2,2]       = 4;
orecost[2,2]        = 5;
essencecost[2,2]    = 7;
energycost[2,2]     = 0;
value[2,2]          = 0;

attack[2, 3]        = 7;
unithealth[2, 3]    = 68;
unitspeed[2, 3]     = 4.88;//.6;
buildtime[2,3]      = 60;
unitcap[2,3]        = 15;
woodcost[2,3]       = 8;
orecost[2,3]        = 9;
essencecost[2,3]    = 11;
energycost[2,3]     = 0;
value[2,3]          = 0;

attack[2, 4]        = 13;
unithealth[2, 4]    = 72;
unitspeed[2, 4]     = 6.32;//.9;
buildtime[2,4]      = 70;
unitcap[2,4]        = 20;
woodcost[2,4]       = 14;
orecost[2,4]        = 15;
essencecost[2,4]    = 17;
energycost[2,4]     = 0;
value[2,4]          = 0;

attack[2, 5]        = 21;
unithealth[2, 5]    = 76;
unitspeed[2, 5]     = 7.76;//1.3;
buildtime[2,5]      = 80;
unitcap[2,5]        = 25;
woodcost[2,5]       = 22;
orecost[2,5]        = 23;
essencecost[2,5]    = 25;
energycost[2,5]     = 0;
value[2,5]          = 0;

attack[2, 6]        = 31;
unithealth[2, 6]    = 80;
unitspeed[2, 6]     = 9.2;//1.8;
buildtime[2,6]      = 90;
unitcap[2,6]        = 30;
woodcost[2,6]       = 32;
orecost[2,6]        = 33;
essencecost[2,6]    = 35;
energycost[2,6]     = 2;
value[2,6]          = 0;

attack[2, 7]        = 43;
unithealth[2, 7]    = 84;
unitspeed[2, 7]     = 10.64;//2.4;
buildtime[2,7]      = 100;
unitcap[2,7]        = 35;
woodcost[2,7]       = 44;
orecost[2,7]        = 45;
essencecost[2,7]    = 47;
energycost[2,7]     = 4;
value[2,7]          = 0;

attack[2, 8]        = 57;
unithealth[2, 8]    = 88;
unitspeed[2, 8]     = 12.08;//3.1;
buildtime[2,8]      = 110;
unitcap[2,8]        = 40;
woodcost[2,8]       = 58;
orecost[2,8]        = 59;
essencecost[2,8]    = 61;
energycost[2,8]     = 8;
value[2,8]          = 0;

attack[2, 9]        = 73;
unithealth[2, 9]    = 92;
unitspeed[2, 9]     = 13.52;//3.9;
buildtime[2,9]      = 120;
unitcap[2,9]        = 45;
woodcost[2,9]       = 74;
orecost[2,9]        = 75;
essencecost[2,9]    = 77;
energycost[2,9]     = 16;
value[2,9]          = 0;

attack[2, 10]       = 91;
unithealth[2, 10]   = 96;
unitspeed[2, 10]    = 14.96;//4.8;
buildtime[2,10]     = 130;
unitcap[2,10]       = 50;
woodcost[2,10]      = 92;
orecost[2,10]       = 93;
essencecost[2,10]   = 95;
energycost[2,10]    = 32;
value[2,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[3, 1] = 4 is the attack for a Monster object with id 0 and level equal to 1

//Monster id = 3
attack[3, 1]        = 2;
unithealth[3, 1]    = 30;
unitspeed[3, 1]     = 1.5;//.2;
buildtime[3,1]      = 120;
unitcap[3,1]        = 5;
woodcost[3,1]       = 0;
orecost[3,1]        = 0;
essencecost[3,1]    = 0;
energycost[3,1]     = 0;
value[3,1]          = 0;

attack[3, 2]        = 4;
unithealth[3, 2]    = 40;
unitspeed[3, 2]     = 2.72;//.3;
buildtime[3,2]      = 110;
unitcap[3,2]        = 10;
woodcost[3,2]       = 0;
orecost[3,2]        = 0;
essencecost[3,2]    = 0;
energycost[3,2]     = 0;
value[3,2]          = 0;

attack[3, 3]        = 8;
unithealth[3, 3]    = 50;
unitspeed[3, 3]     = 3.94;//.5;
buildtime[3,3]      = 100;
unitcap[3,3]        = 15;
woodcost[3,3]       = 0;
orecost[3,3]        = 0;
essencecost[3,3]    = 0;
energycost[3,3]     = 0;
value[3,3]          = 0;

attack[3, 4]        = 14;
unithealth[3, 4]    = 60;
unitspeed[3, 4]     = 5.16;//.8;
buildtime[3,4]      = 90;
unitcap[3,4]        = 20;
woodcost[3,4]       = 0;
orecost[3,4]        = 0;
essencecost[3,4]    = 0;
energycost[3,4]     = 0;
value[3,4]          = 0;

attack[3, 5]        = 22;
unithealth[3, 5]    = 70;
unitspeed[3, 5]     = 6.38;//1.2;
buildtime[3,5]      = 80;
unitcap[3,5]        = 25;
woodcost[3,5]       = 0;
orecost[3,5]        = 0;
essencecost[3,5]    = 0;
energycost[3,5]     = 0;
value[3,5]          = 0;

attack[3, 6]        = 32;
unithealth[3, 6]    = 80;
unitspeed[3, 6]     = 7.6;//1.7;
buildtime[3,6]      = 70;
unitcap[3,6]        = 30;
woodcost[3,6]       = 0;
orecost[3,6]        = 0;
essencecost[3,6]    = 0;
energycost[3,6]     = 0;
value[3,6]          = 0;

attack[3, 7]        = 44;
unithealth[3, 7]    = 90;
unitspeed[3, 7]     = 8.82;//2.3;
buildtime[3,7]      = 60;
unitcap[3,7]        = 35;
woodcost[3,7]       = 0;
orecost[3,7]        = 0;
essencecost[3,7]    = 0;
energycost[3,7]     = 0;
value[3,7]          = 0;

attack[3, 8]        = 58;
unithealth[3, 8]    = 100;
unitspeed[3, 8]     = 10.04;//3.0;
buildtime[3,8]      = 50;
unitcap[3,8]        = 40;
woodcost[3,8]       = 0;
orecost[3,8]        = 0;
essencecost[3,8]    = 0;
energycost[3,8]     = 0;
value[3,8]          = 0;

attack[3, 9]        = 74;
unithealth[3, 9]    = 110;
unitspeed[3, 9]     = 11.26;//3.8;
buildtime[3,9]      = 40;
unitcap[3,9]        = 45;
woodcost[3,9]       = 0;
orecost[3,9]        = 0;
essencecost[3,9]    = 0;
energycost[3,9]     = 0;
value[3,9]          = 0;

attack[3, 10]       = 92;
unithealth[3, 10]   = 120;
unitspeed[3, 10]    = 12.48;//4.7;
buildtime[3,10]     = 30;
unitcap[3,10]       = 50;
woodcost[3,10]      = 0;
orecost[3,10]       = 0;
essencecost[3,10]   = 0;
energycost[3,10]    = 0;
value[3,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[4, 1] = 4 is the attack for a HQ_Building object with id 0 and level equal to 1

//HQ_Building id = 4
attack[4, 1]        = 0;
unithealth[4, 1]    = 1000;
unitspeed[4, 1]     = 0;
buildtime[4,1]      = 300;
unitcap[4,1]        = 1;
woodcost[4,1]       = 500;
orecost[4,1]        = 500;
essencecost[4,1]    = 50;
energycost[4,1]     = 0;
value[4,1]          = 0;


attack[4, 2]        = 0;
unithealth[4, 2]    = 1100;
unitspeed[4, 2]     = 0;
buildtime[4,2]      = 360;
unitcap[4,2]        = 1;
woodcost[4,2]       = 600;
orecost[4,2]        = 600;
essencecost[4,2]    = 100;
energycost[4,2]     = 0;
value[4,2]          = 0;

attack[4, 3]        = 0;
unithealth[4, 3]    = 1220;
unitspeed[4, 3]     = 0;
buildtime[4,3]      = 420;
unitcap[4,3]        = 1;
woodcost[4,3]       = 700;
orecost[4,3]        = 700;
essencecost[4,3]    = 150;
energycost[4,3]     = 0;
value[4,3]          = 0;

attack[4, 4]        = 0;
unithealth[4, 4]    = 1360;
unitspeed[4, 4]     = 0;
buildtime[4,4]      = 480;
unitcap[4,4]        = 1;
woodcost[4,4]       = 800;
orecost[4,4]        = 800;
essencecost[4,4]    = 200;
energycost[4,4]     = 0;
value[4,4]          = 0;

attack[4, 5]        = 0;
unithealth[4, 5]    = 1520;
unitspeed[4, 5]     = 0;
buildtime[4,5]      = 540;
unitcap[4,5]        = 1;
woodcost[4,5]       = 900;
orecost[4,5]        = 900;
essencecost[4,5]    = 250;
energycost[4,5]     = 0;
value[4,5]          = 0;

attack[4, 6]        = 0;
unithealth[4, 6]    = 1700;
unitspeed[4, 6]     = 0;
buildtime[4,6]      = 600;
unitcap[4,6]        = 2;
woodcost[4,6]       = 1000;
orecost[4,6]        = 1000;
essencecost[4,6]    = 300;
energycost[4,6]     = 500;
value[4,6]          = 0;

attack[4, 7]        = 0;
unithealth[4, 7]    = 1900;
unitspeed[4, 7]     = 0;
buildtime[4,7]      = 660;
unitcap[4,7]        = 2;
woodcost[4,7]       = 1100;
orecost[4,7]        = 1100;
essencecost[4,7]    = 350;
energycost[4,7]     = 600;
value[4,7]          = 0;

attack[4, 8]        = 0;
unithealth[4, 8]    = 2120;
unitspeed[4, 8]     = 0;
buildtime[4,8]      = 720;
unitcap[4,8]        = 2;
woodcost[4,8]       = 1200;
orecost[4,8]        = 1200;
essencecost[4,8]    = 400;
energycost[4,8]     = 700;
value[4,8]          = 0;

attack[4, 9]        = 0;
unithealth[4, 9]    = 2360;
unitspeed[4, 9]     = 0;
buildtime[4,9]      = 780;
unitcap[4,9]        = 2;
woodcost[4,9]       = 1300;
orecost[4,9]        = 1300;
essencecost[4,9]    = 450;
energycost[4,9]     = 800;
value[4,9]          = 0;

attack[4, 10]       = 0;
unithealth[4, 10]   = 2620;
unitspeed[4, 10]    = 0;
buildtime[4,10]     = 840;
unitcap[4,10]       = 2;
woodcost[4,10]      = 1400;
orecost[4,10]       = 1400;
essencecost[4,10]   = 500;
energycost[4,10]    = 900;
value[4,10]         = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[5, 1] = 4 is the attack for a Fighter_Barracks object with id 0 and level equal to 1

//Fighter_Barracks id = 5
attack[5, 1]        = 0;
unithealth[5, 1]    = 200;
unitspeed[5, 1]     = 0;
buildtime[5,1]      = 45;
unitcap[5,1]        = 1;
woodcost[5,1]       = 60;
orecost[5,1]        = 50;
essencecost[5,1]    = 30;
energycost[5,1]     = 0;
value[5,1]          = 0;


attack[5, 2]        = 0;
unithealth[5, 2]    = 230;
unitspeed[5, 2]     = 0;
buildtime[5,2]      = 60;
unitcap[5,2]        = 1;
woodcost[5,2]       = 75;
orecost[5,2]        = 60;
essencecost[5,2]    = 35;
energycost[5,2]     = 0;
value[5,2]          = 0;

attack[5, 3]        = 0;
unithealth[5, 3]    = 260;
unitspeed[5, 3]     = 0;
buildtime[5,3]      = 75;
unitcap[5,3]        = 2;
woodcost[5,3]       = 85;
orecost[5,3]        = 70;
essencecost[5,3]    = 40;
energycost[5,3]     = 0;
value[5,3]          = 0;

attack[5, 4]        = 0;
unithealth[5, 4]    = 290;
unitspeed[5, 4]     = 0;
buildtime[5,4]      = 90;
unitcap[5,4]        = 2;
woodcost[5,4]       = 90;
orecost[5,4]        = 80;
essencecost[5,4]    = 45;
energycost[5,4]     = 0;
value[5,4]          = 0;

attack[5, 5]        = 0;
unithealth[5, 5]    = 320;
unitspeed[5, 5]     = 0;
buildtime[5,5]      = 105;
unitcap[5,5]        = 3;
woodcost[5,5]       = 110;
orecost[5,5]        = 90;
essencecost[5,5]    = 50;
energycost[5,5]     = 0;
value[5,5]          = 0;

attack[5, 6]        = 0;
unithealth[5, 6]    = 350;
unitspeed[5, 6]     = 0;
buildtime[5,6]      = 120;
unitcap[5,6]        = 3;
woodcost[5,6]       = 135;
orecost[5,6]        = 100;
essencecost[5,6]    = 55;
energycost[5,6]     = 75;
value[5,6]          = 0;

attack[5, 7]        = 0;
unithealth[5, 7]    = 380;
unitspeed[5, 7]     = 0;
buildtime[5,7]      = 135;
unitcap[5,7]        = 4;
woodcost[5,7]       = 165;
orecost[5,7]        = 110;
essencecost[5,7]    = 60;
energycost[5,7]     = 100;
value[5,7]          = 0;

attack[5, 8]        = 0;
unithealth[5, 8]    = 410;
unitspeed[5, 8]     = 0;
buildtime[5,8]      = 155;
unitcap[5,8]        = 4;
woodcost[5,8]       = 200;
orecost[5,8]        = 120;
essencecost[5,8]    = 65;
energycost[5,8]     = 125;
value[5,8]          = 0;

attack[5, 9]        = 0;
unithealth[5, 9]    = 440;
unitspeed[5, 9]     = 0;
buildtime[5,9]      = 170;
unitcap[5,9]        = 5;
woodcost[5,9]       = 240;
orecost[5,9]        = 130;
essencecost[5,9]    = 70;
energycost[5,9]     = 150;
value[5,9]          = 0;

attack[5, 10]       = 0;
unithealth[5, 10]   = 470;
unitspeed[5, 10]    = 0;
buildtime[5,10]     = 185;
unitcap[5,10]       = 5;
woodcost[5,10]      = 285;
orecost[5,10]       = 140;
essencecost[5,10]   = 75;
energycost[5,10]    = 175;
value[5,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[6, 1] = 4 is the attack for a Fighter_Enhancer object with id 0 and level equal to 1

//Fighter_Enhancer id = 6
attack[6, 1]        = 0;
unithealth[6, 1]    = 150;
unitspeed[6, 1]     = 0;
buildtime[6,1]      = 90;
unitcap[6,1]        = 1;
woodcost[6,1]       = 90;
orecost[6,1]        = 60;
essencecost[6,1]    = 0;
energycost[6,1]     = 0;
value[6,1]          = 0;

attack[6, 2]        = 0;
unithealth[6, 2]    = 200;
unitspeed[6, 2]     = 0;
buildtime[6,2]      = 110;
unitcap[6,2]        = 1;
woodcost[6,2]       = 150;
orecost[6,2]        = 100;
essencecost[6,2]    = 0;
energycost[6,2]     = 0;
value[6,2]          = 0;

attack[6, 3]        = 0;
unithealth[6, 3]    = 250;
unitspeed[6, 3]     = 0;
buildtime[6,3]      = 130;
unitcap[6,3]        = 1;
woodcost[6,3]       = 150;
orecost[6,3]        = 100;
essencecost[6,3]    = 0;
energycost[6,3]     = 0;
value[6,3]          = 0;

attack[6, 4]        = 0;
unithealth[6, 4]    = 300;
unitspeed[6, 4]     = 0;
buildtime[6,4]      = 150;
unitcap[6,4]        = 1;
woodcost[6,4]       = 180;
orecost[6,4]        = 120;
essencecost[6,4]    = 0;
energycost[6,4]     = 0;
value[6,4]          = 0;

attack[6, 5]        = 0;
unithealth[6, 5]    = 350;
unitspeed[6, 5]     = 0;
buildtime[6,5]      = 170;
unitcap[6,5]        = 1;
woodcost[6,5]       = 210;
orecost[6,5]        = 140;
essencecost[6,5]    = 0;
energycost[6,5]     = 0;
value[6,5]          = 0;

attack[6, 6]        = 0;
unithealth[6, 6]    = 400;
unitspeed[6, 6]     = 0;
buildtime[6,6]      = 190;
unitcap[6,6]        = 2;
woodcost[6,6]       = 240;
orecost[6,6]        = 160;
essencecost[6,6]    = 0;
energycost[6,6]     = 300;
value[6,6]          = 0;

attack[6, 7]        = 0;
unithealth[6, 7]    = 450;
unitspeed[6, 7]     = 0;
buildtime[6,7]      = 210;
unitcap[6,7]        = 2;
woodcost[6,7]       = 270;
orecost[6,7]        = 180;
essencecost[6,7]    = 0;
energycost[6,7]     = 330;
value[6,7]          = 0;

attack[6, 8]        = 0;
unithealth[6, 8]    = 500;
unitspeed[6, 8]     = 0;
buildtime[6,8]      = 230;
unitcap[6,8]        = 2;
woodcost[6,8]       = 300;
orecost[6,8]        = 200;
essencecost[6,8]    = 0;
energycost[6,8]     = 360;
value[6,8]          = 0;

attack[6, 9]        = 0;
unithealth[6, 9]    = 550;
unitspeed[6, 9]     = 0;
buildtime[6,9]      = 250;
unitcap[6,9]        = 2;
woodcost[6,9]       = 330;
orecost[6,9]        = 220;
essencecost[6,9]    = 0;
energycost[6,9]     = 390;
value[6,9]          = 0;

attack[6, 10]       = 0;
unithealth[6, 10]   = 600;
unitspeed[6, 10]    = 0;
buildtime[6,10]     = 270;
unitcap[6,10]       = 2;
woodcost[6,10]      = 360;
orecost[6,10]       = 240;
essencecost[6,10]   = 0;
energycost[6,10]    = 420;
value[6,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[7, 1] = 4 is the attack for a Worker_Enhancer object with id 0 and level equal to 1

//Worker_Enhancer id = 7
attack[7, 1]        = 0;
unithealth[7, 1]    = 100;
unitspeed[7, 1]     = 0;
buildtime[7,1]      = 120;
unitcap[7,1]        = 1;
woodcost[7,1]       = 100;
orecost[7,1]        = 70;
essencecost[7,1]    = 0;
energycost[7,1]     = 0;
value[7,1]          = 0;

attack[7, 2]        = 0;
unithealth[7, 2]    = 150;
unitspeed[7, 2]     = 0;
buildtime[7,2]      = 150;
unitcap[7,2]        = 1;
woodcost[7,2]       = 140;
orecost[7,2]        = 100;
essencecost[7,2]    = 0;
energycost[7,2]     = 0;
value[7,2]          = 0;

attack[7, 3]        = 0;
unithealth[7, 3]    = 200;
unitspeed[7, 3]     = 0;
buildtime[7,3]      = 180;
unitcap[7,3]        = 1;
woodcost[7,3]       = 180;
orecost[7,3]        = 130;
essencecost[7,3]    = 0;
energycost[7,3]     = 0;
value[7,3]          = 0;

attack[7, 4]        = 0;
unithealth[7, 4]    = 250;
unitspeed[7, 4]     = 0;
buildtime[7,4]      = 210;
unitcap[7,4]        = 1;
woodcost[7,4]       = 220;
orecost[7,4]        = 160;
essencecost[7,4]    = 0;
energycost[7,4]     = 0;
value[7,4]          = 0;

attack[7, 5]        = 0;
unithealth[7, 5]    = 300;
unitspeed[7, 5]     = 0;
buildtime[7,5]      = 240;
unitcap[7,5]        = 1;
woodcost[7,5]       = 260;
orecost[7,5]        = 190;
essencecost[7,5]    = 0;
energycost[7,5]     = 0;
value[7,5]          = 0;

attack[7, 6]        = 0;
unithealth[7, 6]    = 350;
unitspeed[7, 6]     = 0;
buildtime[7,6]      = 270;
unitcap[7,6]        = 2;
woodcost[7,6]       = 300;
orecost[7,6]        = 220;
essencecost[7,6]    = 0;
energycost[7,6]     = 350;
value[7,6]          = 0;

attack[7, 7]        = 0;
unithealth[7, 7]    = 400;
unitspeed[7, 7]     = 0;
buildtime[7,7]      = 300;
unitcap[7,7]        = 2;
woodcost[7,7]       = 340;
orecost[7,7]        = 250;
essencecost[7,7]    = 0;
energycost[7,7]     = 400;
value[7,7]          = 0;

attack[7, 8]        = 0;
unithealth[7, 8]    = 450;
unitspeed[7, 8]     = 0;
buildtime[7,8]      = 330;
unitcap[7,8]        = 2;
woodcost[7,8]       = 380;
orecost[7,8]        = 280;
essencecost[7,8]    = 0;
energycost[7,8]     = 450;
value[7,8]          = 0;

attack[7, 9]        = 0;
unithealth[7, 9]    = 500;
unitspeed[7, 9]     = 0;
buildtime[7,9]      = 360;
unitcap[7,9]        = 2;
woodcost[7,9]       = 420;
orecost[7,9]        = 310;
essencecost[7,9]    = 0;
energycost[7,9]     = 500;
value[7,9]          = 0;

attack[7, 10]       = 0;
unithealth[7, 10]   = 550;
unitspeed[7, 10]    = 0;
buildtime[7,10]     = 390;
unitcap[7,10]       = 2;
woodcost[7,10]      = 460;
orecost[7,10]       = 340;
essencecost[7,10]   = 0;
energycost[7,10]    = 550;
value[7,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[8, 1] = 4 is the attack for a Generator object with id 0 and level equal to 1

//Generator id = 8
attack[8, 1]        = 0;
unithealth[8, 1]    = 0;
unitspeed[8, 1]     = 0;
buildtime[8,1]      = 0;
unitcap[8,1]        = 0;
woodcost[8,1]       = 0;
orecost[8,1]        = 0;
essencecost[8,1]    = 0;
energycost[8,1]     = 0;
value[8,1]          = 0;

attack[8, 2]        = 0;
unithealth[8, 2]    = 0;
unitspeed[8, 2]     = 0;
buildtime[8,2]      = 0;
unitcap[8,2]        = 0;
woodcost[8,2]       = 0;
orecost[8,2]        = 0;
essencecost[8,2]    = 0;
energycost[8,2]     = 0;
value[8,2]          = 0;

attack[8, 3]        = 0;
unithealth[8, 3]    = 0;
unitspeed[8, 3]     = 0;
buildtime[8,3]      = 0;
unitcap[8,3]        = 0;
woodcost[8,3]       = 0;
orecost[8,3]        = 0;
essencecost[8,3]    = 0;
energycost[8,3]     = 0;
value[8,3]          = 0;

attack[8, 4]        = 0;
unithealth[8, 4]    = 0;
unitspeed[8, 4]     = 0;
buildtime[8,4]      = 0;
unitcap[8,4]        = 0;
woodcost[8,4]       = 0;
orecost[8,4]        = 0;
essencecost[8,4]    = 0;
energycost[8,4]     = 0;
value[8,4]          = 0;

attack[8, 5]        = 0;
unithealth[8, 5]    = 0;
unitspeed[8, 5]     = 0;
buildtime[8,5]      = 0;
unitcap[8,5]        = 0;
woodcost[8,5]       = 0;
orecost[8,5]        = 0;
essencecost[8,5]    = 0;
energycost[8,5]     = 0;
value[8,5]          = 0;

attack[8, 6]        = 0;
unithealth[8, 6]    = 150;
unitspeed[8, 6]     = 0;
buildtime[8,6]      = 60;
unitcap[8,6]        = 1;
woodcost[8,6]       = 500;
orecost[8,6]        = 750;
essencecost[8,6]    = 0;
energycost[8,6]     = 0;
value[8,6]          = 1;

attack[8, 7]        = 0;
unithealth[8, 7]    = 160;
unitspeed[8, 7]     = 0;
buildtime[8,7]      = 120;
unitcap[8,7]        = 2;
woodcost[8,7]       = 600;
orecost[8,7]        = 900;
essencecost[8,7]    = 0;
energycost[8,7]     = 0;
value[8,7]          = 2;

attack[8, 8]        = 0;
unithealth[8, 8]    = 170;
unitspeed[8, 8]     = 0;
buildtime[8,8]      = 180;
unitcap[8,8]        = 3;
woodcost[8,8]       = 700;
orecost[8,8]        = 1050;
essencecost[8,8]    = 0;
energycost[8,8]     = 0;
value[8,8]          = 3;

attack[8, 9]        = 0;
unithealth[8, 9]    = 180;
unitspeed[8, 9]     = 0;
buildtime[8,9]      = 240;
unitcap[8,9]        = 4;
woodcost[8,9]       = 800;
orecost[8,9]        = 1200;
essencecost[8,9]    = 0;
energycost[8,9]     = 0;
value[8,9]          = 4;

attack[8, 10]       = 0;
unithealth[8, 10]   = 190;
unitspeed[8, 10]    = 0;
buildtime[8,10]     = 300;
unitcap[8,10]       = 5;
woodcost[8,10]      = 900;
orecost[8,10]       = 1350;
essencecost[8,10]   = 0;
energycost[8,10]    = 0;
value[8,10]          = 5;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[9, 1] = 4 is the attack for a Monster_Maker_i object with id 0 and level equal to 1

//Monster_Maker_i id = 9
attack[9, 1]        = 0;
unithealth[9, 1]    = 0;
unitspeed[9, 1]     = 0;
buildtime[9,1]      = 0;
unitcap[9,1]        = 100;
woodcost[9,1]       = 0;
orecost[9,1]        = 0;
essencecost[9,1]    = 0;
energycost[9,1]     = 0;
value[9,1]          = 0;

attack[9, 2]        = 0;
unithealth[9, 2]    = 0;
unitspeed[9, 2]     = 0;
buildtime[9,2]      = 0;
unitcap[9,2]        = 100;
woodcost[9,2]       = 0;
orecost[9,2]        = 0;
essencecost[9,2]    = 0;
energycost[9,2]     = 0;
value[9,2]          = 0;

attack[9, 3]        = 0;
unithealth[9, 3]    = 0;
unitspeed[9, 3]     = 0;
buildtime[9,3]      = 0;
unitcap[9,3]        = 100;
woodcost[9,3]       = 0;
orecost[9,3]        = 0;
essencecost[9,3]    = 0;
energycost[9,3]     = 0;
value[9,3]          = 0;

attack[9, 4]        = 0;
unithealth[9, 4]    = 0;
unitspeed[9, 4]     = 0;
buildtime[9,4]      = 0;
unitcap[9,4]        = 100;
woodcost[9,4]       = 0;
orecost[9,4]        = 0;
essencecost[9,4]    = 0;
energycost[9,4]     = 0;
value[9,4]          = 0;

attack[9, 5]        = 0;
unithealth[9, 5]    = 0;
unitspeed[9, 5]     = 0;
buildtime[9,5]      = 0;
unitcap[9,5]        = 100;
woodcost[9,5]       = 0;
orecost[9,5]        = 0;
essencecost[9,5]    = 0;
energycost[9,5]     = 0;
value[9,5]          = 0;

attack[9, 6]        = 0;
unithealth[9, 6]    = 0;
unitspeed[9, 6]     = 0;
buildtime[9,6]      = 0;
unitcap[9,6]        = 100;
woodcost[9,6]       = 0;
orecost[9,6]        = 0;
essencecost[9,6]    = 0;
energycost[9,6]     = 0;
value[9,6]          = 0;

attack[9, 7]        = 0;
unithealth[9, 7]    = 0;
unitspeed[9, 7]     = 0;
buildtime[9,7]      = 0;
unitcap[9,7]        = 100;
woodcost[9,7]       = 0;
orecost[9,7]        = 0;
essencecost[9,7]    = 0;
energycost[9,7]     = 0;
value[9,7]          = 0;

attack[9, 8]        = 0;
unithealth[9, 8]    = 0;
unitspeed[9, 8]     = 0;
buildtime[9,8]      = 0;
unitcap[9,8]        = 100;
woodcost[9,8]       = 0;
orecost[9,8]        = 0;
essencecost[9,8]    = 0;
energycost[9,8]     = 0;
value[9,8]          = 0;

attack[9, 9]        = 0;
unithealth[9, 9]    = 0;
unitspeed[9, 9]     = 0;
buildtime[9,9]      = 0;
unitcap[9,9]        = 100;
woodcost[9,9]       = 0;
orecost[9,9]        = 0;
essencecost[9,9]    = 0;
energycost[9,9]     = 0;
value[9,9]          = 0;

attack[9, 10]       = 0;
unithealth[9, 10]   = 0;
unitspeed[9, 10]    = 0;
buildtime[9,10]     = 0;
unitcap[9,10]       = 100;
woodcost[9,10]      = 0;
orecost[9,10]       = 0;
essencecost[9,10]   = 0;
energycost[9,10]    = 0;
value[9,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[9, 1] = 4 is the attack for a Monster_Maker_i object with id 0 and level equal to 1

//Monster_Maker_i id = 9
attack[9, 1]        = 0;
unithealth[9, 1]    = 0;
unitspeed[9, 1]     = 0;
buildtime[9,1]      = 0;
unitcap[9,1]        = 100;
woodcost[9,1]       = 0;
orecost[9,1]        = 0;
essencecost[9,1]    = 0;
energycost[9,1]     = 0;
value[9,1]          = 0;

attack[9, 2]        = 0;
unithealth[9, 2]    = 0;
unitspeed[9, 2]     = 0;
buildtime[9,2]      = 0;
unitcap[9,2]        = 100;
woodcost[9,2]       = 0;
orecost[9,2]        = 0;
essencecost[9,2]    = 0;
energycost[9,2]     = 0;
value[9,2]          = 0;

attack[9, 3]        = 0;
unithealth[9, 3]    = 0;
unitspeed[9, 3]     = 0;
buildtime[9,3]      = 0;
unitcap[9,3]        = 100;
woodcost[9,3]       = 0;
orecost[9,3]        = 0;
essencecost[9,3]    = 0;
energycost[9,3]     = 0;
value[9,3]          = 0;

attack[9, 4]        = 0;
unithealth[9, 4]    = 0;
unitspeed[9, 4]     = 0;
buildtime[9,4]      = 0;
unitcap[9,4]        = 100;
woodcost[9,4]       = 0;
orecost[9,4]        = 0;
essencecost[9,4]    = 0;
energycost[9,4]     = 0;
value[9,4]          = 0;

attack[9, 5]        = 0;
unithealth[9, 5]    = 0;
unitspeed[9, 5]     = 0;
buildtime[9,5]      = 0;
unitcap[9,5]        = 100;
woodcost[9,5]       = 0;
orecost[9,5]        = 0;
essencecost[9,5]    = 0;
energycost[9,5]     = 0;
value[9,5]          = 0;

attack[9, 6]        = 0;
unithealth[9, 6]    = 0;
unitspeed[9, 6]     = 0;
buildtime[9,6]      = 0;
unitcap[9,6]        = 100;
woodcost[9,6]       = 0;
orecost[9,6]        = 0;
essencecost[9,6]    = 0;
energycost[9,6]     = 0;
value[9,6]          = 0;

attack[9, 7]        = 0;
unithealth[9, 7]    = 0;
unitspeed[9, 7]     = 0;
buildtime[9,7]      = 0;
unitcap[9,7]        = 100;
woodcost[9,7]       = 0;
orecost[9,7]        = 0;
essencecost[9,7]    = 0;
energycost[9,7]     = 0;
value[9,7]          = 0;

attack[9, 8]        = 0;
unithealth[9, 8]    = 0;
unitspeed[9, 8]     = 0;
buildtime[9,8]      = 0;
unitcap[9,8]        = 100;
woodcost[9,8]       = 0;
orecost[9,8]        = 0;
essencecost[9,8]    = 0;
energycost[9,8]     = 0;
value[9,8]          = 0;

attack[9, 9]        = 0;
unithealth[9, 9]    = 0;
unitspeed[9, 9]     = 0;
buildtime[9,9]      = 0;
unitcap[9,9]        = 100;
woodcost[9,9]       = 0;
orecost[9,9]        = 0;
essencecost[9,9]    = 0;
energycost[9,9]     = 0;
value[9,9]          = 0;

attack[9, 10]       = 0;
unithealth[9, 10]   = 0;
unitspeed[9, 10]    = 0;
buildtime[9,10]     = 0;
unitcap[9,10]       = 100;
woodcost[9,10]      = 0;
orecost[9,10]       = 0;
essencecost[9,10]   = 0;
energycost[9,10]    = 0;
value[9,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[10, 1] = 4 is the attack for a Defensive_Tower object with id 0 and level equal to 1

//Defensive_Tower id = 10
attack[10, 1]        = 15;
unithealth[10, 1]    = 100;
unitspeed[10, 1]     = 0;
buildtime[10,1]      = 120;
unitcap[10,1]        = 1;
woodcost[10,1]       = 40;
orecost[10,1]        = 80;
essencecost[10,1]    = 0;
energycost[10,1]     = 0;
value[10,1]          = 0;

attack[10, 2]        = 20;
unithealth[10, 2]    = 110;
unitspeed[10, 2]     = 0;
buildtime[10,2]      = 130;
unitcap[10,2]        = 2;
woodcost[10,2]       = 60;
orecost[10,2]        = 110;
essencecost[10,2]    = 0;
energycost[10,2]     = 0;
value[10,2]          = 0;

attack[10, 3]        = 25;
unithealth[10, 3]    = 120;
unitspeed[10, 3]     = 0;
buildtime[10,3]      = 140;
unitcap[10,3]        = 3;
woodcost[10,3]       = 80;
orecost[10,3]        = 140;
essencecost[10,3]    = 0;
energycost[10,3]     = 0;
value[10,3]          = 0;

attack[10, 4]        = 30;
unithealth[10, 4]    = 130;
unitspeed[10, 4]     = 0;
buildtime[10,4]      = 150;
unitcap[10,4]        = 4;
woodcost[10,4]       = 100;
orecost[10,4]        = 170;
essencecost[10,4]    = 0;
energycost[10,4]     = 0;
value[10,4]          = 0;

attack[10, 5]        = 35;
unithealth[10, 5]    = 140;
unitspeed[10, 5]     = 0;
buildtime[10,5]      = 160;
unitcap[10,5]        = 5;
woodcost[10,5]       = 120;
orecost[10,5]        = 200;
essencecost[10,5]    = 0;
energycost[10,5]     = 0;
value[10,5]          = 0;

attack[10, 6]        = 40;
unithealth[10, 6]    = 150;
unitspeed[10, 6]     = 0;
buildtime[10,6]      = 170;
unitcap[10,6]        = 6;
woodcost[10,6]       = 140;
orecost[10,6]        = 230;
essencecost[10,6]    = 0;
energycost[10,6]     = 200;
value[10,6]          = 0;

attack[10, 7]        = 45;
unithealth[10, 7]    = 160;
unitspeed[10, 7]     = 0;
buildtime[10,7]      = 180;
unitcap[10,7]        = 7;
woodcost[10,7]       = 160;
orecost[10,7]        = 260;
essencecost[10,7]    = 0;
energycost[10,7]     = 300;
value[10,7]          = 0;

attack[10, 8]        = 50;
unithealth[10, 8]    = 170;
unitspeed[10, 8]     = 0;
buildtime[10,8]      = 190;
unitcap[10,8]        = 8;
woodcost[10,8]       = 180;
orecost[10,8]        = 290;
essencecost[10,8]    = 0;
energycost[10,8]     = 400;
value[10,8]          = 0;

attack[10, 9]        = 55;
unithealth[10, 9]    = 180;
unitspeed[10, 9]     = 0;
buildtime[10,9]      = 200;
unitcap[10,9]        = 9;
woodcost[10,9]       = 200;
orecost[10,9]        = 350;
essencecost[10,9]    = 0;
energycost[10,9]     = 500;
value[10,9]          = 0;

attack[10, 10]       = 60;
unithealth[10, 10]   = 190;
unitspeed[10, 10]    = 0;
buildtime[10,10]     = 210;
unitcap[10,10]       = 10;
woodcost[10,10]      = 220;
orecost[10,10]       = 350;
essencecost[10,10]   = 0;
energycost[10,10]    = 600;
value[10,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[11, 1] = 4 is the attack for a Long_Range_Tower object with id 0 and level equal to 1

//Long_Range_Tower id = 11
attack[11, 1]        = 3;
unithealth[11, 1]    = 100;
unitspeed[11, 1]     = 0;
buildtime[11,1]      = 60;
unitcap[11,1]        = 1;
woodcost[11,1]       = 60;
orecost[11,1]        = 40;
essencecost[11,1]    = 0;
energycost[11,1]     = 0;
value[11,1]          = 0;

attack[11, 2]        = 4;
unithealth[11, 2]    = 110;
unitspeed[11, 2]     = 0;
buildtime[11,2]      = 65;
unitcap[11,2]        = 2;
woodcost[11,2]       = 70;
orecost[11,2]        = 50;
essencecost[11,2]    = 0;
energycost[11,2]     = 0;
value[11,2]          = 0;

attack[11, 3]        = 5;
unithealth[11, 3]    = 120;
unitspeed[11, 3]     = 0;
buildtime[11,3]      = 70;
unitcap[11,3]        = 3;
woodcost[11,3]       = 80;
orecost[11,3]        = 60;
essencecost[11,3]    = 0;
energycost[11,3]     = 0;
value[11,3]          = 0;

attack[11, 4]        = 6;
unithealth[11, 4]    = 130;
unitspeed[11, 4]     = 0;
buildtime[11,4]      = 75;
unitcap[11,4]        = 4;
woodcost[11,4]       = 90;
orecost[11,4]        = 70;
essencecost[11,4]    = 0;
energycost[11,4]     = 0;
value[11,4]          = 0;

attack[11, 5]        = 7;
unithealth[11, 5]    = 140;
unitspeed[11, 5]     = 0;
buildtime[11,5]      = 80;
unitcap[11,5]        = 5;
woodcost[11,5]       = 100;
orecost[11,5]        = 80;
essencecost[11,5]    = 0;
energycost[11,5]     = 0;
value[11,5]          = 0;

attack[11, 6]        = 8;
unithealth[11, 6]    = 150;
unitspeed[11, 6]     = 0;
buildtime[11,6]      = 85;
unitcap[11,6]        = 6;
woodcost[11,6]       = 110;
orecost[11,6]        = 90;
essencecost[11,6]    = 0;
energycost[11,6]     = 100;
value[11,6]          = 0;

attack[11, 7]        = 9;
unithealth[11, 7]    = 160;
unitspeed[11, 7]     = 0;
buildtime[11,7]      = 90;
unitcap[11,7]        = 7;
woodcost[11,7]       = 120;
orecost[11,7]        = 100;
essencecost[11,7]    = 0;
energycost[11,7]     = 110;
value[11,7]          = 0;

attack[11, 8]        = 10;
unithealth[11, 8]    = 170;
unitspeed[11, 8]     = 0;
buildtime[11,8]      = 95;
unitcap[11,8]        = 8;
woodcost[11,8]       = 130;
orecost[11,8]        = 110;
essencecost[11,8]    = 0;
energycost[11,8]     = 120;
value[11,8]          = 0;

attack[11, 9]        = 11;
unithealth[11, 9]    = 180;
unitspeed[11, 9]     = 0;
buildtime[11,9]      = 100;
unitcap[11,9]        = 9;
woodcost[11,9]       = 140;
orecost[11,9]        = 120;
essencecost[11,9]    = 0;
energycost[11,9]     = 130;
value[11,9]          = 0;

attack[11, 10]       = 12;
unithealth[11, 10]   = 190;
unitspeed[11, 10]    = 0;
buildtime[11,10]     = 105;
unitcap[11,10]       = 10;
woodcost[11,10]      = 150;
orecost[11,10]       = 130;
essencecost[11,10]   = 0;
energycost[11,10]    = 140;
value[11,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[12, 1] = 4 is the attack for a Short_Range_Tower object with id 0 and level equal to 1

//Short_Range_Tower id = 12
attack[12, 1]        = 30;
unithealth[12, 1]    = 100;
unitspeed[12, 1]     = 0;
buildtime[12,1]      = 60;
unitcap[12,1]        = 1;
woodcost[12,1]       = 40;
orecost[12,1]        = 60;
essencecost[12,1]    = 0;
energycost[12,1]     = 0;
value[12,1]          = 0;

attack[12, 2]        = 40;
unithealth[12, 2]    = 110;
unitspeed[12, 2]     = 0;
buildtime[12,2]      = 65;
unitcap[12,2]        = 2;
woodcost[12,2]       = 50;
orecost[12,2]        = 70;
essencecost[12,2]    = 0;
energycost[12,2]     = 0;
value[12,2]          = 0;

attack[12, 3]        = 50;
unithealth[12, 3]    = 120;
unitspeed[12, 3]     = 0;
buildtime[12,3]      = 70;
unitcap[12,3]        = 3;
woodcost[12,3]       = 60;
orecost[12,3]        = 80;
essencecost[12,3]    = 0;
energycost[12,3]     = 0;
value[12,3]          = 0;

attack[12, 4]        = 60;
unithealth[12, 4]    = 130;
unitspeed[12, 4]     = 0;
buildtime[12,4]      = 75;
unitcap[12,4]        = 4;
woodcost[12,4]       = 70;
orecost[12,4]        = 90;
essencecost[12,4]    = 0;
energycost[12,4]     = 0;
value[12,4]          = 0;

attack[12, 5]        = 70;
unithealth[12, 5]    = 140;
unitspeed[12, 5]     = 0;
buildtime[12,5]      = 80;
unitcap[12,5]        = 5;
woodcost[12,5]       = 80;
orecost[12,5]        = 100;
essencecost[12,5]    = 0;
energycost[12,5]     = 0;
value[12,5]          = 0;

attack[12, 6]        = 80;
unithealth[12, 6]    = 150;
unitspeed[12, 6]     = 0;
buildtime[12,6]      = 85;
unitcap[12,6]        = 6;
woodcost[12,6]       = 90;
orecost[12,6]        = 110;
essencecost[12,6]    = 0;
energycost[12,6]     = 100;
value[12,6]          = 0;

attack[12, 7]        = 90;
unithealth[12, 7]    = 160;
unitspeed[12, 7]     = 0;
buildtime[12,7]      = 90;
unitcap[12,7]        = 7;
woodcost[12,7]       = 100;
orecost[12,7]        = 120;
essencecost[12,7]    = 0;
energycost[12,7]     = 110;
value[12,7]          = 0;

attack[12, 8]        = 100;
unithealth[12, 8]    = 170;
unitspeed[12, 8]     = 0;
buildtime[12,8]      = 95;
unitcap[12,8]        = 8;
woodcost[12,8]       = 110;
orecost[12,8]        = 130;
essencecost[12,8]    = 0;
energycost[12,8]     = 120;
value[12,8]          = 0;

attack[12, 9]        = 110;
unithealth[12, 9]    = 180;
unitspeed[12, 9]     = 0;
buildtime[12,9]      = 100;
unitcap[12,9]        = 9;
woodcost[12,9]       = 120;
orecost[12,9]        = 140;
essencecost[12,9]    = 0;
energycost[12,9]     = 130;
value[12,9]          = 0;

attack[12, 10]       = 120;
unithealth[12, 10]   = 190;
unitspeed[12, 10]    = 0;
buildtime[12,10]     = 105;
unitcap[12,10]       = 10;
woodcost[12,10]      = 130;
orecost[12,10]       = 150;
essencecost[12,10]   = 0;
energycost[12,10]    = 140;
value[12,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[13, 1] = 4 is the attack for a Short_Range_Blast_Tower object with id 0 and level equal to 1

//Short_Range_Blast_Tower id = 13
attack[13, 1]        = 9;
unithealth[13, 1]    = 100;
unitspeed[13, 1]     = 0;
buildtime[13,1]      = 80;
unitcap[13,1]        = 1;
woodcost[13,1]       = 30;
orecost[13,1]        = 40;
essencecost[13,1]    = 0;
energycost[13,1]     = 0;
value[13,1]          = 0;

attack[13, 2]        = 12;
unithealth[13, 2]    = 110;
unitspeed[13, 2]     = 0;
buildtime[13,2]      = 95;
unitcap[13,2]        = 2;
woodcost[13,2]       = 50;
orecost[13,2]        = 60;
essencecost[13,2]    = 0;
energycost[13,2]     = 0;
value[13,2]          = 0;

attack[13, 3]        = 15;
unithealth[13, 3]    = 120;
unitspeed[13, 3]     = 0;
buildtime[13,3]      = 110;
unitcap[13,3]        = 3;
woodcost[13,3]       = 70;
orecost[13,3]        = 80;
essencecost[13,3]    = 0;
energycost[13,3]     = 0;
value[13,3]          = 0;

attack[13, 4]        = 18;
unithealth[13, 4]    = 130;
unitspeed[13, 4]     = 0;
buildtime[13,4]      = 125;
unitcap[13,4]        = 4;
woodcost[13,4]       = 90;
orecost[13,4]        = 100;
essencecost[13,4]    = 0;
energycost[13,4]     = 0;
value[13,4]          = 0;

attack[13, 5]        = 21;
unithealth[13, 5]    = 140;
unitspeed[13, 5]     = 0;
buildtime[13,5]      = 140;
unitcap[13,5]        = 5;
woodcost[13,5]       = 110;
orecost[13,5]        = 120;
essencecost[13,5]    = 0;
energycost[13,5]     = 0;
value[13,5]          = 0;

attack[13, 6]        = 24;
unithealth[13, 6]    = 150;
unitspeed[13, 6]     = 0;
buildtime[13,6]      = 155;
unitcap[13,6]        = 6;
woodcost[13,6]       = 130;
orecost[13,6]        = 140;
essencecost[13,6]    = 0;
energycost[13,6]     = 150;
value[13,6]          = 0;

attack[13, 7]        = 27;
unithealth[13, 7]    = 160;
unitspeed[13, 7]     = 0;
buildtime[13,7]      = 170;
unitcap[13,7]        = 7;
woodcost[13,7]       = 150;
orecost[13,7]        = 160;
essencecost[13,7]    = 0;
energycost[13,7]     = 180;
value[13,7]          = 0;

attack[13, 8]        = 30;
unithealth[13, 8]    = 170;
unitspeed[13, 8]     = 0;
buildtime[13,8]      = 185;
unitcap[13,8]        = 8;
woodcost[13,8]       = 170;
orecost[13,8]        = 180;
essencecost[13,8]    = 0;
energycost[13,8]     = 210;
value[13,8]          = 0;

attack[13, 9]        = 33;
unithealth[13, 9]    = 180;
unitspeed[13, 9]     = 0;
buildtime[13,9]      = 200;
unitcap[13,9]        = 9;
woodcost[13,9]       = 190;
orecost[13,9]        = 200;
essencecost[13,9]    = 0;
energycost[13,9]     = 240;
value[13,9]          = 0;

attack[13, 10]       = 36;
unithealth[13, 10]   = 190;
unitspeed[13, 10]    = 0;
buildtime[13,10]     = 215;
unitcap[13,10]       = 10;
woodcost[13,10]      = 210;
orecost[13,10]       = 220;
essencecost[13,10]   = 0;
energycost[13,10]    = 270;
value[13,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[14, 1] = 4 is the attack for a Inferno_Tower object with id 0 and level equal to 1

//Inferno_Tower id = 14
attack[14, 1]        = 12;
unithealth[14, 1]    = 100;
unitspeed[14, 1]     = 0;
buildtime[14,1]      = 80;
unitcap[14,1]        = 1;
woodcost[14,1]       = 40;
orecost[14,1]        = 30;
essencecost[14,1]    = 0;
energycost[14,1]     = 0;
value[14,1]          = 0;

attack[14, 2]        = 16;
unithealth[14, 2]    = 110;
unitspeed[14, 2]     = 0;
buildtime[14,2]      = 95;
unitcap[14,2]        = 2;
woodcost[14,2]       = 60;
orecost[14,2]        = 50;
essencecost[14,2]    = 0;
energycost[14,2]     = 0;
value[14,2]          = 0;

attack[14, 3]        = 20;
unithealth[14, 3]    = 120;
unitspeed[14, 3]     = 0;
buildtime[14,3]      = 110;
unitcap[14,3]        = 3;
woodcost[14,3]       = 80;
orecost[14,3]        = 70;
essencecost[14,3]    = 0;
energycost[14,3]     = 0;
value[14,3]          = 0;

attack[14, 4]        = 24;
unithealth[14, 4]    = 130;
unitspeed[14, 4]     = 0;
buildtime[14,4]      = 125;
unitcap[14,4]        = 4;
woodcost[14,4]       = 100;
orecost[14,4]        = 90;
essencecost[14,4]    = 0;
energycost[14,4]     = 0;
value[14,4]          = 0;

attack[14, 5]        = 28;
unithealth[14, 5]    = 140;
unitspeed[14, 5]     = 0;
buildtime[14,5]      = 140;
unitcap[14,5]        = 5;
woodcost[14,5]       = 120;
orecost[14,5]        = 110;
essencecost[14,5]    = 0;
energycost[14,5]     = 0;
value[14,5]          = 0;

attack[14, 6]        = 32;
unithealth[14, 6]    = 150;
unitspeed[14, 6]     = 0;
buildtime[14,6]      = 155;
unitcap[14,6]        = 6;
woodcost[14,6]       = 140;
orecost[14,6]        = 130;
essencecost[14,6]    = 0;
energycost[14,6]     = 150;
value[14,6]          = 0;

attack[14, 7]        = 36;
unithealth[14, 7]    = 160;
unitspeed[14, 7]     = 0;
buildtime[14,7]      = 170;
unitcap[14,7]        = 7;
woodcost[14,7]       = 160;
orecost[14,7]        = 150;
essencecost[14,7]    = 0;
energycost[14,7]     = 180;
value[14,7]          = 0;

attack[14, 8]        = 40;
unithealth[14, 8]    = 170;
unitspeed[14, 8]     = 0;
buildtime[14,8]      = 185;
unitcap[14,8]        = 8;
woodcost[14,8]       = 180;
orecost[14,8]        = 170;
essencecost[14,8]    = 0;
energycost[14,8]     = 210;
value[14,8]          = 0;

attack[14, 9]        = 44;
unithealth[14, 9]    = 180;
unitspeed[14, 9]     = 0;
buildtime[14,9]      = 200;
unitcap[14,9]        = 9;
woodcost[14,9]       = 200;
orecost[14,9]        = 190;
essencecost[14,9]    = 0;
energycost[14,9]     = 240;
value[14,9]          = 0;

attack[14, 10]       = 48;
unithealth[14, 10]   = 190;
unitspeed[14, 10]    = 0;
buildtime[14,10]     = 215;
unitcap[14,10]       = 10;
woodcost[14,10]      = 220;
orecost[14,10]       = 210;
essencecost[14,10]   = 0;
energycost[14,10]    = 270;
value[14,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[15, 1] = 4 is the attack for a Healing_Tower object with id 0 and level equal to 1

//Healing_Tower id = 15
attack[15, 1]        = 1;
unithealth[15, 1]    = 100;
unitspeed[15, 1]     = 0;
buildtime[15,1]      = 90;
unitcap[15,1]        = 1;
woodcost[15,1]       = 40;
orecost[15,1]        = 40;
essencecost[15,1]    = 0;
energycost[15,1]     = 0;
value[15,1]          = 0;

attack[15, 2]        = 5;
unithealth[15, 2]    = 110;
unitspeed[15, 2]     = 0;
buildtime[15,2]      = 105;
unitcap[15,2]        = 2;
woodcost[15,2]       = 60;
orecost[15,2]        = 60;
essencecost[15,2]    = 0;
energycost[15,2]     = 0;
value[15,2]          = 0;

attack[15, 3]        = 10;
unithealth[15, 3]    = 120;
unitspeed[15, 3]     = 0;
buildtime[15,3]      = 120;
unitcap[15,3]        = 3;
woodcost[15,3]       = 80;
orecost[15,3]        = 80;
essencecost[15,3]    = 0;
energycost[15,3]     = 0;
value[15,3]          = 0;

attack[15, 4]        = 15;
unithealth[15, 4]    = 130;
unitspeed[15, 4]     = 0;
buildtime[15,4]      = 135;
unitcap[15,4]        = 4;
woodcost[15,4]       = 100;
orecost[15,4]        = 100;
essencecost[15,4]    = 0;
energycost[15,4]     = 0;
value[15,4]          = 0;

attack[15, 5]        = 20;
unithealth[15, 5]    = 140;
unitspeed[15, 5]     = 0;
buildtime[15,5]      = 150;
unitcap[15,5]        = 5;
woodcost[15,5]       = 120;
orecost[15,5]        = 120;
essencecost[15,5]    = 0;
energycost[15,5]     = 0;
value[15,5]          = 0;

attack[15, 6]        = 25;
unithealth[15, 6]    = 150;
unitspeed[15, 6]     = 0;
buildtime[15,6]      = 165;
unitcap[15,6]        = 6;
woodcost[15,6]       = 140;
orecost[15,6]        = 140;
essencecost[15,6]    = 0;
energycost[15,6]     = 200;
value[15,6]          = 0;

attack[15, 7]        = 30;
unithealth[15, 7]    = 160;
unitspeed[15, 7]     = 0;
buildtime[15,7]      = 180;
unitcap[15,7]        = 7;
woodcost[15,7]       = 160;
orecost[15,7]        = 160;
essencecost[15,7]    = 0;
energycost[15,7]     = 250;
value[15,7]          = 0;

attack[15, 8]        = 35;
unithealth[15, 8]    = 170;
unitspeed[15, 8]     = 0;
buildtime[15,8]      = 195;
unitcap[15,8]        = 8;
woodcost[15,8]       = 180;
orecost[15,8]        = 180;
essencecost[15,8]    = 0;
energycost[15,8]     = 300;
value[15,8]          = 0;

attack[15, 9]        = 40;
unithealth[15, 9]    = 180;
unitspeed[15, 9]     = 0;
buildtime[15,9]      = 210;
unitcap[15,9]        = 9;
woodcost[15,9]       = 200;
orecost[15,9]        = 200;
essencecost[15,9]    = 0;
energycost[15,9]     = 350;
value[15,9]          = 0;

attack[15, 10]       = 45;
unithealth[15, 10]   = 190;
unitspeed[15, 10]    = 0;
buildtime[15,10]     = 225;
unitcap[15,10]       = 10;
woodcost[15,10]      = 220;
orecost[15,10]       = 220;
essencecost[15,10]   = 0;
energycost[15,10]    = 400;
value[15,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[16, 1] = 4 is the attack for a Woods object with id 0 and level equal to 1

//Woods id = 16
attack[16, 1]        = 0;
unithealth[16, 1]    = 0;
unitspeed[16, 1]     = 10;
buildtime[16,1]      = 30;
unitcap[16,1]        = 0;
woodcost[16,1]       = 0;
orecost[16,1]        = 0;
essencecost[16,1]    = 0;
energycost[16,1]     = 0;
value[16,1]          = 100;

attack[16, 2]        = 0;
unithealth[16, 2]    = 0;
unitspeed[16, 2]     = 20;
buildtime[16,2]      = 40;
unitcap[16,2]        = 0;
woodcost[16,2]       = 0;
orecost[16,2]        = 0;
essencecost[16,2]    = 0;
energycost[16,2]     = 0;
value[16,2]          = 200;

attack[16, 3]        = 0;
unithealth[16, 3]    = 0;
unitspeed[16, 3]     = 30;
buildtime[16,3]      = 50;
unitcap[16,3]        = 0;
woodcost[16,3]       = 0;
orecost[16,3]        = 0;
essencecost[16,3]    = 0;
energycost[16,3]     = 0;
value[16,3]          = 300;

attack[16, 4]        = 0;
unithealth[16, 4]    = 0;
unitspeed[16, 4]     = 40;
buildtime[16,4]      = 60;
unitcap[16,4]        = 4;
woodcost[16,4]       = 0;
orecost[16,4]        = 0;
essencecost[16,4]    = 0;
energycost[16,4]     = 0;
value[16,4]          = 400;

attack[16, 5]        = 0;
unithealth[16, 5]    = 0;
unitspeed[16, 5]     = 50;
buildtime[16,5]      = 70;
unitcap[16,5]        = 0;
woodcost[16,5]       = 0;
orecost[16,5]        = 0;
essencecost[16,5]    = 0;
energycost[16,5]     = 0;
value[16,5]          = 500;

attack[16, 6]        = 0;
unithealth[16, 6]    = 0;
unitspeed[16, 6]     = 60;
buildtime[16,6]      = 80;
unitcap[16,6]        = 0;
woodcost[16,6]       = 0;
orecost[16,6]        = 0;
essencecost[16,6]    = 0;
energycost[16,6]     = 0;
value[16,6]          = 600;

attack[16, 7]        = 0;
unithealth[16, 7]    = 0;
unitspeed[16, 7]     = 70;
buildtime[16,7]      = 90;
unitcap[16,7]        = 0;
woodcost[16,7]       = 0;
orecost[16,7]        = 0;
essencecost[16,7]    = 0;
energycost[16,7]     = 0;
value[16,7]          = 700;

attack[16, 8]        = 0;
unithealth[16, 8]    = 0;
unitspeed[16, 8]     = 80;
buildtime[16,8]      = 100;
unitcap[16,8]        = 0;
woodcost[16,8]       = 0;
orecost[16,8]        = 0;
essencecost[16,8]    = 0;
energycost[16,8]     = 0;
value[16,8]          = 800;

attack[16, 9]        = 0;
unithealth[16, 9]    = 0;
unitspeed[16, 9]     = 90;
buildtime[16,9]      = 1100;
unitcap[16,9]        = 0;
woodcost[16,9]       = 0;
orecost[16,9]        = 0;
essencecost[16,9]    = 0;
energycost[16,9]     = 0;
value[16,9]          = 900;

attack[16, 10]       = 0;
unithealth[16, 10]   = 0;
unitspeed[16, 10]    = 100;
buildtime[16,10]     = 120;
unitcap[16,10]       = 0;
woodcost[16,10]      = 0;
orecost[16,10]       = 0;
essencecost[16,10]   = 0;
energycost[16,10]    = 0;
value[16,10]         = 1000;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[17, 1] = 4 is the attack for a Mine object with id 0 and level equal to 1

//Mine id = 17
attack[17, 1]        = 0;
unithealth[17, 1]    = 0;
unitspeed[17, 1]     = 0;
buildtime[17,1]      = 0;
unitcap[17,1]        = 0;
woodcost[17,1]       = 0;
orecost[17,1]        = 0;
essencecost[17,1]    = 0;
energycost[17,1]     = 0;
value[17,1]          = 10000;

attack[17, 2]        = 0;
unithealth[17, 2]    = 0;
unitspeed[17, 2]     = 0;
buildtime[17,2]      = 0;
unitcap[17,2]        = 0;
woodcost[17,2]       = 0;
orecost[17,2]        = 0;
essencecost[17,2]    = 0;
energycost[17,2]     = 0;
value[17,2]          = 12000;

attack[17, 3]        = 0;
unithealth[17, 3]    = 0;
unitspeed[17, 3]     = 0;
buildtime[17,3]      = 0;
unitcap[17,3]        = 0;
woodcost[17,3]       = 0;
orecost[17,3]        = 0;
essencecost[17,3]    = 0;
energycost[17,3]     = 0;
value[17,3]          = 14000;

attack[17, 4]        = 0;
unithealth[17, 4]    = 0;
unitspeed[17, 4]     = 0;
buildtime[17,4]      = 0;
unitcap[17,4]        = 4;
woodcost[17,4]       = 0;
orecost[17,4]        = 0;
essencecost[17,4]    = 0;
energycost[17,4]     = 0;
value[17,4]          = 16000;

attack[17, 5]        = 0;
unithealth[17, 5]    = 0;
unitspeed[17, 5]     = 0;
buildtime[17,5]      = 0;
unitcap[17,5]        = 0;
woodcost[17,5]       = 0;
orecost[17,5]        = 0;
essencecost[17,5]    = 0;
energycost[17,5]     = 0;
value[17,5]          = 18000;

attack[17, 6]        = 0;
unithealth[17, 6]    = 0;
unitspeed[17, 6]     = 0;
buildtime[17,6]      = 0;
unitcap[17,6]        = 0;
woodcost[17,6]       = 0;
orecost[17,6]        = 0;
essencecost[17,6]    = 0;
energycost[17,6]     = 0;
value[17,6]          = 20000;

attack[17, 7]        = 0;
unithealth[17, 7]    = 0;
unitspeed[17, 7]     = 0;
buildtime[17,7]      = 0;
unitcap[17,7]        = 0;
woodcost[17,7]       = 0;
orecost[17,7]        = 0;
essencecost[17,7]    = 0;
energycost[17,7]     = 0;
value[17,7]          = 22000;

attack[17, 8]        = 0;
unithealth[17, 8]    = 0;
unitspeed[17, 8]     = 0;
buildtime[17,8]      = 0;
unitcap[17,8]        = 0;
woodcost[17,8]       = 0;
orecost[17,8]        = 0;
essencecost[17,8]    = 0;
energycost[17,8]     = 0;
value[17,8]          = 24000;

attack[17, 9]        = 0;
unithealth[17, 9]    = 0;
unitspeed[17, 9]     = 0;
buildtime[17,9]      = 0;
unitcap[17,9]        = 0;
woodcost[17,9]       = 0;
orecost[17,9]        = 0;
essencecost[17,9]    = 0;
energycost[17,9]     = 0;
value[17,9]          = 26000;

attack[17, 10]       = 0;
unithealth[17, 10]   = 0;
unitspeed[17, 10]    = 0;
buildtime[17,10]     = 0;
unitcap[17,10]       = 0;
woodcost[17,10]      = 0;
orecost[17,10]       = 0;
essencecost[17,10]   = 0;
energycost[17,10]    = 0;
value[17,10]         = 28000;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[18, 1] = 4 is the attack for a Rift object with id 0 and level equal to 1

//Rift id = 18
attack[18, 1]        = 0;
unithealth[18, 1]    = 0;
unitspeed[18, 1]     = 0;
buildtime[18,1]      = 0;
unitcap[18,1]        = 0;
woodcost[18,1]       = 0;
orecost[18,1]        = 0;
essencecost[18,1]    = 0;
energycost[18,1]     = 0;
value[18,1]          = 10000;

attack[18, 2]        = 0;
unithealth[18, 2]    = 0;
unitspeed[18, 2]     = 0;
buildtime[18,2]      = 0;
unitcap[18,2]        = 0;
woodcost[18,2]       = 0;
orecost[18,2]        = 0;
essencecost[18,2]    = 0;
energycost[18,2]     = 0;
value[18,2]          = 12000;

attack[18, 3]        = 0;
unithealth[18, 3]    = 0;
unitspeed[18, 3]     = 0;
buildtime[18,3]      = 0;
unitcap[18,3]        = 0;
woodcost[18,3]       = 0;
orecost[18,3]        = 0;
essencecost[18,3]    = 0;
energycost[18,3]     = 0;
value[18,3]          = 14000;

attack[18, 4]        = 0;
unithealth[18, 4]    = 0;
unitspeed[18, 4]     = 0;
buildtime[18,4]      = 0;
unitcap[18,4]        = 4;
woodcost[18,4]       = 0;
orecost[18,4]        = 0;
essencecost[18,4]    = 0;
energycost[18,4]     = 0;
value[18,4]          = 16000;

attack[18, 5]        = 0;
unithealth[18, 5]    = 0;
unitspeed[18, 5]     = 0;
buildtime[18,5]      = 0;
unitcap[18,5]        = 0;
woodcost[18,5]       = 0;
orecost[18,5]        = 0;
essencecost[18,5]    = 0;
energycost[18,5]     = 0;
value[18,5]          = 18000;

attack[18, 6]        = 0;
unithealth[18, 6]    = 0;
unitspeed[18, 6]     = 0;
buildtime[18,6]      = 0;
unitcap[18,6]        = 0;
woodcost[18,6]       = 0;
orecost[18,6]        = 0;
essencecost[18,6]    = 0;
energycost[18,6]     = 0;
value[18,6]          = 20000;

attack[18, 7]        = 0;
unithealth[18, 7]    = 0;
unitspeed[18, 7]     = 0;
buildtime[18,7]      = 0;
unitcap[18,7]        = 0;
woodcost[18,7]       = 0;
orecost[18,7]        = 0;
essencecost[18,7]    = 0;
energycost[18,7]     = 0;
value[18,7]          = 22000;

attack[18, 8]        = 0;
unithealth[18, 8]    = 0;
unitspeed[18, 8]     = 0;
buildtime[18,8]      = 0;
unitcap[18,8]        = 0;
woodcost[18,8]       = 0;
orecost[18,8]        = 0;
essencecost[18,8]    = 0;
energycost[18,8]     = 0;
value[18,8]          = 24000;

attack[18, 9]        = 0;
unithealth[18, 9]    = 0;
unitspeed[18, 9]     = 0;
buildtime[18,9]      = 0;
unitcap[18,9]        = 0;
woodcost[18,9]       = 0;
orecost[18,9]        = 0;
essencecost[18,9]    = 0;
energycost[18,9]     = 0;
value[18,9]          = 26000;

attack[18, 10]       = 0;
unithealth[18, 10]   = 0;
unitspeed[18, 10]    = 0;
buildtime[18,10]     = 0;
unitcap[18,10]       = 0;
woodcost[18,10]      = 0;
orecost[18,10]       = 0;
essencecost[18,10]   = 0;
energycost[18,10]    = 0;
value[18,10]         = 28000;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store information for reference by array

//information is dependent on 
//attack[19, 1] = 4 is the attack for a Monster_Maker_d object with id 0 and level equal to 1

//Monster_Maker_d id = 19
attack[19, 1]        = 0;
unithealth[19, 1]    = 1000;
unitspeed[19, 1]     = 0;
buildtime[19,1]      = 0;
unitcap[19,1]        = 100;
woodcost[19,1]       = 0;
orecost[19,1]        = 0;
essencecost[19,1]    = 0;
energycost[19,1]     = 0;
value[19,1]          = 0;

attack[19, 2]        = 0;
unithealth[19, 2]    = 1100;
unitspeed[19, 2]     = 0;
buildtime[19,2]      = 0;
unitcap[19,2]        = 100;
woodcost[19,2]       = 0;
orecost[19,2]        = 0;
essencecost[19,2]    = 0;
energycost[19,2]     = 0;
value[19,2]          = 0;

attack[19, 3]        = 0;
unithealth[19, 3]    = 1220;
unitspeed[19, 3]     = 0;
buildtime[19,3]      = 0;
unitcap[19,3]        = 100;
woodcost[19,3]       = 0;
orecost[19,3]        = 0;
essencecost[19,3]    = 0;
energycost[19,3]     = 0;
value[19,3]          = 0;

attack[19, 4]        = 0;
unithealth[19, 4]    = 1360;
unitspeed[19, 4]     = 0;
buildtime[19,4]      = 0;
unitcap[19,4]        = 100;
woodcost[19,4]       = 0;
orecost[19,4]        = 0;
essencecost[19,4]    = 0;
energycost[19,4]     = 0;
value[19,4]          = 0;

attack[19, 5]        = 0;
unithealth[19, 5]    = 1520;
unitspeed[19, 5]     = 0;
buildtime[19,5]      = 0;
unitcap[19,5]        = 100;
woodcost[19,5]       = 0;
orecost[19,5]        = 0;
essencecost[19,5]    = 0;
energycost[19,5]     = 0;
value[19,5]          = 0;

attack[19, 6]        = 0;
unithealth[19, 6]    = 1700;
unitspeed[19, 6]     = 0;
buildtime[19,6]      = 0;
unitcap[19,6]        = 100;
woodcost[19,6]       = 0;
orecost[19,6]        = 0;
essencecost[19,6]    = 0;
energycost[19,6]     = 0;
value[19,6]          = 0;

attack[19, 7]        = 0;
unithealth[19, 7]    = 1900;
unitspeed[19, 7]     = 0;
buildtime[19,7]      = 0;
unitcap[19,7]        = 100;
woodcost[19,7]       = 0;
orecost[19,7]        = 0;
essencecost[19,7]    = 0;
energycost[19,7]     = 0;
value[19,7]          = 0;

attack[19, 8]        = 0;
unithealth[19, 8]    = 2120;
unitspeed[19, 8]     = 0;
buildtime[19,8]      = 0;
unitcap[19,8]        = 100;
woodcost[19,8]       = 0;
orecost[19,8]        = 0;
essencecost[19,8]    = 0;
energycost[19,8]     = 0;
value[19,8]          = 0;

attack[19, 9]        = 0;
unithealth[19, 9]    = 2360;
unitspeed[19, 9]     = 0;
buildtime[19,9]      = 0;
unitcap[19,9]        = 100;
woodcost[19,9]       = 0;
orecost[19,9]        = 0;
essencecost[19,9]    = 0;
energycost[19,9]     = 0;
value[19,9]          = 0;

attack[19, 10]       = 0;
unithealth[19, 10]   = 2620;
unitspeed[19, 10]    = 0;
buildtime[19,10]     = 0;
unitcap[19,10]       = 100;
woodcost[19,10]      = 0;
orecost[19,10]       = 0;
essencecost[19,10]   = 0;
energycost[19,10]    = 0;
value[19,10]          = 0;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store cumulative statistics
    //buildtimes

    //builder
   sumbuildtime[0, 1] = buildtime[0,1];
   sumbuildtime[0, 2] = sumbuildtime[0, 1] + buildtime[0, 2];
   sumbuildtime[0, 3] = sumbuildtime[0, 2] + buildtime[0, 3];
   sumbuildtime[0, 4] = sumbuildtime[0, 3] + buildtime[0, 4];
   sumbuildtime[0, 5] = sumbuildtime[0, 4] + buildtime[0, 5];
   sumbuildtime[0, 6] = sumbuildtime[0, 5] + buildtime[0, 6];
   sumbuildtime[0, 7] = sumbuildtime[0, 6] + buildtime[0, 7];
   sumbuildtime[0, 8] = sumbuildtime[0, 7] + buildtime[0, 8];
   sumbuildtime[0, 9] = sumbuildtime[0, 8] + buildtime[0, 9];
   sumbuildtime[0, 10] = sumbuildtime[0, 9] + buildtime[0, 10];
   
   //harvester
   sumbuildtime[1, 1] = buildtime[1,1];
   sumbuildtime[1, 2] = sumbuildtime[1, 1] + buildtime[1, 2];
   sumbuildtime[1, 3] = sumbuildtime[1, 2] + buildtime[1, 3];
   sumbuildtime[1, 4] = sumbuildtime[1, 3] + buildtime[1, 4];
   sumbuildtime[1, 5] = sumbuildtime[1, 4] + buildtime[1, 5];
   sumbuildtime[1, 6] = sumbuildtime[1, 5] + buildtime[1, 6];
   sumbuildtime[1, 7] = sumbuildtime[1, 6] + buildtime[1, 7];
   sumbuildtime[1, 8] = sumbuildtime[1, 7] + buildtime[1, 8];
   sumbuildtime[1, 9] = sumbuildtime[1, 8] + buildtime[1, 9];
   sumbuildtime[1, 10] = sumbuildtime[1, 9] + buildtime[1, 10];
   
   //fighter
   sumbuildtime[2, 1] = buildtime[2,1];
   sumbuildtime[2, 2] = sumbuildtime[2, 1] + buildtime[2, 2];
   sumbuildtime[2, 3] = sumbuildtime[2, 2] + buildtime[2, 3];
   sumbuildtime[2, 4] = sumbuildtime[2, 3] + buildtime[2, 4];
   sumbuildtime[2, 5] = sumbuildtime[2, 4] + buildtime[2, 5];
   sumbuildtime[2, 6] = sumbuildtime[2, 5] + buildtime[2, 6];
   sumbuildtime[2, 7] = sumbuildtime[2, 6] + buildtime[2, 7];
   sumbuildtime[2, 8] = sumbuildtime[2, 7] + buildtime[2, 8];
   sumbuildtime[2, 9] = sumbuildtime[2, 8] + buildtime[2, 9];
   sumbuildtime[2, 10] = sumbuildtime[2, 9] + buildtime[2, 10];
   //HQ Building 
   sumbuildtime[4, 1] = buildtime[4,1];
   sumbuildtime[4, 2] = sumbuildtime[4, 1] + buildtime[4, 2];
   sumbuildtime[4, 3] = sumbuildtime[4, 2] + buildtime[4, 3];
   sumbuildtime[4, 4] = sumbuildtime[4, 3] + buildtime[4, 4];
   sumbuildtime[4, 5] = sumbuildtime[4, 4] + buildtime[4, 5];
   sumbuildtime[4, 6] = sumbuildtime[4, 5] + buildtime[4, 6];
   sumbuildtime[4, 7] = sumbuildtime[4, 6] + buildtime[4, 7];
   sumbuildtime[4, 8] = sumbuildtime[4, 7] + buildtime[4, 8];
   sumbuildtime[4, 9] = sumbuildtime[4, 8] + buildtime[4, 9];
   sumbuildtime[4, 10] = sumbuildtime[4, 9] + buildtime[4, 10];
   //Fighter Barracks
   sumbuildtime[5, 1] = buildtime[5,1];
   sumbuildtime[5, 2] = sumbuildtime[5, 1] + buildtime[5, 2];
   sumbuildtime[5, 3] = sumbuildtime[5, 2] + buildtime[5, 3];
   sumbuildtime[5, 4] = sumbuildtime[5, 3] + buildtime[5, 4];
   sumbuildtime[5, 5] = sumbuildtime[5, 4] + buildtime[5, 5];
   sumbuildtime[5, 6] = sumbuildtime[5, 5] + buildtime[5, 6];
   sumbuildtime[5, 7] = sumbuildtime[5, 6] + buildtime[5, 7];
   sumbuildtime[5, 8] = sumbuildtime[5, 7] + buildtime[5, 8];
   sumbuildtime[5, 9] = sumbuildtime[5, 8] + buildtime[5, 9];
   sumbuildtime[5, 10] = sumbuildtime[5, 9] + buildtime[5, 10];
   //Fighter Enhancer
   sumbuildtime[6, 1] = buildtime[6,1];
   sumbuildtime[6, 2] = sumbuildtime[6, 1] + buildtime[6, 2];
   sumbuildtime[6, 3] = sumbuildtime[6, 2] + buildtime[6, 3];
   sumbuildtime[6, 4] = sumbuildtime[6, 3] + buildtime[6, 4];
   sumbuildtime[6, 5] = sumbuildtime[6, 4] + buildtime[6, 5];
   sumbuildtime[6, 6] = sumbuildtime[6, 5] + buildtime[6, 6];
   sumbuildtime[6, 7] = sumbuildtime[6, 6] + buildtime[6, 7];
   sumbuildtime[6, 8] = sumbuildtime[6, 7] + buildtime[6, 8];
   sumbuildtime[6, 9] = sumbuildtime[6, 8] + buildtime[6, 9];
   sumbuildtime[6, 10] = sumbuildtime[6, 9] + buildtime[6, 10];
   //Worker Enhancer
   sumbuildtime[7, 1] = buildtime[7,1];
   sumbuildtime[7, 2] = sumbuildtime[7, 1] + buildtime[7, 2];
   sumbuildtime[7, 3] = sumbuildtime[7, 2] + buildtime[7, 3];
   sumbuildtime[7, 4] = sumbuildtime[7, 3] + buildtime[7, 4];
   sumbuildtime[7, 5] = sumbuildtime[7, 4] + buildtime[7, 5];
   sumbuildtime[7, 6] = sumbuildtime[7, 5] + buildtime[7, 6];
   sumbuildtime[7, 7] = sumbuildtime[7, 6] + buildtime[7, 7];
   sumbuildtime[7, 8] = sumbuildtime[7, 7] + buildtime[7, 8];
   sumbuildtime[7, 9] = sumbuildtime[7, 8] + buildtime[7, 9];
   sumbuildtime[7, 10] = sumbuildtime[7, 9] + buildtime[7, 10];
   //Generator
   sumbuildtime[8, 1] = buildtime[8,1];
   sumbuildtime[8, 2] = sumbuildtime[8, 1] + buildtime[8, 2];
   sumbuildtime[8, 3] = sumbuildtime[8, 2] + buildtime[8, 3];
   sumbuildtime[8, 4] = sumbuildtime[8, 3] + buildtime[8, 4];
   sumbuildtime[8, 5] = sumbuildtime[8, 4] + buildtime[8, 5];
   sumbuildtime[8, 6] = sumbuildtime[8, 5] + buildtime[8, 6];
   sumbuildtime[8, 7] = sumbuildtime[8, 6] + buildtime[8, 7];
   sumbuildtime[8, 8] = sumbuildtime[8, 7] + buildtime[8, 8];
   sumbuildtime[8, 9] = sumbuildtime[8, 8] + buildtime[8, 9];
   sumbuildtime[8, 10] = sumbuildtime[8, 9] + buildtime[8, 10];
   //Defense Tower
   sumbuildtime[10, 1] = buildtime[10,1];
   sumbuildtime[10, 2] = sumbuildtime[10, 1] + buildtime[10, 2];
   sumbuildtime[10, 3] = sumbuildtime[10, 2] + buildtime[10, 3];
   sumbuildtime[10, 4] = sumbuildtime[10, 3] + buildtime[10, 4];
   sumbuildtime[10, 5] = sumbuildtime[10, 4] + buildtime[10, 5];
   sumbuildtime[10, 6] = sumbuildtime[10, 5] + buildtime[10, 6];
   sumbuildtime[10, 7] = sumbuildtime[10, 6] + buildtime[10, 7];
   sumbuildtime[10, 8] = sumbuildtime[10, 7] + buildtime[10, 8];
   sumbuildtime[10, 9] = sumbuildtime[10, 8] + buildtime[10, 9];
   sumbuildtime[10, 10] = sumbuildtime[10, 9] + buildtime[10, 10];
   //Long Range Tower
   sumbuildtime[11, 1] = buildtime[11,1];
   sumbuildtime[11, 2] = sumbuildtime[11, 1] + buildtime[11, 2];
   sumbuildtime[11, 3] = sumbuildtime[11, 2] + buildtime[11, 3];
   sumbuildtime[11, 4] = sumbuildtime[11, 3] + buildtime[11, 4];
   sumbuildtime[11, 5] = sumbuildtime[11, 4] + buildtime[11, 5];
   sumbuildtime[11, 6] = sumbuildtime[11, 5] + buildtime[11, 6];
   sumbuildtime[11, 7] = sumbuildtime[11, 6] + buildtime[11, 7];
   sumbuildtime[11, 8] = sumbuildtime[11, 7] + buildtime[11, 8];
   sumbuildtime[11, 9] = sumbuildtime[11, 8] + buildtime[11, 9];
   sumbuildtime[11, 10] = sumbuildtime[11, 9] + buildtime[11, 10];
   //Short Range Tower
   sumbuildtime[12, 1] = buildtime[12,1];
   sumbuildtime[12, 2] = sumbuildtime[12, 1] + buildtime[12, 2];
   sumbuildtime[12, 3] = sumbuildtime[12, 2] + buildtime[12, 3];
   sumbuildtime[12, 4] = sumbuildtime[12, 3] + buildtime[12, 4];
   sumbuildtime[12, 5] = sumbuildtime[12, 4] + buildtime[12, 5];
   sumbuildtime[12, 6] = sumbuildtime[12, 5] + buildtime[12, 6];
   sumbuildtime[12, 7] = sumbuildtime[12, 6] + buildtime[12, 7];
   sumbuildtime[12, 8] = sumbuildtime[12, 7] + buildtime[12, 8];
   sumbuildtime[12, 9] = sumbuildtime[12, 8] + buildtime[12, 9];
   sumbuildtime[12, 10] = sumbuildtime[12, 9] + buildtime[12, 10];
   //Short Range Blast Tower
   sumbuildtime[13, 1] = buildtime[13,1];
   sumbuildtime[13, 2] = sumbuildtime[13, 1] + buildtime[13, 2];
   sumbuildtime[13, 3] = sumbuildtime[13, 2] + buildtime[13, 3];
   sumbuildtime[13, 4] = sumbuildtime[13, 3] + buildtime[13, 4];
   sumbuildtime[13, 5] = sumbuildtime[13, 4] + buildtime[13, 5];
   sumbuildtime[13, 6] = sumbuildtime[13, 5] + buildtime[13, 6];
   sumbuildtime[13, 7] = sumbuildtime[13, 6] + buildtime[13, 7];
   sumbuildtime[13, 8] = sumbuildtime[13, 7] + buildtime[13, 8];
   sumbuildtime[13, 9] = sumbuildtime[13, 8] + buildtime[13, 9];
   sumbuildtime[13, 10] = sumbuildtime[13, 9] + buildtime[13, 10];
   //Inferno Tower
   sumbuildtime[14, 1] = buildtime[14,1];
   sumbuildtime[14, 2] = sumbuildtime[14, 1] + buildtime[14, 2];
   sumbuildtime[14, 3] = sumbuildtime[14, 2] + buildtime[14, 3];
   sumbuildtime[14, 4] = sumbuildtime[14, 3] + buildtime[14, 4];
   sumbuildtime[14, 5] = sumbuildtime[14, 4] + buildtime[14, 5];
   sumbuildtime[14, 6] = sumbuildtime[14, 5] + buildtime[14, 6];
   sumbuildtime[14, 7] = sumbuildtime[14, 6] + buildtime[14, 7];
   sumbuildtime[14, 8] = sumbuildtime[14, 7] + buildtime[14, 8];
   sumbuildtime[14, 9] = sumbuildtime[14, 8] + buildtime[14, 9];
   sumbuildtime[14, 10] = sumbuildtime[14, 9] + buildtime[14, 10];
   //Healing Tower
   sumbuildtime[15, 1] = buildtime[15,1];
   sumbuildtime[15, 2] = sumbuildtime[15, 1] + buildtime[15, 2];
   sumbuildtime[15, 3] = sumbuildtime[15, 2] + buildtime[15, 3];
   sumbuildtime[15, 4] = sumbuildtime[15, 3] + buildtime[15, 4];
   sumbuildtime[15, 5] = sumbuildtime[15, 4] + buildtime[15, 5];
   sumbuildtime[15, 6] = sumbuildtime[15, 5] + buildtime[15, 6];
   sumbuildtime[15, 7] = sumbuildtime[15, 6] + buildtime[15, 7];
   sumbuildtime[15, 8] = sumbuildtime[15, 7] + buildtime[15, 8];
   sumbuildtime[15, 9] = sumbuildtime[15, 8] + buildtime[15, 9];
   sumbuildtime[15, 10] = sumbuildtime[15, 9] + buildtime[15, 10];
   
   
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store cumulative statistics
    //wood costs
    //builder
   sumwoodcost[0, 1] = woodcost[0,1];
   sumwoodcost[0, 2] = sumwoodcost[0, 1] + woodcost[0, 2];
   sumwoodcost[0, 3] = sumwoodcost[0, 2] + woodcost[0, 3];
   sumwoodcost[0, 4] = sumwoodcost[0, 3] + woodcost[0, 4];
   sumwoodcost[0, 5] = sumwoodcost[0, 4] + woodcost[0, 5];
   sumwoodcost[0, 6] = sumwoodcost[0, 5] + woodcost[0, 6];
   sumwoodcost[0, 7] = sumwoodcost[0, 6] + woodcost[0, 7];
   sumwoodcost[0, 8] = sumwoodcost[0, 7] + woodcost[0, 8];
   sumwoodcost[0, 9] = sumwoodcost[0, 8] + woodcost[0, 9];
   sumwoodcost[0, 10] = sumwoodcost[0, 9] + woodcost[0, 10];
   
   //harvester
   sumwoodcost[1, 1] = woodcost[1,1];
   sumwoodcost[1, 2] = sumwoodcost[1, 1] + woodcost[1, 2];
   sumwoodcost[1, 3] = sumwoodcost[1, 2] + woodcost[1, 3];
   sumwoodcost[1, 4] = sumwoodcost[1, 3] + woodcost[1, 4];
   sumwoodcost[1, 5] = sumwoodcost[1, 4] + woodcost[1, 5];
   sumwoodcost[1, 6] = sumwoodcost[1, 5] + woodcost[1, 6];
   sumwoodcost[1, 7] = sumwoodcost[1, 6] + woodcost[1, 7];
   sumwoodcost[1, 8] = sumwoodcost[1, 7] + woodcost[1, 8];
   sumwoodcost[1, 9] = sumwoodcost[1, 8] + woodcost[1, 9];
   sumwoodcost[1, 10] = sumwoodcost[1, 9] + woodcost[1, 10];
   
   //fighter
   sumwoodcost[2, 1] = woodcost[2,1];
   sumwoodcost[2, 2] = sumwoodcost[2, 1] + woodcost[2, 2];
   sumwoodcost[2, 3] = sumwoodcost[2, 2] + woodcost[2, 3];
   sumwoodcost[2, 4] = sumwoodcost[2, 3] + woodcost[2, 4];
   sumwoodcost[2, 5] = sumwoodcost[2, 4] + woodcost[2, 5];
   sumwoodcost[2, 6] = sumwoodcost[2, 5] + woodcost[2, 6];
   sumwoodcost[2, 7] = sumwoodcost[2, 6] + woodcost[2, 7];
   sumwoodcost[2, 8] = sumwoodcost[2, 7] + woodcost[2, 8];
   sumwoodcost[2, 9] = sumwoodcost[2, 8] + woodcost[2, 9];
   sumwoodcost[2, 10] = sumwoodcost[2, 9] + woodcost[2, 10];
   //HQ Building 
   sumwoodcost[4, 1] = woodcost[4,1];
   sumwoodcost[4, 2] = sumwoodcost[4, 1] + woodcost[4, 2];
   sumwoodcost[4, 3] = sumwoodcost[4, 2] + woodcost[4, 3];
   sumwoodcost[4, 4] = sumwoodcost[4, 3] + woodcost[4, 4];
   sumwoodcost[4, 5] = sumwoodcost[4, 4] + woodcost[4, 5];
   sumwoodcost[4, 6] = sumwoodcost[4, 5] + woodcost[4, 6];
   sumwoodcost[4, 7] = sumwoodcost[4, 6] + woodcost[4, 7];
   sumwoodcost[4, 8] = sumwoodcost[4, 7] + woodcost[4, 8];
   sumwoodcost[4, 9] = sumwoodcost[4, 8] + woodcost[4, 9];
   sumwoodcost[4, 10] = sumwoodcost[4, 9] + woodcost[4, 10];
   //Fighter Barracks
   sumwoodcost[5, 1] = woodcost[5,1];
   sumwoodcost[5, 2] = sumwoodcost[5, 1] + woodcost[5, 2];
   sumwoodcost[5, 3] = sumwoodcost[5, 2] + woodcost[5, 3];
   sumwoodcost[5, 4] = sumwoodcost[5, 3] + woodcost[5, 4];
   sumwoodcost[5, 5] = sumwoodcost[5, 4] + woodcost[5, 5];
   sumwoodcost[5, 6] = sumwoodcost[5, 5] + woodcost[5, 6];
   sumwoodcost[5, 7] = sumwoodcost[5, 6] + woodcost[5, 7];
   sumwoodcost[5, 8] = sumwoodcost[5, 7] + woodcost[5, 8];
   sumwoodcost[5, 9] = sumwoodcost[5, 8] + woodcost[5, 9];
   sumwoodcost[5, 10] = sumwoodcost[5, 9] + woodcost[5, 10];
   //Fighter Enhancer
   sumwoodcost[6, 1] = woodcost[6,1];
   sumwoodcost[6, 2] = sumwoodcost[6, 1] + woodcost[6, 2];
   sumwoodcost[6, 3] = sumwoodcost[6, 2] + woodcost[6, 3];
   sumwoodcost[6, 4] = sumwoodcost[6, 3] + woodcost[6, 4];
   sumwoodcost[6, 5] = sumwoodcost[6, 4] + woodcost[6, 5];
   sumwoodcost[6, 6] = sumwoodcost[6, 5] + woodcost[6, 6];
   sumwoodcost[6, 7] = sumwoodcost[6, 6] + woodcost[6, 7];
   sumwoodcost[6, 8] = sumwoodcost[6, 7] + woodcost[6, 8];
   sumwoodcost[6, 9] = sumwoodcost[6, 8] + woodcost[6, 9];
   sumwoodcost[6, 10] = sumwoodcost[6, 9] + woodcost[6, 10];
   //Worker Enhancer
   sumwoodcost[7, 1] = woodcost[7,1];
   sumwoodcost[7, 2] = sumwoodcost[7, 1] + woodcost[7, 2];
   sumwoodcost[7, 3] = sumwoodcost[7, 2] + woodcost[7, 3];
   sumwoodcost[7, 4] = sumwoodcost[7, 3] + woodcost[7, 4];
   sumwoodcost[7, 5] = sumwoodcost[7, 4] + woodcost[7, 5];
   sumwoodcost[7, 6] = sumwoodcost[7, 5] + woodcost[7, 6];
   sumwoodcost[7, 7] = sumwoodcost[7, 6] + woodcost[7, 7];
   sumwoodcost[7, 8] = sumwoodcost[7, 7] + woodcost[7, 8];
   sumwoodcost[7, 9] = sumwoodcost[7, 8] + woodcost[7, 9];
   sumwoodcost[7, 10] = sumwoodcost[7, 9] + woodcost[7, 10];
   //Generator
   sumwoodcost[8, 1] = woodcost[8,1];
   sumwoodcost[8, 2] = sumwoodcost[8, 1] + woodcost[8, 2];
   sumwoodcost[8, 3] = sumwoodcost[8, 2] + woodcost[8, 3];
   sumwoodcost[8, 4] = sumwoodcost[8, 3] + woodcost[8, 4];
   sumwoodcost[8, 5] = sumwoodcost[8, 4] + woodcost[8, 5];
   sumwoodcost[8, 6] = sumwoodcost[8, 5] + woodcost[8, 6];
   sumwoodcost[8, 7] = sumwoodcost[8, 6] + woodcost[8, 7];
   sumwoodcost[8, 8] = sumwoodcost[8, 7] + woodcost[8, 8];
   sumwoodcost[8, 9] = sumwoodcost[8, 8] + woodcost[8, 9];
   sumwoodcost[8, 10] = sumwoodcost[8, 9] + woodcost[8, 10];
   //Defense Tower
   sumwoodcost[10, 1] = woodcost[10,1];
   sumwoodcost[10, 2] = sumwoodcost[10, 1] + woodcost[10, 2];
   sumwoodcost[10, 3] = sumwoodcost[10, 2] + woodcost[10, 3];
   sumwoodcost[10, 4] = sumwoodcost[10, 3] + woodcost[10, 4];
   sumwoodcost[10, 5] = sumwoodcost[10, 4] + woodcost[10, 5];
   sumwoodcost[10, 6] = sumwoodcost[10, 5] + woodcost[10, 6];
   sumwoodcost[10, 7] = sumwoodcost[10, 6] + woodcost[10, 7];
   sumwoodcost[10, 8] = sumwoodcost[10, 7] + woodcost[10, 8];
   sumwoodcost[10, 9] = sumwoodcost[10, 8] + woodcost[10, 9];
   sumwoodcost[10, 10] = sumwoodcost[10, 9] + woodcost[10, 10];
   //Long Range Tower
   sumwoodcost[11, 1] = woodcost[11,1];
   sumwoodcost[11, 2] = sumwoodcost[11, 1] + woodcost[11, 2];
   sumwoodcost[11, 3] = sumwoodcost[11, 2] + woodcost[11, 3];
   sumwoodcost[11, 4] = sumwoodcost[11, 3] + woodcost[11, 4];
   sumwoodcost[11, 5] = sumwoodcost[11, 4] + woodcost[11, 5];
   sumwoodcost[11, 6] = sumwoodcost[11, 5] + woodcost[11, 6];
   sumwoodcost[11, 7] = sumwoodcost[11, 6] + woodcost[11, 7];
   sumwoodcost[11, 8] = sumwoodcost[11, 7] + woodcost[11, 8];
   sumwoodcost[11, 9] = sumwoodcost[11, 8] + woodcost[11, 9];
   sumwoodcost[11, 10] = sumwoodcost[11, 9] + woodcost[11, 10];
   //Short Range Tower
   sumwoodcost[12, 1] = woodcost[12,1];
   sumwoodcost[12, 2] = sumwoodcost[12, 1] + woodcost[12, 2];
   sumwoodcost[12, 3] = sumwoodcost[12, 2] + woodcost[12, 3];
   sumwoodcost[12, 4] = sumwoodcost[12, 3] + woodcost[12, 4];
   sumwoodcost[12, 5] = sumwoodcost[12, 4] + woodcost[12, 5];
   sumwoodcost[12, 6] = sumwoodcost[12, 5] + woodcost[12, 6];
   sumwoodcost[12, 7] = sumwoodcost[12, 6] + woodcost[12, 7];
   sumwoodcost[12, 8] = sumwoodcost[12, 7] + woodcost[12, 8];
   sumwoodcost[12, 9] = sumwoodcost[12, 8] + woodcost[12, 9];
   sumwoodcost[12, 10] = sumwoodcost[12, 9] + woodcost[12, 10];
   //Short Range Blast Tower
   sumwoodcost[13, 1] = woodcost[13,1];
   sumwoodcost[13, 2] = sumwoodcost[13, 1] + woodcost[13, 2];
   sumwoodcost[13, 3] = sumwoodcost[13, 2] + woodcost[13, 3];
   sumwoodcost[13, 4] = sumwoodcost[13, 3] + woodcost[13, 4];
   sumwoodcost[13, 5] = sumwoodcost[13, 4] + woodcost[13, 5];
   sumwoodcost[13, 6] = sumwoodcost[13, 5] + woodcost[13, 6];
   sumwoodcost[13, 7] = sumwoodcost[13, 6] + woodcost[13, 7];
   sumwoodcost[13, 8] = sumwoodcost[13, 7] + woodcost[13, 8];
   sumwoodcost[13, 9] = sumwoodcost[13, 8] + woodcost[13, 9];
   sumwoodcost[13, 10] = sumwoodcost[13, 9] + woodcost[13, 10];
   //Inferno Tower
   sumwoodcost[14, 1] = woodcost[14,1];
   sumwoodcost[14, 2] = sumwoodcost[14, 1] + woodcost[14, 2];
   sumwoodcost[14, 3] = sumwoodcost[14, 2] + woodcost[14, 3];
   sumwoodcost[14, 4] = sumwoodcost[14, 3] + woodcost[14, 4];
   sumwoodcost[14, 5] = sumwoodcost[14, 4] + woodcost[14, 5];
   sumwoodcost[14, 6] = sumwoodcost[14, 5] + woodcost[14, 6];
   sumwoodcost[14, 7] = sumwoodcost[14, 6] + woodcost[14, 7];
   sumwoodcost[14, 8] = sumwoodcost[14, 7] + woodcost[14, 8];
   sumwoodcost[14, 9] = sumwoodcost[14, 8] + woodcost[14, 9];
   sumwoodcost[14, 10] = sumwoodcost[14, 9] + woodcost[14, 10];
   //Healing Tower
   sumwoodcost[15, 1] = woodcost[15,1];
   sumwoodcost[15, 2] = sumwoodcost[15, 1] + woodcost[15, 2];
   sumwoodcost[15, 3] = sumwoodcost[15, 2] + woodcost[15, 3];
   sumwoodcost[15, 4] = sumwoodcost[15, 3] + woodcost[15, 4];
   sumwoodcost[15, 5] = sumwoodcost[15, 4] + woodcost[15, 5];
   sumwoodcost[15, 6] = sumwoodcost[15, 5] + woodcost[15, 6];
   sumwoodcost[15, 7] = sumwoodcost[15, 6] + woodcost[15, 7];
   sumwoodcost[15, 8] = sumwoodcost[15, 7] + woodcost[15, 8];
   sumwoodcost[15, 9] = sumwoodcost[15, 8] + woodcost[15, 9];
   sumwoodcost[15, 10] = sumwoodcost[15, 9] + woodcost[15, 10];
   
   
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store cumulative statistics
    //ore costs
    //builder
   sumorecost[0, 1] = orecost[0,1];
   sumorecost[0, 2] = sumorecost[0, 1] + orecost[0, 2];
   sumorecost[0, 3] = sumorecost[0, 2] + orecost[0, 3];
   sumorecost[0, 4] = sumorecost[0, 3] + orecost[0, 4];
   sumorecost[0, 5] = sumorecost[0, 4] + orecost[0, 5];
   sumorecost[0, 6] = sumorecost[0, 5] + orecost[0, 6];
   sumorecost[0, 7] = sumorecost[0, 6] + orecost[0, 7];
   sumorecost[0, 8] = sumorecost[0, 7] + orecost[0, 8];
   sumorecost[0, 9] = sumorecost[0, 8] + orecost[0, 9];
   sumorecost[0, 10] = sumorecost[0, 9] + orecost[0, 10];
   
   //harvester
   sumorecost[1, 1] = orecost[1,1];
   sumorecost[1, 2] = sumorecost[1, 1] + orecost[1, 2];
   sumorecost[1, 3] = sumorecost[1, 2] + orecost[1, 3];
   sumorecost[1, 4] = sumorecost[1, 3] + orecost[1, 4];
   sumorecost[1, 5] = sumorecost[1, 4] + orecost[1, 5];
   sumorecost[1, 6] = sumorecost[1, 5] + orecost[1, 6];
   sumorecost[1, 7] = sumorecost[1, 6] + orecost[1, 7];
   sumorecost[1, 8] = sumorecost[1, 7] + orecost[1, 8];
   sumorecost[1, 9] = sumorecost[1, 8] + orecost[1, 9];
   sumorecost[1, 10] = sumorecost[1, 9] + orecost[1, 10];
   
   //fighter
   sumorecost[2, 1] = orecost[2,1];
   sumorecost[2, 2] = sumorecost[2, 1] + orecost[2, 2];
   sumorecost[2, 3] = sumorecost[2, 2] + orecost[2, 3];
   sumorecost[2, 4] = sumorecost[2, 3] + orecost[2, 4];
   sumorecost[2, 5] = sumorecost[2, 4] + orecost[2, 5];
   sumorecost[2, 6] = sumorecost[2, 5] + orecost[2, 6];
   sumorecost[2, 7] = sumorecost[2, 6] + orecost[2, 7];
   sumorecost[2, 8] = sumorecost[2, 7] + orecost[2, 8];
   sumorecost[2, 9] = sumorecost[2, 8] + orecost[2, 9];
   sumorecost[2, 10] = sumorecost[2, 9] + orecost[2, 10];
   //HQ Building 
   sumorecost[4, 1] = orecost[4,1];
   sumorecost[4, 2] = sumorecost[4, 1] + orecost[4, 2];
   sumorecost[4, 3] = sumorecost[4, 2] + orecost[4, 3];
   sumorecost[4, 4] = sumorecost[4, 3] + orecost[4, 4];
   sumorecost[4, 5] = sumorecost[4, 4] + orecost[4, 5];
   sumorecost[4, 6] = sumorecost[4, 5] + orecost[4, 6];
   sumorecost[4, 7] = sumorecost[4, 6] + orecost[4, 7];
   sumorecost[4, 8] = sumorecost[4, 7] + orecost[4, 8];
   sumorecost[4, 9] = sumorecost[4, 8] + orecost[4, 9];
   sumorecost[4, 10] = sumorecost[4, 9] + orecost[4, 10];
   //Fighter Barracks
   sumorecost[5, 1] = orecost[5,1];
   sumorecost[5, 2] = sumorecost[5, 1] + orecost[5, 2];
   sumorecost[5, 3] = sumorecost[5, 2] + orecost[5, 3];
   sumorecost[5, 4] = sumorecost[5, 3] + orecost[5, 4];
   sumorecost[5, 5] = sumorecost[5, 4] + orecost[5, 5];
   sumorecost[5, 6] = sumorecost[5, 5] + orecost[5, 6];
   sumorecost[5, 7] = sumorecost[5, 6] + orecost[5, 7];
   sumorecost[5, 8] = sumorecost[5, 7] + orecost[5, 8];
   sumorecost[5, 9] = sumorecost[5, 8] + orecost[5, 9];
   sumorecost[5, 10] = sumorecost[5, 9] + orecost[5, 10];
   //Fighter Enhancer
   sumorecost[6, 1] = orecost[6,1];
   sumorecost[6, 2] = sumorecost[6, 1] + orecost[6, 2];
   sumorecost[6, 3] = sumorecost[6, 2] + orecost[6, 3];
   sumorecost[6, 4] = sumorecost[6, 3] + orecost[6, 4];
   sumorecost[6, 5] = sumorecost[6, 4] + orecost[6, 5];
   sumorecost[6, 6] = sumorecost[6, 5] + orecost[6, 6];
   sumorecost[6, 7] = sumorecost[6, 6] + orecost[6, 7];
   sumorecost[6, 8] = sumorecost[6, 7] + orecost[6, 8];
   sumorecost[6, 9] = sumorecost[6, 8] + orecost[6, 9];
   sumorecost[6, 10] = sumorecost[6, 9] + orecost[6, 10];
   //Worker Enhancer
   sumorecost[7, 1] = orecost[7,1];
   sumorecost[7, 2] = sumorecost[7, 1] + orecost[7, 2];
   sumorecost[7, 3] = sumorecost[7, 2] + orecost[7, 3];
   sumorecost[7, 4] = sumorecost[7, 3] + orecost[7, 4];
   sumorecost[7, 5] = sumorecost[7, 4] + orecost[7, 5];
   sumorecost[7, 6] = sumorecost[7, 5] + orecost[7, 6];
   sumorecost[7, 7] = sumorecost[7, 6] + orecost[7, 7];
   sumorecost[7, 8] = sumorecost[7, 7] + orecost[7, 8];
   sumorecost[7, 9] = sumorecost[7, 8] + orecost[7, 9];
   sumorecost[7, 10] = sumorecost[7, 9] + orecost[7, 10];
   //Generator
   sumorecost[8, 1] = orecost[8,1];
   sumorecost[8, 2] = sumorecost[8, 1] + orecost[8, 2];
   sumorecost[8, 3] = sumorecost[8, 2] + orecost[8, 3];
   sumorecost[8, 4] = sumorecost[8, 3] + orecost[8, 4];
   sumorecost[8, 5] = sumorecost[8, 4] + orecost[8, 5];
   sumorecost[8, 6] = sumorecost[8, 5] + orecost[8, 6];
   sumorecost[8, 7] = sumorecost[8, 6] + orecost[8, 7];
   sumorecost[8, 8] = sumorecost[8, 7] + orecost[8, 8];
   sumorecost[8, 9] = sumorecost[8, 8] + orecost[8, 9];
   sumorecost[8, 10] = sumorecost[8, 9] + orecost[8, 10];
   //Defense Tower
   sumorecost[10, 1] = orecost[10,1];
   sumorecost[10, 2] = sumorecost[10, 1] + orecost[10, 2];
   sumorecost[10, 3] = sumorecost[10, 2] + orecost[10, 3];
   sumorecost[10, 4] = sumorecost[10, 3] + orecost[10, 4];
   sumorecost[10, 5] = sumorecost[10, 4] + orecost[10, 5];
   sumorecost[10, 6] = sumorecost[10, 5] + orecost[10, 6];
   sumorecost[10, 7] = sumorecost[10, 6] + orecost[10, 7];
   sumorecost[10, 8] = sumorecost[10, 7] + orecost[10, 8];
   sumorecost[10, 9] = sumorecost[10, 8] + orecost[10, 9];
   sumorecost[10, 10] = sumorecost[10, 9] + orecost[10, 10];
   //Long Range Tower
   sumorecost[11, 1] = orecost[11,1];
   sumorecost[11, 2] = sumorecost[11, 1] + orecost[11, 2];
   sumorecost[11, 3] = sumorecost[11, 2] + orecost[11, 3];
   sumorecost[11, 4] = sumorecost[11, 3] + orecost[11, 4];
   sumorecost[11, 5] = sumorecost[11, 4] + orecost[11, 5];
   sumorecost[11, 6] = sumorecost[11, 5] + orecost[11, 6];
   sumorecost[11, 7] = sumorecost[11, 6] + orecost[11, 7];
   sumorecost[11, 8] = sumorecost[11, 7] + orecost[11, 8];
   sumorecost[11, 9] = sumorecost[11, 8] + orecost[11, 9];
   sumorecost[11, 10] = sumorecost[11, 9] + orecost[11, 10];
   //Short Range Tower
   sumorecost[12, 1] = orecost[12,1];
   sumorecost[12, 2] = sumorecost[12, 1] + orecost[12, 2];
   sumorecost[12, 3] = sumorecost[12, 2] + orecost[12, 3];
   sumorecost[12, 4] = sumorecost[12, 3] + orecost[12, 4];
   sumorecost[12, 5] = sumorecost[12, 4] + orecost[12, 5];
   sumorecost[12, 6] = sumorecost[12, 5] + orecost[12, 6];
   sumorecost[12, 7] = sumorecost[12, 6] + orecost[12, 7];
   sumorecost[12, 8] = sumorecost[12, 7] + orecost[12, 8];
   sumorecost[12, 9] = sumorecost[12, 8] + orecost[12, 9];
   sumorecost[12, 10] = sumorecost[12, 9] + orecost[12, 10];
   //Short Range Blast Tower
   sumorecost[13, 1] = orecost[13,1];
   sumorecost[13, 2] = sumorecost[13, 1] + orecost[13, 2];
   sumorecost[13, 3] = sumorecost[13, 2] + orecost[13, 3];
   sumorecost[13, 4] = sumorecost[13, 3] + orecost[13, 4];
   sumorecost[13, 5] = sumorecost[13, 4] + orecost[13, 5];
   sumorecost[13, 6] = sumorecost[13, 5] + orecost[13, 6];
   sumorecost[13, 7] = sumorecost[13, 6] + orecost[13, 7];
   sumorecost[13, 8] = sumorecost[13, 7] + orecost[13, 8];
   sumorecost[13, 9] = sumorecost[13, 8] + orecost[13, 9];
   sumorecost[13, 10] = sumorecost[13, 9] + orecost[13, 10];
   //Inferno Tower
   sumorecost[14, 1] = orecost[14,1];
   sumorecost[14, 2] = sumorecost[14, 1] + orecost[14, 2];
   sumorecost[14, 3] = sumorecost[14, 2] + orecost[14, 3];
   sumorecost[14, 4] = sumorecost[14, 3] + orecost[14, 4];
   sumorecost[14, 5] = sumorecost[14, 4] + orecost[14, 5];
   sumorecost[14, 6] = sumorecost[14, 5] + orecost[14, 6];
   sumorecost[14, 7] = sumorecost[14, 6] + orecost[14, 7];
   sumorecost[14, 8] = sumorecost[14, 7] + orecost[14, 8];
   sumorecost[14, 9] = sumorecost[14, 8] + orecost[14, 9];
   sumorecost[14, 10] = sumorecost[14, 9] + orecost[14, 10];
   //Healing Tower
   sumorecost[15, 1] = orecost[15,1];
   sumorecost[15, 2] = sumorecost[15, 1] + orecost[15, 2];
   sumorecost[15, 3] = sumorecost[15, 2] + orecost[15, 3];
   sumorecost[15, 4] = sumorecost[15, 3] + orecost[15, 4];
   sumorecost[15, 5] = sumorecost[15, 4] + orecost[15, 5];
   sumorecost[15, 6] = sumorecost[15, 5] + orecost[15, 6];
   sumorecost[15, 7] = sumorecost[15, 6] + orecost[15, 7];
   sumorecost[15, 8] = sumorecost[15, 7] + orecost[15, 8];
   sumorecost[15, 9] = sumorecost[15, 8] + orecost[15, 9];
   sumorecost[15, 10] = sumorecost[15, 9] + orecost[15, 10];
   
   
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store cumulative statistics
    //essence costs
    //builder
   sumessencecost[0, 1] = essencecost[0,1];
   sumessencecost[0, 2] = sumessencecost[0, 1] + essencecost[0, 2];
   sumessencecost[0, 3] = sumessencecost[0, 2] + essencecost[0, 3];
   sumessencecost[0, 4] = sumessencecost[0, 3] + essencecost[0, 4];
   sumessencecost[0, 5] = sumessencecost[0, 4] + essencecost[0, 5];
   sumessencecost[0, 6] = sumessencecost[0, 5] + essencecost[0, 6];
   sumessencecost[0, 7] = sumessencecost[0, 6] + essencecost[0, 7];
   sumessencecost[0, 8] = sumessencecost[0, 7] + essencecost[0, 8];
   sumessencecost[0, 9] = sumessencecost[0, 8] + essencecost[0, 9];
   sumessencecost[0, 10] = sumessencecost[0, 9] + essencecost[0, 10];
   
   //harvester
   sumessencecost[1, 1] = essencecost[1,1];
   sumessencecost[1, 2] = sumessencecost[1, 1] + essencecost[1, 2];
   sumessencecost[1, 3] = sumessencecost[1, 2] + essencecost[1, 3];
   sumessencecost[1, 4] = sumessencecost[1, 3] + essencecost[1, 4];
   sumessencecost[1, 5] = sumessencecost[1, 4] + essencecost[1, 5];
   sumessencecost[1, 6] = sumessencecost[1, 5] + essencecost[1, 6];
   sumessencecost[1, 7] = sumessencecost[1, 6] + essencecost[1, 7];
   sumessencecost[1, 8] = sumessencecost[1, 7] + essencecost[1, 8];
   sumessencecost[1, 9] = sumessencecost[1, 8] + essencecost[1, 9];
   sumessencecost[1, 10] = sumessencecost[1, 9] + essencecost[1, 10];
   
   //fighter
   sumessencecost[2, 1] = essencecost[2,1];
   sumessencecost[2, 2] = sumessencecost[2, 1] + essencecost[2, 2];
   sumessencecost[2, 3] = sumessencecost[2, 2] + essencecost[2, 3];
   sumessencecost[2, 4] = sumessencecost[2, 3] + essencecost[2, 4];
   sumessencecost[2, 5] = sumessencecost[2, 4] + essencecost[2, 5];
   sumessencecost[2, 6] = sumessencecost[2, 5] + essencecost[2, 6];
   sumessencecost[2, 7] = sumessencecost[2, 6] + essencecost[2, 7];
   sumessencecost[2, 8] = sumessencecost[2, 7] + essencecost[2, 8];
   sumessencecost[2, 9] = sumessencecost[2, 8] + essencecost[2, 9];
   sumessencecost[2, 10] = sumessencecost[2, 9] + essencecost[2, 10];
   //HQ Building 
   sumessencecost[4, 1] = essencecost[4,1];
   sumessencecost[4, 2] = sumessencecost[4, 1] + essencecost[4, 2];
   sumessencecost[4, 3] = sumessencecost[4, 2] + essencecost[4, 3];
   sumessencecost[4, 4] = sumessencecost[4, 3] + essencecost[4, 4];
   sumessencecost[4, 5] = sumessencecost[4, 4] + essencecost[4, 5];
   sumessencecost[4, 6] = sumessencecost[4, 5] + essencecost[4, 6];
   sumessencecost[4, 7] = sumessencecost[4, 6] + essencecost[4, 7];
   sumessencecost[4, 8] = sumessencecost[4, 7] + essencecost[4, 8];
   sumessencecost[4, 9] = sumessencecost[4, 8] + essencecost[4, 9];
   sumessencecost[4, 10] = sumessencecost[4, 9] + essencecost[4, 10];
   //Fighter Barracks
   sumessencecost[5, 1] = essencecost[5,1];
   sumessencecost[5, 2] = sumessencecost[5, 1] + essencecost[5, 2];
   sumessencecost[5, 3] = sumessencecost[5, 2] + essencecost[5, 3];
   sumessencecost[5, 4] = sumessencecost[5, 3] + essencecost[5, 4];
   sumessencecost[5, 5] = sumessencecost[5, 4] + essencecost[5, 5];
   sumessencecost[5, 6] = sumessencecost[5, 5] + essencecost[5, 6];
   sumessencecost[5, 7] = sumessencecost[5, 6] + essencecost[5, 7];
   sumessencecost[5, 8] = sumessencecost[5, 7] + essencecost[5, 8];
   sumessencecost[5, 9] = sumessencecost[5, 8] + essencecost[5, 9];
   sumessencecost[5, 10] = sumessencecost[5, 9] + essencecost[5, 10];
   //Fighter Enhancer
   sumessencecost[6, 1] = essencecost[6,1];
   sumessencecost[6, 2] = sumessencecost[6, 1] + essencecost[6, 2];
   sumessencecost[6, 3] = sumessencecost[6, 2] + essencecost[6, 3];
   sumessencecost[6, 4] = sumessencecost[6, 3] + essencecost[6, 4];
   sumessencecost[6, 5] = sumessencecost[6, 4] + essencecost[6, 5];
   sumessencecost[6, 6] = sumessencecost[6, 5] + essencecost[6, 6];
   sumessencecost[6, 7] = sumessencecost[6, 6] + essencecost[6, 7];
   sumessencecost[6, 8] = sumessencecost[6, 7] + essencecost[6, 8];
   sumessencecost[6, 9] = sumessencecost[6, 8] + essencecost[6, 9];
   sumessencecost[6, 10] = sumessencecost[6, 9] + essencecost[6, 10];
   //Worker Enhancer
   sumessencecost[7, 1] = essencecost[7,1];
   sumessencecost[7, 2] = sumessencecost[7, 1] + essencecost[7, 2];
   sumessencecost[7, 3] = sumessencecost[7, 2] + essencecost[7, 3];
   sumessencecost[7, 4] = sumessencecost[7, 3] + essencecost[7, 4];
   sumessencecost[7, 5] = sumessencecost[7, 4] + essencecost[7, 5];
   sumessencecost[7, 6] = sumessencecost[7, 5] + essencecost[7, 6];
   sumessencecost[7, 7] = sumessencecost[7, 6] + essencecost[7, 7];
   sumessencecost[7, 8] = sumessencecost[7, 7] + essencecost[7, 8];
   sumessencecost[7, 9] = sumessencecost[7, 8] + essencecost[7, 9];
   sumessencecost[7, 10] = sumessencecost[7, 9] + essencecost[7, 10];
   //Generator
   sumessencecost[8, 1] = essencecost[8,1];
   sumessencecost[8, 2] = sumessencecost[8, 1] + essencecost[8, 2];
   sumessencecost[8, 3] = sumessencecost[8, 2] + essencecost[8, 3];
   sumessencecost[8, 4] = sumessencecost[8, 3] + essencecost[8, 4];
   sumessencecost[8, 5] = sumessencecost[8, 4] + essencecost[8, 5];
   sumessencecost[8, 6] = sumessencecost[8, 5] + essencecost[8, 6];
   sumessencecost[8, 7] = sumessencecost[8, 6] + essencecost[8, 7];
   sumessencecost[8, 8] = sumessencecost[8, 7] + essencecost[8, 8];
   sumessencecost[8, 9] = sumessencecost[8, 8] + essencecost[8, 9];
   sumessencecost[8, 10] = sumessencecost[8, 9] + essencecost[8, 10];
   //Defense Tower
   sumessencecost[10, 1] = essencecost[10,1];
   sumessencecost[10, 2] = sumessencecost[10, 1] + essencecost[10, 2];
   sumessencecost[10, 3] = sumessencecost[10, 2] + essencecost[10, 3];
   sumessencecost[10, 4] = sumessencecost[10, 3] + essencecost[10, 4];
   sumessencecost[10, 5] = sumessencecost[10, 4] + essencecost[10, 5];
   sumessencecost[10, 6] = sumessencecost[10, 5] + essencecost[10, 6];
   sumessencecost[10, 7] = sumessencecost[10, 6] + essencecost[10, 7];
   sumessencecost[10, 8] = sumessencecost[10, 7] + essencecost[10, 8];
   sumessencecost[10, 9] = sumessencecost[10, 8] + essencecost[10, 9];
   sumessencecost[10, 10] = sumessencecost[10, 9] + essencecost[10, 10];
   //Long Range Tower
   sumessencecost[11, 1] = essencecost[11,1];
   sumessencecost[11, 2] = sumessencecost[11, 1] + essencecost[11, 2];
   sumessencecost[11, 3] = sumessencecost[11, 2] + essencecost[11, 3];
   sumessencecost[11, 4] = sumessencecost[11, 3] + essencecost[11, 4];
   sumessencecost[11, 5] = sumessencecost[11, 4] + essencecost[11, 5];
   sumessencecost[11, 6] = sumessencecost[11, 5] + essencecost[11, 6];
   sumessencecost[11, 7] = sumessencecost[11, 6] + essencecost[11, 7];
   sumessencecost[11, 8] = sumessencecost[11, 7] + essencecost[11, 8];
   sumessencecost[11, 9] = sumessencecost[11, 8] + essencecost[11, 9];
   sumessencecost[11, 10] = sumessencecost[11, 9] + essencecost[11, 10];
   //Short Range Tower
   sumessencecost[12, 1] = essencecost[12,1];
   sumessencecost[12, 2] = sumessencecost[12, 1] + essencecost[12, 2];
   sumessencecost[12, 3] = sumessencecost[12, 2] + essencecost[12, 3];
   sumessencecost[12, 4] = sumessencecost[12, 3] + essencecost[12, 4];
   sumessencecost[12, 5] = sumessencecost[12, 4] + essencecost[12, 5];
   sumessencecost[12, 6] = sumessencecost[12, 5] + essencecost[12, 6];
   sumessencecost[12, 7] = sumessencecost[12, 6] + essencecost[12, 7];
   sumessencecost[12, 8] = sumessencecost[12, 7] + essencecost[12, 8];
   sumessencecost[12, 9] = sumessencecost[12, 8] + essencecost[12, 9];
   sumessencecost[12, 10] = sumessencecost[12, 9] + essencecost[12, 10];
   //Short Range Blast Tower
   sumessencecost[13, 1] = essencecost[13,1];
   sumessencecost[13, 2] = sumessencecost[13, 1] + essencecost[13, 2];
   sumessencecost[13, 3] = sumessencecost[13, 2] + essencecost[13, 3];
   sumessencecost[13, 4] = sumessencecost[13, 3] + essencecost[13, 4];
   sumessencecost[13, 5] = sumessencecost[13, 4] + essencecost[13, 5];
   sumessencecost[13, 6] = sumessencecost[13, 5] + essencecost[13, 6];
   sumessencecost[13, 7] = sumessencecost[13, 6] + essencecost[13, 7];
   sumessencecost[13, 8] = sumessencecost[13, 7] + essencecost[13, 8];
   sumessencecost[13, 9] = sumessencecost[13, 8] + essencecost[13, 9];
   sumessencecost[13, 10] = sumessencecost[13, 9] + essencecost[13, 10];
   //Inferno Tower
   sumessencecost[14, 1] = essencecost[14,1];
   sumessencecost[14, 2] = sumessencecost[14, 1] + essencecost[14, 2];
   sumessencecost[14, 3] = sumessencecost[14, 2] + essencecost[14, 3];
   sumessencecost[14, 4] = sumessencecost[14, 3] + essencecost[14, 4];
   sumessencecost[14, 5] = sumessencecost[14, 4] + essencecost[14, 5];
   sumessencecost[14, 6] = sumessencecost[14, 5] + essencecost[14, 6];
   sumessencecost[14, 7] = sumessencecost[14, 6] + essencecost[14, 7];
   sumessencecost[14, 8] = sumessencecost[14, 7] + essencecost[14, 8];
   sumessencecost[14, 9] = sumessencecost[14, 8] + essencecost[14, 9];
   sumessencecost[14, 10] = sumessencecost[14, 9] + essencecost[14, 10];
   //Healing Tower
   sumessencecost[15, 1] = essencecost[15,1];
   sumessencecost[15, 2] = sumessencecost[15, 1] + essencecost[15, 2];
   sumessencecost[15, 3] = sumessencecost[15, 2] + essencecost[15, 3];
   sumessencecost[15, 4] = sumessencecost[15, 3] + essencecost[15, 4];
   sumessencecost[15, 5] = sumessencecost[15, 4] + essencecost[15, 5];
   sumessencecost[15, 6] = sumessencecost[15, 5] + essencecost[15, 6];
   sumessencecost[15, 7] = sumessencecost[15, 6] + essencecost[15, 7];
   sumessencecost[15, 8] = sumessencecost[15, 7] + essencecost[15, 8];
   sumessencecost[15, 9] = sumessencecost[15, 8] + essencecost[15, 9];
   sumessencecost[15, 10] = sumessencecost[15, 9] + essencecost[15, 10];
   
   
   
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//store cumulative statistics
    //energy costs
    //builder
   sumenergycost[0, 1] = energycost[0,1];
   sumenergycost[0, 2] = sumenergycost[0, 1] + energycost[0, 2];
   sumenergycost[0, 3] = sumenergycost[0, 2] + energycost[0, 3];
   sumenergycost[0, 4] = sumenergycost[0, 3] + energycost[0, 4];
   sumenergycost[0, 5] = sumenergycost[0, 4] + energycost[0, 5];
   sumenergycost[0, 6] = sumenergycost[0, 5] + energycost[0, 6];
   sumenergycost[0, 7] = sumenergycost[0, 6] + energycost[0, 7];
   sumenergycost[0, 8] = sumenergycost[0, 7] + energycost[0, 8];
   sumenergycost[0, 9] = sumenergycost[0, 8] + energycost[0, 9];
   sumenergycost[0, 10] = sumenergycost[0, 9] + energycost[0, 10];
   
   //harvester
   sumenergycost[1, 1] = energycost[1,1];
   sumenergycost[1, 2] = sumenergycost[1, 1] + energycost[1, 2];
   sumenergycost[1, 3] = sumenergycost[1, 2] + energycost[1, 3];
   sumenergycost[1, 4] = sumenergycost[1, 3] + energycost[1, 4];
   sumenergycost[1, 5] = sumenergycost[1, 4] + energycost[1, 5];
   sumenergycost[1, 6] = sumenergycost[1, 5] + energycost[1, 6];
   sumenergycost[1, 7] = sumenergycost[1, 6] + energycost[1, 7];
   sumenergycost[1, 8] = sumenergycost[1, 7] + energycost[1, 8];
   sumenergycost[1, 9] = sumenergycost[1, 8] + energycost[1, 9];
   sumenergycost[1, 10] = sumenergycost[1, 9] + energycost[1, 10];
   
   //fighter
   sumenergycost[2, 1] = energycost[2,1];
   sumenergycost[2, 2] = sumenergycost[2, 1] + energycost[2, 2];
   sumenergycost[2, 3] = sumenergycost[2, 2] + energycost[2, 3];
   sumenergycost[2, 4] = sumenergycost[2, 3] + energycost[2, 4];
   sumenergycost[2, 5] = sumenergycost[2, 4] + energycost[2, 5];
   sumenergycost[2, 6] = sumenergycost[2, 5] + energycost[2, 6];
   sumenergycost[2, 7] = sumenergycost[2, 6] + energycost[2, 7];
   sumenergycost[2, 8] = sumenergycost[2, 7] + energycost[2, 8];
   sumenergycost[2, 9] = sumenergycost[2, 8] + energycost[2, 9];
   sumenergycost[2, 10] = sumenergycost[2, 9] + energycost[2, 10];
   //HQ Building 
   sumenergycost[4, 1] = energycost[4,1];
   sumenergycost[4, 2] = sumenergycost[4, 1] + energycost[4, 2];
   sumenergycost[4, 3] = sumenergycost[4, 2] + energycost[4, 3];
   sumenergycost[4, 4] = sumenergycost[4, 3] + energycost[4, 4];
   sumenergycost[4, 5] = sumenergycost[4, 4] + energycost[4, 5];
   sumenergycost[4, 6] = sumenergycost[4, 5] + energycost[4, 6];
   sumenergycost[4, 7] = sumenergycost[4, 6] + energycost[4, 7];
   sumenergycost[4, 8] = sumenergycost[4, 7] + energycost[4, 8];
   sumenergycost[4, 9] = sumenergycost[4, 8] + energycost[4, 9];
   sumenergycost[4, 10] = sumenergycost[4, 9] + energycost[4, 10];
   //Fighter Barracks
   sumenergycost[5, 1] = energycost[5,1];
   sumenergycost[5, 2] = sumenergycost[5, 1] + energycost[5, 2];
   sumenergycost[5, 3] = sumenergycost[5, 2] + energycost[5, 3];
   sumenergycost[5, 4] = sumenergycost[5, 3] + energycost[5, 4];
   sumenergycost[5, 5] = sumenergycost[5, 4] + energycost[5, 5];
   sumenergycost[5, 6] = sumenergycost[5, 5] + energycost[5, 6];
   sumenergycost[5, 7] = sumenergycost[5, 6] + energycost[5, 7];
   sumenergycost[5, 8] = sumenergycost[5, 7] + energycost[5, 8];
   sumenergycost[5, 9] = sumenergycost[5, 8] + energycost[5, 9];
   sumenergycost[5, 10] = sumenergycost[5, 9] + energycost[5, 10];
   //Fighter Enhancer
   sumenergycost[6, 1] = energycost[6,1];
   sumenergycost[6, 2] = sumenergycost[6, 1] + energycost[6, 2];
   sumenergycost[6, 3] = sumenergycost[6, 2] + energycost[6, 3];
   sumenergycost[6, 4] = sumenergycost[6, 3] + energycost[6, 4];
   sumenergycost[6, 5] = sumenergycost[6, 4] + energycost[6, 5];
   sumenergycost[6, 6] = sumenergycost[6, 5] + energycost[6, 6];
   sumenergycost[6, 7] = sumenergycost[6, 6] + energycost[6, 7];
   sumenergycost[6, 8] = sumenergycost[6, 7] + energycost[6, 8];
   sumenergycost[6, 9] = sumenergycost[6, 8] + energycost[6, 9];
   sumenergycost[6, 10] = sumenergycost[6, 9] + energycost[6, 10];
   //Worker Enhancer
   sumenergycost[7, 1] = energycost[7,1];
   sumenergycost[7, 2] = sumenergycost[7, 1] + energycost[7, 2];
   sumenergycost[7, 3] = sumenergycost[7, 2] + energycost[7, 3];
   sumenergycost[7, 4] = sumenergycost[7, 3] + energycost[7, 4];
   sumenergycost[7, 5] = sumenergycost[7, 4] + energycost[7, 5];
   sumenergycost[7, 6] = sumenergycost[7, 5] + energycost[7, 6];
   sumenergycost[7, 7] = sumenergycost[7, 6] + energycost[7, 7];
   sumenergycost[7, 8] = sumenergycost[7, 7] + energycost[7, 8];
   sumenergycost[7, 9] = sumenergycost[7, 8] + energycost[7, 9];
   sumenergycost[7, 10] = sumenergycost[7, 9] + energycost[7, 10];
   //Generator
   sumenergycost[8, 1] = energycost[8,1];
   sumenergycost[8, 2] = sumenergycost[8, 1] + energycost[8, 2];
   sumenergycost[8, 3] = sumenergycost[8, 2] + energycost[8, 3];
   sumenergycost[8, 4] = sumenergycost[8, 3] + energycost[8, 4];
   sumenergycost[8, 5] = sumenergycost[8, 4] + energycost[8, 5];
   sumenergycost[8, 6] = sumenergycost[8, 5] + energycost[8, 6];
   sumenergycost[8, 7] = sumenergycost[8, 6] + energycost[8, 7];
   sumenergycost[8, 8] = sumenergycost[8, 7] + energycost[8, 8];
   sumenergycost[8, 9] = sumenergycost[8, 8] + energycost[8, 9];
   sumenergycost[8, 10] = sumenergycost[8, 9] + energycost[8, 10];
   //Defense Tower
   sumenergycost[10, 1] = energycost[10,1];
   sumenergycost[10, 2] = sumenergycost[10, 1] + energycost[10, 2];
   sumenergycost[10, 3] = sumenergycost[10, 2] + energycost[10, 3];
   sumenergycost[10, 4] = sumenergycost[10, 3] + energycost[10, 4];
   sumenergycost[10, 5] = sumenergycost[10, 4] + energycost[10, 5];
   sumenergycost[10, 6] = sumenergycost[10, 5] + energycost[10, 6];
   sumenergycost[10, 7] = sumenergycost[10, 6] + energycost[10, 7];
   sumenergycost[10, 8] = sumenergycost[10, 7] + energycost[10, 8];
   sumenergycost[10, 9] = sumenergycost[10, 8] + energycost[10, 9];
   sumenergycost[10, 10] = sumenergycost[10, 9] + energycost[10, 10];
   //Long Range Tower
   sumenergycost[11, 1] = energycost[11,1];
   sumenergycost[11, 2] = sumenergycost[11, 1] + energycost[11, 2];
   sumenergycost[11, 3] = sumenergycost[11, 2] + energycost[11, 3];
   sumenergycost[11, 4] = sumenergycost[11, 3] + energycost[11, 4];
   sumenergycost[11, 5] = sumenergycost[11, 4] + energycost[11, 5];
   sumenergycost[11, 6] = sumenergycost[11, 5] + energycost[11, 6];
   sumenergycost[11, 7] = sumenergycost[11, 6] + energycost[11, 7];
   sumenergycost[11, 8] = sumenergycost[11, 7] + energycost[11, 8];
   sumenergycost[11, 9] = sumenergycost[11, 8] + energycost[11, 9];
   sumenergycost[11, 10] = sumenergycost[11, 9] + energycost[11, 10];
   //Short Range Tower
   sumenergycost[12, 1] = energycost[12,1];
   sumenergycost[12, 2] = sumenergycost[12, 1] + energycost[12, 2];
   sumenergycost[12, 3] = sumenergycost[12, 2] + energycost[12, 3];
   sumenergycost[12, 4] = sumenergycost[12, 3] + energycost[12, 4];
   sumenergycost[12, 5] = sumenergycost[12, 4] + energycost[12, 5];
   sumenergycost[12, 6] = sumenergycost[12, 5] + energycost[12, 6];
   sumenergycost[12, 7] = sumenergycost[12, 6] + energycost[12, 7];
   sumenergycost[12, 8] = sumenergycost[12, 7] + energycost[12, 8];
   sumenergycost[12, 9] = sumenergycost[12, 8] + energycost[12, 9];
   sumenergycost[12, 10] = sumenergycost[12, 9] + energycost[12, 10];
   //Short Range Blast Tower
   sumenergycost[13, 1] = energycost[13,1];
   sumenergycost[13, 2] = sumenergycost[13, 1] + energycost[13, 2];
   sumenergycost[13, 3] = sumenergycost[13, 2] + energycost[13, 3];
   sumenergycost[13, 4] = sumenergycost[13, 3] + energycost[13, 4];
   sumenergycost[13, 5] = sumenergycost[13, 4] + energycost[13, 5];
   sumenergycost[13, 6] = sumenergycost[13, 5] + energycost[13, 6];
   sumenergycost[13, 7] = sumenergycost[13, 6] + energycost[13, 7];
   sumenergycost[13, 8] = sumenergycost[13, 7] + energycost[13, 8];
   sumenergycost[13, 9] = sumenergycost[13, 8] + energycost[13, 9];
   sumenergycost[13, 10] = sumenergycost[13, 9] + energycost[13, 10];
   //Inferno Tower
   sumenergycost[14, 1] = energycost[14,1];
   sumenergycost[14, 2] = sumenergycost[14, 1] + energycost[14, 2];
   sumenergycost[14, 3] = sumenergycost[14, 2] + energycost[14, 3];
   sumenergycost[14, 4] = sumenergycost[14, 3] + energycost[14, 4];
   sumenergycost[14, 5] = sumenergycost[14, 4] + energycost[14, 5];
   sumenergycost[14, 6] = sumenergycost[14, 5] + energycost[14, 6];
   sumenergycost[14, 7] = sumenergycost[14, 6] + energycost[14, 7];
   sumenergycost[14, 8] = sumenergycost[14, 7] + energycost[14, 8];
   sumenergycost[14, 9] = sumenergycost[14, 8] + energycost[14, 9];
   sumenergycost[14, 10] = sumenergycost[14, 9] + energycost[14, 10];
   //Healing Tower
   sumenergycost[15, 1] = energycost[15,1];
   sumenergycost[15, 2] = sumenergycost[15, 1] + energycost[15, 2];
   sumenergycost[15, 3] = sumenergycost[15, 2] + energycost[15, 3];
   sumenergycost[15, 4] = sumenergycost[15, 3] + energycost[15, 4];
   sumenergycost[15, 5] = sumenergycost[15, 4] + energycost[15, 5];
   sumenergycost[15, 6] = sumenergycost[15, 5] + energycost[15, 6];
   sumenergycost[15, 7] = sumenergycost[15, 6] + energycost[15, 7];
   sumenergycost[15, 8] = sumenergycost[15, 7] + energycost[15, 8];
   sumenergycost[15, 9] = sumenergycost[15, 8] + energycost[15, 9];
   sumenergycost[15, 10] = sumenergycost[15, 9] + energycost[15, 10];
   
   
   
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
