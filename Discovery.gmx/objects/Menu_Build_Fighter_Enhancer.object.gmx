<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Menu_Build_Fighter_Enhancer</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>Menu_Object</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Lock_x = x - Options_Window.x;
Lock_y = y - Options_Window.y;

Active = 0;
Type = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = Options_Window.x + Lock_x;
y = Options_Window.y + Lock_y;

if( Controller.masterWood &gt;= Info.sumwoodcost[6, Controller.CurrentLevel[6]] &amp;&amp; Controller.masterOre &gt;= Info.sumorecost[6, Controller.CurrentLevel[6]] &amp;&amp; Controller.masterEssence &gt;= Info.sumessencecost[6, Controller.CurrentLevel[6]] &amp;&amp; Controller.masterEnergy &gt;= Info.sumenergycost[6, Controller.CurrentLevel[6]] )
{
    //Unit Cap dependency
    if( instance_number(Fighter_Enhancer) &lt; Info.unitcap[6, Controller.CurrentLevel[6]] )
    {
        Available = 1;
    }
    else
    {
        Available = 0;
    }
}
else
{
    Available = 0;
}

if( Available == 1 )
{
    if( Active == 0 )
    {
        image_alpha = 1;
    }
    else if( Active == 1 )
    {
        image_alpha = .5;
    }
}
else
{
    image_alpha = 0;
}

if( (Controller.Selected) == 0 )
{
    instance_destroy();
}
else if( (Controller.Selected).Type != 0 )
{
    instance_destroy();
}
else if( Options_Window.Load == 1 )
{
    instance_destroy();
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if mouse is hovering display Cost of option in Display
    //if mouse_x is greater than or equal to x
        //AND less than or equal to x + the width of the sprite
    //AND if mouse_y is greater than or equal to y
        //AND less than or equal to y + the height of the sprite
    
if( (mouse_x &gt;= x &amp;&amp; mouse_x &lt;= (x + sprite_width) ) &amp;&amp; (mouse_y &gt;= y &amp;&amp; mouse_y &lt;= (y + sprite_height) ) )
{
    if( Available == 1 )
    {
        Display.CurrentWood = Info.sumwoodcost[6, Controller.CurrentLevel[6]];
        Display.CurrentOre = Info.sumorecost[6, Controller.CurrentLevel[6]];
        Display.CurrentEssence = Info.sumessencecost[6, Controller.CurrentLevel[6]];
        Display.CurrentEnergy = Info.sumenergycost[6, Controller.CurrentLevel[6]];
    }
}

/*

//2nd top left (selected costs)
    //units
if( (Controller.Selected).Type &gt;= 0 &amp;&amp; (Controller.Selected).Type &lt;= 3 )
{
    draw_text(view_xview[0]+130+70, view_yview[0], Info.woodcost[(Controller.Selected).Type, (Controller.Selected).Level]);
    draw_text(view_xview[0]+130+70, view_yview[0]+22, Info.orecost[(Controller.Selected).Type, (Controller.Selected).Level]);
    draw_text(view_xview[0]+130+70, view_yview[0]+44, Info.essencecost[(Controller.Selected).Type, (Controller.Selected).Level]);
    draw_text(view_xview[0]+130+70, view_yview[0]+66, Info.woodcost[(Controller.Selected).Type, (Controller.Selected).Level]);
}
//buildings
else if( ((Controller.Selected).Type &gt;= 4 &amp;&amp; (Controller.Selected).Type &lt;= 8) || ((Controller.Selected).Type &gt;= 10 &amp;&amp; (Controller.Selected).Type &lt;= 15) )
{
    draw_text(view_xview[0]+130+70, view_yview[0], Info.sumwoodcost[(Controller.Selected).Type, (Controller.Selected).Level]);
    draw_text(view_xview[0]+130+70, view_yview[0]+22, Info.sumorecost[(Controller.Selected).Type, (Controller.Selected).Level]);
    draw_text(view_xview[0]+130+70, view_yview[0]+44, Info.sumessencecost[(Controller.Selected).Type, (Controller.Selected).Level]);
    draw_text(view_xview[0]+130+70, view_yview[0]+66, Info.sumwoodcost[(Controller.Selected).Type, (Controller.Selected).Level]);

}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="53">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if( Active == 1 )
{
    //if mouse is in bounds AND this command option is selected
    if( mouse_y &lt; view_yview[0] + Controller.Interface_Offset &amp;&amp; Controller.Option == Type)
    {
        (Controller.Selected).Destination_x = mouse_x;
        (Controller.Selected).Destination_y = mouse_y;
        Active = 0;
        
        Controller.Time = 0;
        
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if( Available == 1)
{
    //deduct cost
    Controller.masterWood = Controller.masterWood - Info.sumwoodcost[6, Controller.CurrentLevel[6]];
    Controller.masterOre = Controller.masterOre - Info.sumorecost[6, Controller.CurrentLevel[6]];
    Controller.masterEssence = Controller.masterEssence - Info.sumessencecost[6, Controller.CurrentLevel[6]];
    Controller.masterEnergy = Controller.masterEnergy - Info.sumenergycost[6, Controller.CurrentLevel[6]];


if( Active == 0 )
{
   Active = 1;
   (Controller.Command) = 1;
   (Controller.Option) = Type;
   
   image_alpha = 0.5;
}
else if( Active == 1 )
{
   Active = 0;
   (Controller.Command) = 0;
   (Controller.Option) = 0;
   
   image_alpha = 1;
}

instance_create(mouse_x, mouse_y, Fighter_Enhancer);

}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
