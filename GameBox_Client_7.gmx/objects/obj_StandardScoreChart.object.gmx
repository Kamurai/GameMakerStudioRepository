<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_StandardScoreChart</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>80</depth>
  <persistent>0</persistent>
  <parentName>obj_Chart</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw main sprite
//draw_sprite(sprite_index,image_single,x,y);
//draw_sprite_ext(sprite_index,image_single,x,y,image_xscale,image_yscale,image_angle,c_white,1);



</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
//Increment
draw_rectangle_color(Increment_Left_Bound, Increment_Upper_Bound, Increment_Right_Bound, Increment_Lower_Bound, c_blue, c_blue, c_blue, c_blue, true)
//Decrement
draw_rectangle_color(Decrement_Left_Bound, Decrement_Upper_Bound, Decrement_Right_Bound, Decrement_Lower_Bound, c_green, c_green, c_green, c_green, true)
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_CreateAnyChart();
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
Title_Upper_Bound = y - (sprite_height/2);
Title_Lower_Bound = Title_Upper_Bound + 12-1; //y - (sprite_height/2) + 12-1;
Title_Left_Bound  = x - (sprite_width/2);
Title_Right_Bound = Title_Left_Bound + sprite_width-1; //x + (sprite_width/2)-1;

Increment_Upper_Bound = Title_Upper_Bound + 83;
Increment_Lower_Bound = y + (sprite_height/2)-1;
Increment_Left_Bound  = x;
Increment_Right_Bound = x + (sprite_width/2)-1;

Decrement_Upper_Bound = Title_Upper_Bound + 83;
Decrement_Lower_Bound = y + (sprite_height/2)-1;
Decrement_Left_Bound  = x - (sprite_width/2);
Decrement_Right_Bound = x-1;
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>isDraw = true;
isWriting=false;
Title = obj_Player.Name;
Score = 0;
Tracker = 0;

//Sub Component Offsets for Rotation
OriginalChildTitleDiffX     = -1*(sprite_width/2)+4;
OriginalChildTitleDiffY     = -1*(sprite_height/2);
OriginalChildTitleBoxDiffX  = -1*(sprite_width/2);
OriginalChildTitleBoxDiffY  = -1*(sprite_height/2);
OriginalChildScoreDiffX     = -1*(sprite_width/2)+4;
OriginalChildScoreDiffY     = -1*(sprite_height/2)+14;
OriginalChildIncrementDiffX = -1*(sprite_width/4);
OriginalChildIncrementDiffY = 42;
OriginalChildDecrementDiffX = (sprite_width/4);
OriginalChildDecrementDiffY = 42;

//CurrentTitle_Left_Bound  = x - (sprite_width/2);
//CurrentTitle_Right_Bound = CurrentTitle_Left_Bound + sprite_width-1;
//CurrentTitle_Upper_Bound = y - (sprite_height/2);
//CurrentTitle_Lower_Bound = CurrentTitle_Upper_Bound + 12-1;
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//SubComponents

ChildTitle = -1;
obj_Controller.Pass = id;
instance_create(x - (sprite_width/2)+4,y - (sprite_height/2),obj_StandardChartTitle);
ChildTitleDiffX = x - (ChildTitle).x;
ChildTitleDiffY = y - (ChildTitle).y;
(ChildTitle).depth = depth -1;

ChildTitleBox = -1;
obj_Controller.Pass = id;
instance_create(x - (sprite_width/2),y - (sprite_height/2),obj_StandardChartTitleBox);
ChildTitleBoxDiffX = x - (ChildTitleBox).x;
ChildTitleBoxDiffY = y - (ChildTitleBox).y;
(ChildTitle).depth = depth -1;

ChildScore = -1;
obj_Controller.Pass = id;
instance_create(x - (sprite_width/2)+4,y - (sprite_height/2)+14,obj_StandardChartScore);
ChildScoreDiffX = x - (ChildScore).x;
ChildScoreDiffY = y - (ChildScore).y;
(ChildScore).depth = depth -1;

ChildIncrementButton = -1;
obj_Controller.Pass = id;
instance_create(x - (sprite_width/4),y + 42,obj_StandardChartIncrement);
ChildIncrementDiffX = x - (ChildIncrementButton).x;
ChildIncrementDiffY = y - (ChildIncrementButton).y;
(ChildIncrementButton).depth = depth -1;

ChildDecrementButton = -1;
obj_Controller.Pass = id;
instance_create(x + (sprite_width/4),y + 42,obj_StandardChartDecrement);
ChildDecrementDiffX = x - (ChildDecrementButton).x;
ChildDecrementDiffY = y - (ChildDecrementButton).y;
(ChildDecrementButton).depth = depth -1;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_DestroyAnyChart();

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>    if(instance_exists(ChildTitle))
    {
        with( (ChildTitle) )
        {
            instance_destroy();
        }
    }
    if(instance_exists(ChildTitleBox))
    {
        with( (ChildTitleBox) )
        {
            instance_destroy();
        }
    }
    if(instance_exists(ChildScore))
    {
         with( (ChildScore) )
        {
            instance_destroy();
        }
    }
    if(instance_exists(ChildIncrementButton))
    {
        with( (ChildIncrementButton) )
        {
            instance_destroy();
        }
    }
    if(instance_exists(ChildDecrementButton))
    {
        with( (ChildDecrementButton) )
        {
            instance_destroy();
        }
    }

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>

/*
CurrentTitle_Left_Bound  = x - (sprite_width/2);
CurrentTitle_Right_Bound = CurrentTitle_Left_Bound + sprite_width-1;
CurrentTitle_Upper_Bound = y - (sprite_height/2);
CurrentTitle_Lower_Bound = CurrentTitle_Upper_Bound + 12-1;
*/

if(Selected)
{
    x = (mouse_x - temp_x);
    y = (mouse_y - temp_y);
}

if(Lastx != x || Lasty != y)
{
    (ChildTitle).x               = x - ChildTitleDiffX;
    (ChildTitle).y               = y - ChildTitleDiffY;
    
    (ChildTitleBox).x            = x - ChildTitleBoxDiffX;
    (ChildTitleBox).y            = y - ChildTitleBoxDiffY;
    
    (ChildScore).x               = x - ChildScoreDiffX;
    (ChildScore).y               = y - ChildScoreDiffY;
    
    (ChildIncrementButton).x     = x - ChildIncrementDiffX;
    (ChildIncrementButton).y     = y - ChildIncrementDiffY;
     
    (ChildDecrementButton).x     = x - ChildDecrementDiffX;
    (ChildDecrementButton).y     = y - ChildDecrementDiffY;
}



scr_StepAnyChart();
if(Tracker &gt; 0)
{
    Tracker -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="81">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_RotateStandardChart(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scr_RotateStandardChart(-1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_Player.Holding == 0 || ((obj_Player.Holding == 1 &amp;&amp; Hold == obj_Player.Index)))
{
/*
    
    //if clicking in the chart title
    if( ((mouse_x &gt;= CurrentTitle_Left_Bound) &amp;&amp; (mouse_x &lt;= CurrentTitle_Right_Bound)) &amp;&amp; ((mouse_y &gt;= CurrentTitle_Upper_Bound) &amp;&amp; (mouse_y &lt;= CurrentTitle_Lower_Bound))  )
    {
        if(Tracker == 0)
        {
            Tracker = 5;
        }
        else if(Tracker &gt; 0)
        {
            if(isWriting=false) 
            {
                with(obj_Chart)
                {
                    isWriting=false;
                }
                obj_ChatInput.isWriting = false;
            
                isWriting=true;
                keyboard_string="";
                
                obj_Controller.FreeZoom = false;
                obj_Controller.FreeMovement = false;
                obj_Controller.FreeRotation = false;
            }
            
        }
        
    }
    //if clicking in the increment button
    else if( ((mouse_x &gt;= Increment_Left_Bound) &amp;&amp; (mouse_x &lt;= Increment_Right_Bound)) &amp;&amp; ((mouse_y &gt;= Increment_Upper_Bound) &amp;&amp; (mouse_y &lt;= Increment_Lower_Bound))  )
    {
        Score += 1;
        scr_SendUpdateChartScore();
    }
    //if clicking in the decrement button
    else if( ((mouse_x &gt;= Decrement_Left_Bound) &amp;&amp; (mouse_x &lt;= Decrement_Right_Bound)) &amp;&amp; ((mouse_y &gt;= Decrement_Upper_Bound) &amp;&amp; (mouse_y &lt;= Decrement_Lower_Bound))  )
    {
        Score -= 1;
        scr_SendUpdateChartScore();
    }
    else
    {
    }
    */
    if(position_meeting(mouse_x, mouse_y, obj_SubComponent) == false)
    {
        scr_LClickAnyChart();
    }
    if(instance_exists(ChildTitle))
    {
        (ChildTitle).depth = depth-1;
    }
    if(instance_exists(ChildTitleBox))
    {
        (ChildTitleBox).depth = depth-1;
    }
    if(instance_exists(ChildScore))
    {
         (ChildScore).depth = depth-1;
    }
    if(instance_exists(ChildIncrementButton))
    {
        (ChildIncrementButton).depth = depth-1;
    }
    if(instance_exists(ChildDecrementButton))
    {
        (ChildDecrementButton).depth = depth-1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(isWriting == true) 
{
    Title = keyboard_string;
    scr_SendUpdateChartTitle();
    isWriting=false;
    
    keyboard_string="";
    
    obj_Controller.FreeZoom = true;
    obj_Controller.FreeMovement = true;
    obj_Controller.FreeRotation = true;

}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
