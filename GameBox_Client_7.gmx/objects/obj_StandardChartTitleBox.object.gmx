<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_ChartTitleBox</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>80</depth>
  <persistent>0</persistent>
  <parentName>obj_SubComponent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ParentIndex = obj_Controller.Pass;
//Index = (ParentIndex).SubMenuIndex;
(ParentIndex).ChildTitleBox = id;

//ChildTitleX = (ParentIndex).x - ((ParentIndex).sprite_width/2);
//ChildTitleY = (ParentIndex).y - ((ParentIndex).sprite_height/2);

//x = ChildTitleX;
//y = ChildTitleY;
//depth = (ParentIndex).depth-1;

scr_DefineSubForRotation(id,ParentIndex);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(obj_Player.Holding == 0 || ((obj_Player.Holding == 1 &amp;&amp; Hold == obj_Player.Index)))
{
    if((ParentIndex).Tracker == 0)
    {
        (ParentIndex).Tracker = 10;
    }
    else if((ParentIndex).Tracker &gt; 0)
    {
        if((ParentIndex).isWriting=false) 
        {
            with(obj_Chart)
            {
                isWriting=false;
            }
            obj_ChatInput.isWriting = false;
        
            (ParentIndex).isWriting=true;
            keyboard_string="";
            
            (ParentIndex).Title=keyboard_string;
            
            obj_Controller.FreeZoom = false;
            obj_Controller.FreeMovement = false;
            obj_Controller.FreeRotation = false;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Title Box
if((ParentIndex).isWriting == true)
{
    //draw_set_font(font1);
    //draw_rectangle_color(CurrentTitle_Left_Bound, CurrentTitle_Upper_Bound, CurrentTitle_Right_Bound, CurrentTitle_Lower_Bound, c_red, c_red, c_red, c_red, true)
    draw_sprite_ext(spr_ChartTitleBox,1,x,y,(ParentIndex).DynScaleX,(ParentIndex).DynScaleY,(ParentIndex).image_angle,c_white,1);
}
else
{
    draw_sprite_ext(spr_ChartTitleBox,0,x,y,(ParentIndex).DynScaleX,(ParentIndex).DynScaleY,(ParentIndex).image_angle,c_white,1);
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>32,48</point>
    <point>48,48</point>
  </PhysicsShapePoints>
</object>
